"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@near-js";
exports.ids = ["vendor-chunks/@near-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/lib/browser_local_storage_key_store.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/lib/browser_local_storage_key_store.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BrowserLocalStorageKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass BrowserLocalStorageKeyStore extends keystores_1.KeyStore {\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Stores a {@link KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n        });\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    this.localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    result.add(parts[1]);\n                }\n            }\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId) {\n                        result.push(parts[0]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage key that's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/lib/browser_local_storage_key_store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/lib/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractBrowserLocalStorageKeyStore = exports.BrowserLocalStorageKeyStore = void 0;\nvar browser_local_storage_key_store_1 = __webpack_require__(/*! ./browser_local_storage_key_store */ \"(ssr)/./node_modules/@near-js/keystores-browser/lib/browser_local_storage_key_store.js\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", ({ enumerable: true, get: function () { return browser_local_storage_key_store_1.BrowserLocalStorageKeyStore; } }));\nvar multi_contract_browser_local_storage_key_store_1 = __webpack_require__(/*! ./multi_contract_browser_local_storage_key_store */ \"(ssr)/./node_modules/@near-js/keystores-browser/lib/multi_contract_browser_local_storage_key_store.js\");\nObject.defineProperty(exports, \"MultiContractBrowserLocalStorageKeyStore\", ({ enumerable: true, get: function () { return multi_contract_browser_local_storage_key_store_1.MultiContractBrowserLocalStorageKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdEQUFnRCxHQUFHLG1DQUFtQztBQUN0Rix3Q0FBd0MsbUJBQU8sQ0FBQyxpSUFBbUM7QUFDbkYsK0RBQThELEVBQUUscUNBQXFDLHlFQUF5RSxFQUFDO0FBQy9LLHVEQUF1RCxtQkFBTyxDQUFDLCtKQUFrRDtBQUNqSCw0RUFBMkUsRUFBRSxxQ0FBcUMscUdBQXFHLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL2xpYi9pbmRleC5qcz9lNjcxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aUNvbnRyYWN0QnJvd3NlckxvY2FsU3RvcmFnZUtleVN0b3JlID0gZXhwb3J0cy5Ccm93c2VyTG9jYWxTdG9yYWdlS2V5U3RvcmUgPSB2b2lkIDA7XG52YXIgYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZV8xID0gcmVxdWlyZShcIi4vYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZV8xLkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZTsgfSB9KTtcbnZhciBtdWx0aV9jb250cmFjdF9icm93c2VyX2xvY2FsX3N0b3JhZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tdWx0aV9jb250cmFjdF9icm93c2VyX2xvY2FsX3N0b3JhZ2Vfa2V5X3N0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTXVsdGlDb250cmFjdEJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbXVsdGlfY29udHJhY3RfYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZV8xLk11bHRpQ29udHJhY3RCcm93c2VyTG9jYWxTdG9yYWdlS2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/lib/multi_contract_browser_local_storage_key_store.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/lib/multi_contract_browser_local_storage_key_store.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractBrowserLocalStorageKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.MultiContractBrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of MultiContractBrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass MultiContractBrowserLocalStorageKeyStore extends keystores_1.MultiContractKeyStore {\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix || LOCAL_STORAGE_KEY_PREFIX;\n    }\n    /**\n     * Stores a {@link utils/key_pair!KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     * @param contractId The contract to store in local storage\n     */\n    setKey(networkId, accountId, keyPair, contractId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId, contractId), keyPair.toString());\n        });\n    }\n    /**\n     * Gets a {@link utils/key_pair!KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param contractId The NEAR contract tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId, contractId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId, contractId));\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link utils/key_pair!KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param contractId The NEAR contract tied to the key pair\n     */\n    removeKey(networkId, accountId, contractId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId, contractId));\n        });\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    this.localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    result.add(parts[1]);\n                }\n            }\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = [];\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId) {\n                        result.push(parts[0]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * Gets the contract(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The targeted account.\n     */\n    getContracts(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = [];\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId && parts[0] === accountId) {\n                        result.push(parts[2]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @param contractId The NEAR contract tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId, contractId) {\n        return `${this.prefix}${accountId}:${networkId}:${contractId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.MultiContractBrowserLocalStorageKeyStore = MultiContractBrowserLocalStorageKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/lib/multi_contract_browser_local_storage_key_store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeySize = exports.KeyType = void 0;\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n    KeyType[KeyType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nvar KeySize;\n(function (KeySize) {\n    KeySize[KeySize[\"SECRET_KEY\"] = 32] = \"SECRET_KEY\";\n    KeySize[KeySize[\"ED25519_PUBLIC_KEY\"] = 32] = \"ED25519_PUBLIC_KEY\";\n    KeySize[KeySize[\"SECP256k1_PUBLIC_KEY\"] = 64] = \"SECP256k1_PUBLIC_KEY\";\n})(KeySize = exports.KeySize || (exports.KeySize = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyxlQUFlLEtBQUs7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDLGVBQWUsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzP2ZjMzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVNpemUgPSBleHBvcnRzLktleVR5cGUgPSB2b2lkIDA7XG4vKiogQWxsIHN1cHBvcnRlZCBrZXkgdHlwZXMgKi9cbnZhciBLZXlUeXBlO1xuKGZ1bmN0aW9uIChLZXlUeXBlKSB7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiRUQyNTUxOVwiXSA9IDBdID0gXCJFRDI1NTE5XCI7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiU0VDUDI1NksxXCJdID0gMV0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoS2V5VHlwZSA9IGV4cG9ydHMuS2V5VHlwZSB8fCAoZXhwb3J0cy5LZXlUeXBlID0ge30pKTtcbnZhciBLZXlTaXplO1xuKGZ1bmN0aW9uIChLZXlTaXplKSB7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUkVUX0tFWVwiXSA9IDMyXSA9IFwiU0VDUkVUX0tFWVwiO1xuICAgIEtleVNpemVbS2V5U2l6ZVtcIkVEMjU1MTlfUFVCTElDX0tFWVwiXSA9IDMyXSA9IFwiRUQyNTUxOV9QVUJMSUNfS0VZXCI7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUDI1NmsxX1BVQkxJQ19LRVlcIl0gPSA2NF0gPSBcIlNFQ1AyNTZrMV9QVUJMSUNfS0VZXCI7XG59KShLZXlTaXplID0gZXhwb3J0cy5LZXlTaXplIHx8IChleHBvcnRzLktleVNpemUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.KeyPairSecp256k1 = exports.KeyPairEd25519 = exports.KeyPair = exports.KeyType = void 0;\nvar constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\");\nObject.defineProperty(exports, \"KeyType\", ({ enumerable: true, get: function () { return constants_1.KeyType; } }));\nvar key_pair_1 = __webpack_require__(/*! ./key_pair */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair.js\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nvar key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return key_pair_ed25519_1.KeyPairEd25519; } }));\nvar key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nObject.defineProperty(exports, \"KeyPairSecp256k1\", ({ enumerable: true, get: function () { return key_pair_secp256k1_1.KeyPairSecp256k1; } }));\nvar public_key_1 = __webpack_require__(/*! ./public_key */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js\");\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return public_key_1.PublicKey; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsZUFBZSxHQUFHLGVBQWU7QUFDekcsa0JBQWtCLG1CQUFPLENBQUMsa0hBQWE7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2pILGlCQUFpQixtQkFBTyxDQUFDLGdIQUFZO0FBQ3JDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCx5QkFBeUIsbUJBQU8sQ0FBQyxnSUFBb0I7QUFDckQsa0RBQWlELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3RJLDJCQUEyQixtQkFBTyxDQUFDLG9JQUFzQjtBQUN6RCxvREFBbUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDNUksbUJBQW1CLG1CQUFPLENBQUMsb0hBQWM7QUFDekMsNkNBQTRDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9pbmRleC5qcz84Mjg0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QdWJsaWNLZXkgPSBleHBvcnRzLktleVBhaXJTZWNwMjU2azEgPSBleHBvcnRzLktleVBhaXJFZDI1NTE5ID0gZXhwb3J0cy5LZXlQYWlyID0gZXhwb3J0cy5LZXlUeXBlID0gdm9pZCAwO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuS2V5VHlwZTsgfSB9KTtcbnZhciBrZXlfcGFpcl8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl8xLktleVBhaXI7IH0gfSk7XG52YXIga2V5X3BhaXJfZWQyNTUxOV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfZWQyNTUxOVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJFZDI1NTE5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9lZDI1NTE5XzEuS2V5UGFpckVkMjU1MTk7IH0gfSk7XG52YXIga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyU2VjcDI1NmsxXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxOyB9IH0pO1xudmFyIHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdWJsaWNLZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmxpY19rZXlfMS5QdWJsaWNLZXk7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPair = void 0;\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nconst key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nclass KeyPair extends key_pair_base_1.KeyPairBase {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return key_pair_ed25519_1.KeyPairEd25519.fromRandom();\n            case 'SECP256K1': return key_pair_secp256k1_1.KeyPairSecp256k1.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    /**\n     * Creates a key pair from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {KeyPair} The key pair created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new key_pair_ed25519_1.KeyPairEd25519(parts[1]);\n                case 'SECP256K1': return new key_pair_secp256k1_1.KeyPairSecp256k1(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHdCQUF3QixtQkFBTyxDQUFDLDBIQUFpQjtBQUNqRCwyQkFBMkIsbUJBQU8sQ0FBQyxnSUFBb0I7QUFDdkQsNkJBQTZCLG1CQUFPLENBQUMsb0lBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxTQUFTO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanM/NmIzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpciA9IHZvaWQgMDtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBrZXlfcGFpcl9lZDI1NTE5XzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9lZDI1NTE5XCIpO1xuY29uc3Qga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5jbGFzcyBLZXlQYWlyIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY3VydmUgTmFtZSBvZiBlbGxpcHRpY2FsIGN1cnZlLCBjYXNlLWluc2Vuc2l0aXZlXG4gICAgICogQHJldHVybnMgUmFuZG9tIEtleVBhaXIgYmFzZWQgb24gdGhlIGN1cnZlXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oY3VydmUpIHtcbiAgICAgICAgc3dpdGNoIChjdXJ2ZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICAgICAgICBjYXNlICdFRDI1NTE5JzogcmV0dXJuIGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBjYXNlICdTRUNQMjU2SzEnOiByZXR1cm4ga2V5X3BhaXJfc2VjcDI1NmsxXzEuS2V5UGFpclNlY3AyNTZrMS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmUgJHtjdXJ2ZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEga2V5IHBhaXIgZnJvbSBhbiBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHBhcmFtIGVuY29kZWRLZXkgVGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKiBAcmV0dXJucyB7S2V5UGFpcn0gVGhlIGtleSBwYWlyIGNyZWF0ZWQgZnJvbSB0aGUgZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGVuY29kZWRLZXkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBlbmNvZGVkS2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocGFydHNbMF0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0VEMjU1MTknOiByZXR1cm4gbmV3IGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOShwYXJ0c1sxXSk7XG4gICAgICAgICAgICAgICAgY2FzZSAnU0VDUDI1NksxJzogcmV0dXJuIG5ldyBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxKHBhcnRzWzFdKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmU6ICR7cGFydHNbMF19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jb2RlZCBrZXkgZm9ybWF0LCBtdXN0IGJlIDxjdXJ2ZT46PGVuY29kZWQga2V5PicpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyID0gS2V5UGFpcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairBase = void 0;\nclass KeyPairBase {\n}\nexports.KeyPairBase = KeyPairBase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcz8wODBjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlQYWlyQmFzZSA9IHZvaWQgMDtcbmNsYXNzIEtleVBhaXJCYXNlIHtcbn1cbmV4cG9ydHMuS2V5UGFpckJhc2UgPSBLZXlQYWlyQmFzZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairEd25519 = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"(ssr)/./node_modules/@noble/curves/ed25519.js\");\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js\");\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        this.publicKey = new public_key_1.PublicKey({ keyType: constants_1.KeyType.ED25519, data: publicKey });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairEd25519((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    /**\n     * Signs a message using the key pair's secret key.\n     * @param message The message to be signed.\n     * @returns {Signature} The signature object containing the signature and the public key.\n     */\n    sign(message) {\n        const signature = ed25519_1.ed25519.sign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    /**\n     * Verifies the signature of a message using the key pair's public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    /**\n     * Returns a string representation of the key pair in the format 'ed25519:[extendedSecretKey]'.\n     * @returns {string} The string representation of the key pair.\n     */\n    toString() {\n        return `ed25519:${this.extendedSecretKey}`;\n    }\n    /**\n     * Retrieves the public key associated with the key pair.\n     * @returns {PublicKey} The public key.\n     */\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfZWQyNTUxOS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQyxnSEFBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsNEVBQXVCO0FBQ2pELHNDQUFzQyxtQkFBTyxDQUFDLDhEQUFhO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLGtIQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLDBIQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyxvSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsdURBQXVEO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EsMEJBQTBCLHVCQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9lZDI1NTE5LmpzP2I1ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGVkMjU1MTlfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2VkMjU1MTlcIik7XG5jb25zdCByYW5kb21ieXRlc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyYW5kb21ieXRlc1wiKSk7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBwdWJsaWNfa2V5XzEgPSByZXF1aXJlKFwiLi9wdWJsaWNfa2V5XCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHByb3ZpZGVzIGtleSBwYWlyIGZ1bmN0aW9uYWxpdHkgZm9yIEVkMjU1MTkgY3VydmU6XG4gKiBnZW5lcmF0aW5nIGtleSBwYWlycywgZW5jb2Rpbmcga2V5IHBhaXJzLCBzaWduaW5nIGFuZCB2ZXJpZnlpbmcuXG4gKi9cbmNsYXNzIEtleVBhaXJFZDI1NTE5IGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3QgcHVibGljS2V5ID0gZWQyNTUxOV8xLmVkMjU1MTkuZ2V0UHVibGljS2V5KG5ldyBVaW50OEFycmF5KHNlY3JldEtleSkpO1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IG5ldyBwdWJsaWNfa2V5XzEuUHVibGljS2V5KHsga2V5VHlwZTogY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5LCBkYXRhOiBwdWJsaWNLZXkgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9ICgwLCByYW5kb21ieXRlc18xLmRlZmF1bHQpKGNvbnN0YW50c18xLktleVNpemUuU0VDUkVUX0tFWSk7XG4gICAgICAgIGNvbnN0IHB1YmxpY0tleSA9IGVkMjU1MTlfMS5lZDI1NTE5LmdldFB1YmxpY0tleShuZXcgVWludDhBcnJheShzZWNyZXRLZXkpKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyRWQyNTUxOSgoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKShleHRlbmRlZFNlY3JldEtleSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3Mgc2VjcmV0IGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSBzaWduZWQuXG4gICAgICogQHJldHVybnMge1NpZ25hdHVyZX0gVGhlIHNpZ25hdHVyZSBvYmplY3QgY29udGFpbmluZyB0aGUgc2lnbmF0dXJlIGFuZCB0aGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBzaWduKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gZWQyNTUxOV8xLmVkMjU1MTkuc2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmUsIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmVyaWZpZXMgdGhlIHNpZ25hdHVyZSBvZiBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3MgcHVibGljIGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSB2ZXJpZmllZC5cbiAgICAgKiBAcGFyYW0gc2lnbmF0dXJlIFRoZSBzaWduYXR1cmUgdG8gYmUgdmVyaWZpZWQuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgc2lnbmF0dXJlIGlzIHZhbGlkLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICB2ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleS52ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5IHBhaXIgaW4gdGhlIGZvcm1hdCAnZWQyNTUxOTpbZXh0ZW5kZWRTZWNyZXRLZXldJy5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXkgcGFpci5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBlZDI1NTE5OiR7dGhpcy5leHRlbmRlZFNlY3JldEtleX1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHB1YmxpYyBrZXkgYXNzb2NpYXRlZCB3aXRoIHRoZSBrZXkgcGFpci5cbiAgICAgKiBAcmV0dXJucyB7UHVibGljS2V5fSBUaGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleTtcbiAgICB9XG59XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gS2V5UGFpckVkMjU1MTk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairSecp256k1 = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"(ssr)/./node_modules/secp256k1/index.js\"));\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js\");\n/**\n * This class provides key pair functionality for secp256k1 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n * nearcore expects secp256k1 public keys to be 64 bytes at all times,\n * even when string encoded the secp256k1 library returns 65 byte keys\n * (including a 1 byte header that indicates how the pubkey was encoded).\n * We'll force the secp256k1 library to always encode uncompressed\n * keys with the corresponding 0x04 header byte, then manually\n * insert/remove that byte as needed.\n */\nclass KeyPairSecp256k1 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const data = withHeader.subarray(1, withHeader.length); // remove the 0x04 header byte\n        this.publicKey = new public_key_1.PublicKey({\n            keyType: constants_1.KeyType.SECP256K1,\n            data\n        });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        // TODO: find better way to generate PK\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const publicKey = withHeader.subarray(1, withHeader.length);\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairSecp256k1((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    sign(message) {\n        // nearcore expects 65 byte signatures formed by appending the recovery id to the 64 byte signature\n        const { signature, recid } = secp256k1_1.default.ecdsaSign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature: new Uint8Array([...signature, recid]), publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `secp256k1:${this.extendedSecretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairSecp256k1 = KeyPairSecp256k1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfc2VjcDI1NmsxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG9CQUFvQixtQkFBTyxDQUFDLGtIQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLDBIQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyxvSEFBYztBQUMzQyxvQ0FBb0MsbUJBQU8sQ0FBQywwREFBVztBQUN2RCxzQ0FBc0MsbUJBQU8sQ0FBQyw4REFBYTtBQUMzRCxnQkFBZ0IsbUJBQU8sQ0FBQyxnSEFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9zZWNwMjU2azEuanM/ZjM3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpclNlY3AyNTZrMSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3Qga2V5X3BhaXJfYmFzZV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfYmFzZVwiKTtcbmNvbnN0IHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5jb25zdCBzZWNwMjU2azFfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2VjcDI1NmsxXCIpKTtcbmNvbnN0IHJhbmRvbWJ5dGVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcHJvdmlkZXMga2V5IHBhaXIgZnVuY3Rpb25hbGl0eSBmb3Igc2VjcDI1NmsxIGN1cnZlOlxuICogZ2VuZXJhdGluZyBrZXkgcGFpcnMsIGVuY29kaW5nIGtleSBwYWlycywgc2lnbmluZyBhbmQgdmVyaWZ5aW5nLlxuICogbmVhcmNvcmUgZXhwZWN0cyBzZWNwMjU2azEgcHVibGljIGtleXMgdG8gYmUgNjQgYnl0ZXMgYXQgYWxsIHRpbWVzLFxuICogZXZlbiB3aGVuIHN0cmluZyBlbmNvZGVkIHRoZSBzZWNwMjU2azEgbGlicmFyeSByZXR1cm5zIDY1IGJ5dGUga2V5c1xuICogKGluY2x1ZGluZyBhIDEgYnl0ZSBoZWFkZXIgdGhhdCBpbmRpY2F0ZXMgaG93IHRoZSBwdWJrZXkgd2FzIGVuY29kZWQpLlxuICogV2UnbGwgZm9yY2UgdGhlIHNlY3AyNTZrMSBsaWJyYXJ5IHRvIGFsd2F5cyBlbmNvZGUgdW5jb21wcmVzc2VkXG4gKiBrZXlzIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgMHgwNCBoZWFkZXIgYnl0ZSwgdGhlbiBtYW51YWxseVxuICogaW5zZXJ0L3JlbW92ZSB0aGF0IGJ5dGUgYXMgbmVlZGVkLlxuICovXG5jbGFzcyBLZXlQYWlyU2VjcDI1NmsxIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3Qgd2l0aEhlYWRlciA9IHNlY3AyNTZrMV8xLmRlZmF1bHQucHVibGljS2V5Q3JlYXRlKG5ldyBVaW50OEFycmF5KHNlY3JldEtleSksIGZhbHNlKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHdpdGhIZWFkZXIuc3ViYXJyYXkoMSwgd2l0aEhlYWRlci5sZW5ndGgpOyAvLyByZW1vdmUgdGhlIDB4MDQgaGVhZGVyIGJ5dGVcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBuZXcgcHVibGljX2tleV8xLlB1YmxpY0tleSh7XG4gICAgICAgICAgICBrZXlUeXBlOiBjb25zdGFudHNfMS5LZXlUeXBlLlNFQ1AyNTZLMSxcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIC8vIFRPRE86IGZpbmQgYmV0dGVyIHdheSB0byBnZW5lcmF0ZSBQS1xuICAgICAgICBjb25zdCBzZWNyZXRLZXkgPSAoMCwgcmFuZG9tYnl0ZXNfMS5kZWZhdWx0KShjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpO1xuICAgICAgICBjb25zdCB3aXRoSGVhZGVyID0gc2VjcDI1NmsxXzEuZGVmYXVsdC5wdWJsaWNLZXlDcmVhdGUobmV3IFVpbnQ4QXJyYXkoc2VjcmV0S2V5KSwgZmFsc2UpO1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB3aXRoSGVhZGVyLnN1YmFycmF5KDEsIHdpdGhIZWFkZXIubGVuZ3RoKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyU2VjcDI1NmsxKCgwLCB1dGlsc18xLmJhc2VFbmNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KSk7XG4gICAgfVxuICAgIHNpZ24obWVzc2FnZSkge1xuICAgICAgICAvLyBuZWFyY29yZSBleHBlY3RzIDY1IGJ5dGUgc2lnbmF0dXJlcyBmb3JtZWQgYnkgYXBwZW5kaW5nIHRoZSByZWNvdmVyeSBpZCB0byB0aGUgNjQgYnl0ZSBzaWduYXR1cmVcbiAgICAgICAgY29uc3QgeyBzaWduYXR1cmUsIHJlY2lkIH0gPSBzZWNwMjU2azFfMS5kZWZhdWx0LmVjZHNhU2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmU6IG5ldyBVaW50OEFycmF5KFsuLi5zaWduYXR1cmUsIHJlY2lkXSksIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgdmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXkudmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYHNlY3AyNTZrMToke3RoaXMuZXh0ZW5kZWRTZWNyZXRLZXl9YDtcbiAgICB9XG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyU2VjcDI1NmsxID0gS2V5UGFpclNlY3AyNTZrMTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"(ssr)/./node_modules/@noble/curves/ed25519.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"(ssr)/./node_modules/secp256k1/index.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js\");\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: return 'ed25519';\n        case constants_1.KeyType.SECP256K1: return 'secp256k1';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return constants_1.KeyType.ED25519;\n        case 'secp256k1': return constants_1.KeyType.SECP256K1;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nclass ED25519PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.SECP256K1;\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === constants_1.KeyType.ED25519) {\n            this.ed25519Key = { keyType, data };\n        }\n        else if (keyType === constants_1.KeyType.SECP256K1) {\n            this.secp256k1Key = { keyType, data };\n        }\n    }\n    /**\n     * Creates a PublicKey instance from a string or an existing PublicKey instance.\n     * @param value The string or PublicKey instance to create a PublicKey from.\n     * @returns {PublicKey} The PublicKey instance.\n     */\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    /**\n     * Creates a PublicKey instance from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {PublicKey} The PublicKey instance created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        let publicKey;\n        let keyType;\n        if (parts.length === 1) {\n            publicKey = parts[0];\n        }\n        else if (parts.length === 2) {\n            publicKey = parts[1];\n            keyType = str_to_key_type(parts[0]);\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n        const decodedPublicKey = (0, utils_1.baseDecode)(publicKey);\n        if (!keyType) {\n            keyType = decodedPublicKey.length === constants_1.KeySize.SECP256k1_PUBLIC_KEY ? constants_1.KeyType.SECP256K1 : constants_1.KeyType.ED25519;\n        }\n        const keySize = keyType === constants_1.KeyType.ED25519 ? constants_1.KeySize.ED25519_PUBLIC_KEY : constants_1.KeySize.SECP256k1_PUBLIC_KEY;\n        if (decodedPublicKey.length !== keySize) {\n            throw new Error(`Invalid public key size (${decodedPublicKey.length}), must be ${keySize}`);\n        }\n        return new PublicKey({ keyType, data: decodedPublicKey });\n    }\n    /**\n     * Returns a string representation of the public key.\n     * @returns {string} The string representation of the public key.\n     */\n    toString() {\n        const encodedKey = (0, utils_1.baseEncode)(this.data);\n        return `${key_type_to_str(this.keyType)}:${encodedKey}`;\n    }\n    /**\n     * Verifies a message signature using the public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        const keyType = this.keyType;\n        const data = this.data;\n        switch (keyType) {\n            case constants_1.KeyType.ED25519:\n                return ed25519_1.ed25519.verify(signature, message, data);\n            case constants_1.KeyType.SECP256K1:\n                return secp256k1_1.default.ecdsaVerify(signature.subarray(0, 64), message, new Uint8Array([0x04, ...data]));\n            default:\n                throw new Error(`Unknown key type: ${keyType}`);\n        }\n    }\n    get keyPair() {\n        return this.ed25519Key || this.secp256k1Key;\n    }\n    get keyType() {\n        return this.keyPair.keyType;\n    }\n    get data() {\n        return this.keyPair.data;\n    }\n}\nexports.PublicKey = PublicKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/in_memory_key_store.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/in_memory_key_store.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemoryKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js\");\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@link KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.keys[`${accountId}:${networkId}`];\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            delete this.keys[`${accountId}:${networkId}`];\n        });\n    }\n    /**\n     * Removes all {@link KeyPair} from in-memory storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys = {};\n        });\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                result.add(parts[1]);\n            });\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                if (parts[parts.length - 1] === networkId) {\n                    result.push(parts.slice(0, parts.length - 1).join(':'));\n                }\n            });\n            return result;\n        });\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/in_memory_key_store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = exports.MergeKeyStore = exports.KeyStore = exports.InMemoryKeyStore = void 0;\nvar in_memory_key_store_1 = __webpack_require__(/*! ./in_memory_key_store */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/in_memory_key_store.js\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", ({ enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } }));\nvar keystore_1 = __webpack_require__(/*! ./keystore */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js\");\nObject.defineProperty(exports, \"KeyStore\", ({ enumerable: true, get: function () { return keystore_1.KeyStore; } }));\nvar merge_key_store_1 = __webpack_require__(/*! ./merge_key_store */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/merge_key_store.js\");\nObject.defineProperty(exports, \"MergeKeyStore\", ({ enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } }));\nvar multi_contract_keystore_1 = __webpack_require__(/*! ./multi_contract_keystore */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\");\nObject.defineProperty(exports, \"MultiContractKeyStore\", ({ enumerable: true, get: function () { return multi_contract_keystore_1.MultiContractKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcscUJBQXFCLEdBQUcsZ0JBQWdCLEdBQUcsd0JBQXdCO0FBQ25HLDRCQUE0QixtQkFBTyxDQUFDLHlJQUF1QjtBQUMzRCxvREFBbUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDN0ksaUJBQWlCLG1CQUFPLENBQUMsbUhBQVk7QUFDckMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILHdCQUF3QixtQkFBTyxDQUFDLGlJQUFtQjtBQUNuRCxpREFBZ0QsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUM7QUFDbkksZ0NBQWdDLG1CQUFPLENBQUMsaUpBQTJCO0FBQ25FLHlEQUF3RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanM/ZTgyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlDb250cmFjdEtleVN0b3JlID0gZXhwb3J0cy5NZXJnZUtleVN0b3JlID0gZXhwb3J0cy5LZXlTdG9yZSA9IGV4cG9ydHMuSW5NZW1vcnlLZXlTdG9yZSA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfa2V5X3N0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW5NZW1vcnlLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5fbWVtb3J5X2tleV9zdG9yZV8xLkluTWVtb3J5S2V5U3RvcmU7IH0gfSk7XG52YXIga2V5c3RvcmVfMSA9IHJlcXVpcmUoXCIuL2tleXN0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleXN0b3JlXzEuS2V5U3RvcmU7IH0gfSk7XG52YXIgbWVyZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tZXJnZV9rZXlfc3RvcmVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZXJnZUtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtZXJnZV9rZXlfc3RvcmVfMS5NZXJnZUtleVN0b3JlOyB9IH0pO1xudmFyIG11bHRpX2NvbnRyYWN0X2tleXN0b3JlXzEgPSByZXF1aXJlKFwiLi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bHRpQ29udHJhY3RLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbXVsdGlfY29udHJhY3Rfa2V5c3RvcmVfMS5NdWx0aUNvbnRyYWN0S2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link \"@near-js/wallet-account\".near.Near | Near} via {@link \"@near-js/wallet-account\".near.NearConfig | NearConfig}\n * and are used by the {@link \"@near-js/signers\".in_memory_signer.InMemorySigner | InMemorySigner} to sign transactions.\n *\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIva2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0EsNEJBQTRCLGtEQUFrRCxLQUFLO0FBQ25GLHdCQUF3QiwyRUFBMkU7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL2tleXN0b3JlLmpzP2ZjZmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVN0b3JlID0gdm9pZCAwO1xuLyoqXG4gKiBLZXlTdG9yZXMgYXJlIHBhc3NlZCB0byB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhciB8IE5lYXJ9IHZpYSB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhckNvbmZpZyB8IE5lYXJDb25maWd9XG4gKiBhbmQgYXJlIHVzZWQgYnkgdGhlIHtAbGluayBcIkBuZWFyLWpzL3NpZ25lcnNcIi5pbl9tZW1vcnlfc2lnbmVyLkluTWVtb3J5U2lnbmVyIHwgSW5NZW1vcnlTaWduZXJ9IHRvIHNpZ24gdHJhbnNhY3Rpb25zLlxuICpcbiAqL1xuY2xhc3MgS2V5U3RvcmUge1xufVxuZXhwb3J0cy5LZXlTdG9yZSA9IEtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/merge_key_store.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/merge_key_store.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MergeKeyStore = void 0;\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options KeyStore options\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPair} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                const keyPair = yield keyStore.getKey(networkId, accountId);\n                if (keyPair) {\n                    return keyPair;\n                }\n            }\n            return null;\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.removeKey(networkId, accountId);\n            }\n        });\n    }\n    /**\n     * Removes all items from each key store\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.clear();\n            }\n        });\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const network of yield keyStore.getNetworks()) {\n                    result.add(network);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const account of yield keyStore.getAccounts(networkId)) {\n                    result.add(account);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbWVyZ2Vfa2V5X3N0b3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsbUJBQW1CLG1CQUFPLENBQUMsbUhBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVCQUF1QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMEJBQTBCO0FBQzFEO0FBQ0E7QUFDQSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL21lcmdlX2tleV9zdG9yZS5qcz8zYTM1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSB2b2lkIDA7XG5jb25zdCBrZXlzdG9yZV8xID0gcmVxdWlyZShcIi4va2V5c3RvcmVcIik7XG5jbGFzcyBNZXJnZUtleVN0b3JlIGV4dGVuZHMga2V5c3RvcmVfMS5LZXlTdG9yZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGtleVN0b3JlcyByZWFkIGNhbGxzIGFyZSBhdHRlbXB0ZWQgZnJvbSBzdGFydCB0byBlbmQgb2YgYXJyYXlcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBLZXlTdG9yZSBvcHRpb25zXG4gICAgICogQHBhcmFtIG9wdGlvbnMud3JpdGVLZXlTdG9yZUluZGV4IHRoZSBrZXlzdG9yZSBpbmRleCB0aGF0IHdpbGwgcmVjZWl2ZSBhbGwgd3JpdGUgY2FsbHNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihrZXlTdG9yZXMsIG9wdGlvbnMgPSB7IHdyaXRlS2V5U3RvcmVJbmRleDogMCB9KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMua2V5U3RvcmVzID0ga2V5U3RvcmVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdG9yZSBhIHtAbGluayBLZXlQYWlyfSB0byB0aGUgZmlyc3QgaW5kZXggb2YgYSBrZXkgc3RvcmUgYXJyYXlcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5IHBhaXIgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIHNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgdGhpcy5rZXlTdG9yZXNbdGhpcy5vcHRpb25zLndyaXRlS2V5U3RvcmVJbmRleF0uc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSB0aGUgYXJyYXkgb2Yga2V5IHN0b3Jlc1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEtleVBhaXI+fVxuICAgICAqL1xuICAgIGdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXlTdG9yZSBvZiB0aGlzLmtleVN0b3Jlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCBrZXlTdG9yZS5nZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpO1xuICAgICAgICAgICAgICAgIGlmIChrZXlQYWlyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBrZXlQYWlyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIHtAbGluayBLZXlQYWlyfSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICovXG4gICAgcmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQga2V5U3RvcmUucmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYWxsIGl0ZW1zIGZyb20gZWFjaCBrZXkgc3RvcmVcbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5U3RvcmUgb2YgdGhpcy5rZXlTdG9yZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBrZXlTdG9yZS5jbGVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gdGhlIGFycmF5IG9mIGtleSBzdG9yZXNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBuZXR3b3JrIG9mIHlpZWxkIGtleVN0b3JlLmdldE5ldHdvcmtzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChuZXR3b3JrKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYWNjb3VudChzKSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICovXG4gICAgZ2V0QWNjb3VudHMobmV0d29ya0lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhY2NvdW50IG9mIHlpZWxkIGtleVN0b3JlLmdldEFjY291bnRzKG5ldHdvcmtJZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChhY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBNZXJnZUtleVN0b3JlKCR7dGhpcy5rZXlTdG9yZXMuam9pbignLCAnKX0pYDtcbiAgICB9XG59XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSBNZXJnZUtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/merge_key_store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/multi_contract_keystore.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/multi_contract_keystore.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = void 0;\n/**\n * KeyStores are passed to {@link near!Near} via {@link near!NearConfig}\n * and are used by the {@link signer!InMemorySigner} to sign transactions.\n *\n * @see {@link connect}\n */\nclass MultiContractKeyStore {\n}\nexports.MultiContractKeyStore = MultiContractKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbXVsdGlfY29udHJhY3Rfa2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCO0FBQ0EsNEJBQTRCLGlCQUFpQixLQUFLO0FBQ2xELHdCQUF3Qiw2QkFBNkI7QUFDckQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZS5qcz83ODQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSB2b2lkIDA7XG4vKipcbiAqIEtleVN0b3JlcyBhcmUgcGFzc2VkIHRvIHtAbGluayBuZWFyIU5lYXJ9IHZpYSB7QGxpbmsgbmVhciFOZWFyQ29uZmlnfVxuICogYW5kIGFyZSB1c2VkIGJ5IHRoZSB7QGxpbmsgc2lnbmVyIUluTWVtb3J5U2lnbmVyfSB0byBzaWduIHRyYW5zYWN0aW9ucy5cbiAqXG4gKiBAc2VlIHtAbGluayBjb25uZWN0fVxuICovXG5jbGFzcyBNdWx0aUNvbnRyYWN0S2V5U3RvcmUge1xufVxuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSBNdWx0aUNvbnRyYWN0S2V5U3RvcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/assignable.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/assignable.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Assignable = void 0;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9hc3NpZ25hYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2Fzc2lnbmFibGUuanM/MzU2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXNzaWduYWJsZSA9IHZvaWQgMDtcbmNsYXNzIEFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKHByb3BlcnRpZXMpIHtcbiAgICAgICAgT2JqZWN0LmtleXMocHJvcGVydGllcykubWFwKChrZXkpID0+IHtcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IHByb3BlcnRpZXNba2V5XTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Bc3NpZ25hYmxlID0gQXNzaWduYWJsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/assignable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/errors.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/errors.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcsMkJBQTJCO0FBQ25HO0FBQ0E7QUFDQSxzRkFBc0YsMENBQTBDO0FBQ2hJO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLDBCQUEwQixTQUFTLE9BQU8sUUFBUSx1QkFBdUIseUJBQXlCO0FBQ2xHO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanM/ZTk5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JDb250ZXh0ID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IGV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFBvc2l0aW9uYWxBcmdzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDb250cmFjdCBtZXRob2QgY2FsbHMgZXhwZWN0IG5hbWVkIGFyZ3VtZW50cyB3cmFwcGVkIGluIG9iamVjdCwgZS5nLiB7IGFyZ05hbWUxOiBhcmdWYWx1ZTEsIGFyZ05hbWUyOiBhcmdWYWx1ZTIgfScpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IFBvc2l0aW9uYWxBcmdzRXJyb3I7XG5jbGFzcyBBcmd1bWVudFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdOYW1lLCBhcmdUeXBlLCBhcmdWYWx1ZSkge1xuICAgICAgICBzdXBlcihgRXhwZWN0ZWQgJHthcmdUeXBlfSBmb3IgJyR7YXJnTmFtZX0nIGFyZ3VtZW50LCBidXQgZ290ICcke0pTT04uc3RyaW5naWZ5KGFyZ1ZhbHVlKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IEFyZ3VtZW50VHlwZUVycm9yO1xuY2xhc3MgVHlwZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB0eXBlLCBjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlIHx8ICdVbnR5cGVkRXJyb3InO1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgIH1cbn1cbmV4cG9ydHMuVHlwZWRFcnJvciA9IFR5cGVkRXJyb3I7XG5jbGFzcyBFcnJvckNvbnRleHQge1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zYWN0aW9uSGFzaCkge1xuICAgICAgICB0aGlzLnRyYW5zYWN0aW9uSGFzaCA9IHRyYW5zYWN0aW9uSGFzaDtcbiAgICB9XG59XG5leHBvcnRzLkVycm9yQ29udGV4dCA9IEVycm9yQ29udGV4dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./assignable */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/assignable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsbUhBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLDJHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxxSEFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcz8zYjBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXNzaWduYWJsZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = void 0;\nvar light_client_1 = __webpack_require__(/*! ./light_client */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/light_client.js\");\nObject.defineProperty(exports, \"IdType\", ({ enumerable: true, get: function () { return light_client_1.IdType; } }));\nvar response_1 = __webpack_require__(/*! ./response */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/response.js\");\nObject.defineProperty(exports, \"ExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.ExecutionStatusBasic; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.FinalExecutionStatusBasic; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEIsR0FBRyxjQUFjO0FBQ2pGLHFCQUFxQixtQkFBTyxDQUFDLGdJQUFnQjtBQUM3QywwQ0FBeUMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDbEgsaUJBQWlCLG1CQUFPLENBQUMsd0hBQVk7QUFDckMsd0RBQXVELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzFJLDZEQUE0RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcz8yYzgwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuSWRUeXBlID0gdm9pZCAwO1xudmFyIGxpZ2h0X2NsaWVudF8xID0gcmVxdWlyZShcIi4vbGlnaHRfY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsaWdodF9jbGllbnRfMS5JZFR5cGU7IH0gfSk7XG52YXIgcmVzcG9uc2VfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXhlY3V0aW9uU3RhdHVzQmFzaWNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlXzEuRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZV8xLkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/light_client.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/light_client.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdType = void 0;\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9saWdodF9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QixjQUFjLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy90eXBlcy9saWIvcHJvdmlkZXIvbGlnaHRfY2xpZW50LmpzPzc4NjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIE5FQVIgUlBDIEFQSSByZXF1ZXN0IHR5cGVzIGFuZCByZXNwb25zZXNcbiAqIEBtb2R1bGVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JZFR5cGUgPSB2b2lkIDA7XG52YXIgSWRUeXBlO1xuKGZ1bmN0aW9uIChJZFR5cGUpIHtcbiAgICBJZFR5cGVbXCJUcmFuc2FjdGlvblwiXSA9IFwidHJhbnNhY3Rpb25cIjtcbiAgICBJZFR5cGVbXCJSZWNlaXB0XCJdID0gXCJyZWNlaXB0XCI7XG59KShJZFR5cGUgPSBleHBvcnRzLklkVHlwZSB8fCAoZXhwb3J0cy5JZFR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/light_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/response.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/response.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBELDRCQUE0QixLQUFLO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9FQUFvRSxpQ0FBaUMsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcz8yYjZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHZvaWQgMDtcbnZhciBFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRXhlY3V0aW9uU3RhdHVzQmFzaWMpIHtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlVua25vd25cIl0gPSBcIlVua25vd25cIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlBlbmRpbmdcIl0gPSBcIlBlbmRpbmdcIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIkZhaWx1cmVcIl0gPSBcIkZhaWx1cmVcIjtcbn0pKEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHt9KSk7XG52YXIgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYykge1xuICAgIEZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJOb3RTdGFydGVkXCJdID0gXCJOb3RTdGFydGVkXCI7XG4gICAgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlN0YXJ0ZWRcIl0gPSBcIlN0YXJ0ZWRcIjtcbiAgICBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljW1wiRmFpbHVyZVwiXSA9IFwiRmFpbHVyZVwiO1xufSkoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/constants.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/constants.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = BigInt('30000000000000');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanM/OTE1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9GVU5DVElPTl9DQUxMX0dBUyA9IHZvaWQgMDtcbi8vIERlZmF1bHQgYW1vdW50IG9mIGdhcyB0byBiZSBzZW50IHdpdGggdGhlIGZ1bmN0aW9uIGNhbGxzLiBVc2VkIHRvIHBheSBmb3IgdGhlIGZlZXNcbi8vIGluY3VycmVkIHdoaWxlIHJ1bm5pbmcgdGhlIGNvbnRyYWN0IGV4ZWN1dGlvbi4gVGhlIHVudXNlZCBhbW91bnQgd2lsbCBiZSByZWZ1bmRlZCBiYWNrIHRvXG4vLyB0aGUgb3JpZ2luYXRvci5cbi8vIER1ZSB0byBwcm90b2NvbCBjaGFuZ2VzIHRoYXQgY2hhcmdlIHVwZnJvbnQgZm9yIHRoZSBtYXhpbXVtIHBvc3NpYmxlIGdhcyBwcmljZSBpbmZsYXRpb24gZHVlIHRvXG4vLyBmdWxsIGJsb2NrcywgdGhlIHByaWNlIG9mIG1heF9wcmVwYWlkX2dhcyBpcyBkZWNyZWFzZWQgdG8gYDMwMCAqIDEwKioxMmAuXG4vLyBGb3IgZGlzY3Vzc2lvbiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25lYXJwcm90b2NvbC9ORVBzL2lzc3Vlcy82N1xuZXhwb3J0cy5ERUZBVUxUX0ZVTkNUSU9OX0NBTExfR0FTID0gQmlnSW50KCczMDAwMDAwMDAwMDAwMCcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/errors.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/errors.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logWarning = void 0;\nconst logger_1 = __webpack_require__(/*! ../logger */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js\");\n/** @deprecated */\nfunction logWarning(...args) {\n    const [message, ...optionalParams] = args;\n    logger_1.Logger.warn(message, ...optionalParams);\n}\nexports.logWarning = logWarning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixpQkFBaUIsbUJBQU8sQ0FBQyxrSEFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2Vycm9ycy9lcnJvcnMuanM/NTU5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9nV2FybmluZyA9IHZvaWQgMDtcbmNvbnN0IGxvZ2dlcl8xID0gcmVxdWlyZShcIi4uL2xvZ2dlclwiKTtcbi8qKiBAZGVwcmVjYXRlZCAqL1xuZnVuY3Rpb24gbG9nV2FybmluZyguLi5hcmdzKSB7XG4gICAgY29uc3QgW21lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zXSA9IGFyZ3M7XG4gICAgbG9nZ2VyXzEuTG9nZ2VyLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xufVxuZXhwb3J0cy5sb2dXYXJuaW5nID0gbG9nV2FybmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseRpcError = exports.parseResultError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.ServerError = exports.logWarning = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/errors.js\");\nObject.defineProperty(exports, \"logWarning\", ({ enumerable: true, get: function () { return errors_1.logWarning; } }));\nvar rpc_errors_1 = __webpack_require__(/*! ./rpc_errors */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_errors.js\");\nObject.defineProperty(exports, \"ServerError\", ({ enumerable: true, get: function () { return rpc_errors_1.ServerError; } }));\nObject.defineProperty(exports, \"formatError\", ({ enumerable: true, get: function () { return rpc_errors_1.formatError; } }));\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", ({ enumerable: true, get: function () { return rpc_errors_1.getErrorTypeFromErrorMessage; } }));\nObject.defineProperty(exports, \"parseResultError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseResultError; } }));\nObject.defineProperty(exports, \"parseRpcError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseRpcError; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsd0JBQXdCLEdBQUcsb0NBQW9DLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsa0JBQWtCO0FBQ3hKLGVBQWUsbUJBQU8sQ0FBQyxrSEFBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbUJBQW1CLG1CQUFPLENBQUMsMEhBQWM7QUFDekMsK0NBQThDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzFILCtDQUE4QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMxSCxnRUFBK0QsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDNUosb0RBQW1ELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3BJLGlEQUFnRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanM/Mzk2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VScGNFcnJvciA9IGV4cG9ydHMucGFyc2VSZXN1bHRFcnJvciA9IGV4cG9ydHMuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZSA9IGV4cG9ydHMuZm9ybWF0RXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gZXhwb3J0cy5sb2dXYXJuaW5nID0gdm9pZCAwO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibG9nV2FybmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEubG9nV2FybmluZzsgfSB9KTtcbnZhciBycGNfZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9ycGNfZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5TZXJ2ZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZm9ybWF0RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmVzdWx0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5wYXJzZVJlc3VsdEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VScGNFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcnBjX2Vycm9yc18xLnBhcnNlUnBjRXJyb3I7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_errors.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_errors.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js\");\nconst mustache_1 = __importDefault(__webpack_require__(/*! mustache */ \"(ssr)/./node_modules/mustache/mustache.js\"));\nconst format_1 = __webpack_require__(/*! ../format */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js\");\nconst error_messages_json_1 = __importDefault(__webpack_require__(/*! ./error_messages.json */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/error_messages.json\"));\nconst rpc_error_schema_json_1 = __importDefault(__webpack_require__(/*! ./rpc_error_schema.json */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json\"));\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => (0, format_1.formatNearAmount)(render(n))\n};\nclass ServerError extends types_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], Object.assign(Object.assign({}, errorData), mustacheHelpers));\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage, errorType) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /wasm execution failed with error: MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return errorType;\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvcnBjX2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9DQUFvQyxHQUFHLG1CQUFtQixHQUFHLHdCQUF3QixHQUFHLHFCQUFxQixHQUFHLG1CQUFtQjtBQUNuSSxnQkFBZ0IsbUJBQU8sQ0FBQyxnSEFBZ0I7QUFDeEMsbUNBQW1DLG1CQUFPLENBQUMsMkRBQVU7QUFDckQsaUJBQWlCLG1CQUFPLENBQUMsNEdBQVc7QUFDcEMsOENBQThDLG1CQUFPLENBQUMseUlBQXVCO0FBQzdFLGdEQUFnRCxtQkFBTyxDQUFDLDZJQUF5QjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0Esc0hBQXNIO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvZXJyb3JzL3JwY19lcnJvcnMuanM/MDhiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZSA9IGV4cG9ydHMuZm9ybWF0RXJyb3IgPSBleHBvcnRzLnBhcnNlUmVzdWx0RXJyb3IgPSBleHBvcnRzLnBhcnNlUnBjRXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gdm9pZCAwO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmNvbnN0IG11c3RhY2hlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIm11c3RhY2hlXCIpKTtcbmNvbnN0IGZvcm1hdF8xID0gcmVxdWlyZShcIi4uL2Zvcm1hdFwiKTtcbmNvbnN0IGVycm9yX21lc3NhZ2VzX2pzb25fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9lcnJvcl9tZXNzYWdlcy5qc29uXCIpKTtcbmNvbnN0IHJwY19lcnJvcl9zY2hlbWFfanNvbl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3JwY19lcnJvcl9zY2hlbWEuanNvblwiKSk7XG5jb25zdCBtdXN0YWNoZUhlbHBlcnMgPSB7XG4gICAgZm9ybWF0TmVhcjogKCkgPT4gKG4sIHJlbmRlcikgPT4gKDAsIGZvcm1hdF8xLmZvcm1hdE5lYXJBbW91bnQpKHJlbmRlcihuKSlcbn07XG5jbGFzcyBTZXJ2ZXJFcnJvciBleHRlbmRzIHR5cGVzXzEuVHlwZWRFcnJvciB7XG59XG5leHBvcnRzLlNlcnZlckVycm9yID0gU2VydmVyRXJyb3I7XG5jbGFzcyBTZXJ2ZXJUcmFuc2FjdGlvbkVycm9yIGV4dGVuZHMgU2VydmVyRXJyb3Ige1xufVxuZnVuY3Rpb24gcGFyc2VScGNFcnJvcihlcnJvck9iaikge1xuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgIGNvbnN0IGVycm9yQ2xhc3NOYW1lID0gd2Fsa1N1YnR5cGUoZXJyb3JPYmosIHJwY19lcnJvcl9zY2hlbWFfanNvbl8xLmRlZmF1bHQuc2NoZW1hLCByZXN1bHQsICcnKTtcbiAgICAvLyBOT1RFOiBUaGlzIGFzc3VtZXMgdGhhdCBhbGwgZXJyb3JzIGV4dGVuZCBUeXBlZEVycm9yXG4gICAgY29uc3QgZXJyb3IgPSBuZXcgU2VydmVyRXJyb3IoZm9ybWF0RXJyb3IoZXJyb3JDbGFzc05hbWUsIHJlc3VsdCksIGVycm9yQ2xhc3NOYW1lKTtcbiAgICBPYmplY3QuYXNzaWduKGVycm9yLCByZXN1bHQpO1xuICAgIHJldHVybiBlcnJvcjtcbn1cbmV4cG9ydHMucGFyc2VScGNFcnJvciA9IHBhcnNlUnBjRXJyb3I7XG5mdW5jdGlvbiBwYXJzZVJlc3VsdEVycm9yKHJlc3VsdCkge1xuICAgIGNvbnN0IHNlcnZlcl9lcnJvciA9IHBhcnNlUnBjRXJyb3IocmVzdWx0LnN0YXR1cy5GYWlsdXJlKTtcbiAgICBjb25zdCBzZXJ2ZXJfdHhfZXJyb3IgPSBuZXcgU2VydmVyVHJhbnNhY3Rpb25FcnJvcigpO1xuICAgIE9iamVjdC5hc3NpZ24oc2VydmVyX3R4X2Vycm9yLCBzZXJ2ZXJfZXJyb3IpO1xuICAgIHNlcnZlcl90eF9lcnJvci50eXBlID0gc2VydmVyX2Vycm9yLnR5cGU7XG4gICAgc2VydmVyX3R4X2Vycm9yLm1lc3NhZ2UgPSBzZXJ2ZXJfZXJyb3IubWVzc2FnZTtcbiAgICBzZXJ2ZXJfdHhfZXJyb3IudHJhbnNhY3Rpb25fb3V0Y29tZSA9IHJlc3VsdC50cmFuc2FjdGlvbl9vdXRjb21lO1xuICAgIHJldHVybiBzZXJ2ZXJfdHhfZXJyb3I7XG59XG5leHBvcnRzLnBhcnNlUmVzdWx0RXJyb3IgPSBwYXJzZVJlc3VsdEVycm9yO1xuZnVuY3Rpb24gZm9ybWF0RXJyb3IoZXJyb3JDbGFzc05hbWUsIGVycm9yRGF0YSkge1xuICAgIGlmICh0eXBlb2YgZXJyb3JfbWVzc2FnZXNfanNvbl8xLmRlZmF1bHRbZXJyb3JDbGFzc05hbWVdID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gbXVzdGFjaGVfMS5kZWZhdWx0LnJlbmRlcihlcnJvcl9tZXNzYWdlc19qc29uXzEuZGVmYXVsdFtlcnJvckNsYXNzTmFtZV0sIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZXJyb3JEYXRhKSwgbXVzdGFjaGVIZWxwZXJzKSk7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShlcnJvckRhdGEpO1xufVxuZXhwb3J0cy5mb3JtYXRFcnJvciA9IGZvcm1hdEVycm9yO1xuLyoqXG4gKiBXYWxrcyB0aHJvdWdoIGRlZmluZWQgc2NoZW1hIHJldHVybmluZyBlcnJvcihzKSByZWN1cnNpdmVseVxuICogQHBhcmFtIGVycm9yT2JqIFRoZSBlcnJvciB0byBiZSBwYXJzZWRcbiAqIEBwYXJhbSBzY2hlbWEgQSBkZWZpbmVkIHNjaGVtYSBpbiBKU09OIG1hcHBpbmcgdG8gdGhlIFJQQyBlcnJvcnNcbiAqIEBwYXJhbSByZXN1bHQgQW4gb2JqZWN0IHVzZWQgaW4gcmVjdXJzaW9uIG9yIGNhbGxlZCBkaXJlY3RseVxuICogQHBhcmFtIHR5cGVOYW1lIFRoZSBodW1hbi1yZWFkYWJsZSBlcnJvciB0eXBlIG5hbWUgYXMgZGVmaW5lZCBpbiB0aGUgSlNPTiBtYXBwaW5nXG4gKi9cbmZ1bmN0aW9uIHdhbGtTdWJ0eXBlKGVycm9yT2JqLCBzY2hlbWEsIHJlc3VsdCwgdHlwZU5hbWUpIHtcbiAgICBsZXQgZXJyb3I7XG4gICAgbGV0IHR5cGU7XG4gICAgbGV0IGVycm9yVHlwZU5hbWU7XG4gICAgZm9yIChjb25zdCBlcnJvck5hbWUgaW4gc2NoZW1hKSB7XG4gICAgICAgIGlmIChpc1N0cmluZyhlcnJvck9ialtlcnJvck5hbWVdKSkge1xuICAgICAgICAgICAgLy8gUmV0dXJuIGVhcmx5IGlmIGVycm9yIHR5cGUgaXMgaW4gYSBzY2hlbWFcbiAgICAgICAgICAgIHJldHVybiBlcnJvck9ialtlcnJvck5hbWVdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc09iamVjdChlcnJvck9ialtlcnJvck5hbWVdKSkge1xuICAgICAgICAgICAgZXJyb3IgPSBlcnJvck9ialtlcnJvck5hbWVdO1xuICAgICAgICAgICAgdHlwZSA9IHNjaGVtYVtlcnJvck5hbWVdO1xuICAgICAgICAgICAgZXJyb3JUeXBlTmFtZSA9IGVycm9yTmFtZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc09iamVjdChlcnJvck9iai5raW5kKSAmJiBpc09iamVjdChlcnJvck9iai5raW5kW2Vycm9yTmFtZV0pKSB7XG4gICAgICAgICAgICBlcnJvciA9IGVycm9yT2JqLmtpbmRbZXJyb3JOYW1lXTtcbiAgICAgICAgICAgIHR5cGUgPSBzY2hlbWFbZXJyb3JOYW1lXTtcbiAgICAgICAgICAgIGVycm9yVHlwZU5hbWUgPSBlcnJvck5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZXJyb3IgJiYgdHlwZSkge1xuICAgICAgICBmb3IgKGNvbnN0IHByb3Agb2YgT2JqZWN0LmtleXModHlwZS5wcm9wcykpIHtcbiAgICAgICAgICAgIHJlc3VsdFtwcm9wXSA9IGVycm9yW3Byb3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB3YWxrU3VidHlwZShlcnJvciwgc2NoZW1hLCByZXN1bHQsIGVycm9yVHlwZU5hbWUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gVE9ETzogaXMgdGhpcyB0aGUgcmlnaHQgdGhpbmcgdG8gZG8/XG4gICAgICAgIHJlc3VsdC5raW5kID0gZXJyb3JPYmo7XG4gICAgICAgIHJldHVybiB0eXBlTmFtZTtcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlKGVycm9yTWVzc2FnZSwgZXJyb3JUeXBlKSB7XG4gICAgLy8gVGhpcyBmdW5jdGlvbiBzaG91bGQgYmUgcmVtb3ZlZCB3aGVuIEpTT04gUlBDIHN0YXJ0cyByZXR1cm5pbmcgdHlwZWQgZXJyb3JzLlxuICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgICBjYXNlIC9eYWNjb3VudCAuKj8gZG9lcyBub3QgZXhpc3Qgd2hpbGUgdmlld2luZyQvLnRlc3QoZXJyb3JNZXNzYWdlKTpcbiAgICAgICAgICAgIHJldHVybiAnQWNjb3VudERvZXNOb3RFeGlzdCc7XG4gICAgICAgIGNhc2UgL15BY2NvdW50IC4qPyBkb2Vzbid0IGV4aXN0JC8udGVzdChlcnJvck1lc3NhZ2UpOlxuICAgICAgICAgICAgcmV0dXJuICdBY2NvdW50RG9lc05vdEV4aXN0JztcbiAgICAgICAgY2FzZSAvXmFjY2VzcyBrZXkgLio/IGRvZXMgbm90IGV4aXN0IHdoaWxlIHZpZXdpbmckLy50ZXN0KGVycm9yTWVzc2FnZSk6XG4gICAgICAgICAgICByZXR1cm4gJ0FjY2Vzc0tleURvZXNOb3RFeGlzdCc7XG4gICAgICAgIGNhc2UgL3dhc20gZXhlY3V0aW9uIGZhaWxlZCB3aXRoIGVycm9yOiBGdW5jdGlvbkNhbGxFcnJvclxcKENvbXBpbGF0aW9uRXJyb3JcXChDb2RlRG9lc05vdEV4aXN0Ly50ZXN0KGVycm9yTWVzc2FnZSk6XG4gICAgICAgICAgICByZXR1cm4gJ0NvZGVEb2VzTm90RXhpc3QnO1xuICAgICAgICBjYXNlIC93YXNtIGV4ZWN1dGlvbiBmYWlsZWQgd2l0aCBlcnJvcjogQ29tcGlsYXRpb25FcnJvclxcKENvZGVEb2VzTm90RXhpc3QvLnRlc3QoZXJyb3JNZXNzYWdlKTpcbiAgICAgICAgICAgIHJldHVybiAnQ29kZURvZXNOb3RFeGlzdCc7XG4gICAgICAgIGNhc2UgL3dhc20gZXhlY3V0aW9uIGZhaWxlZCB3aXRoIGVycm9yOiBGdW5jdGlvbkNhbGxFcnJvclxcKE1ldGhvZFJlc29sdmVFcnJvclxcKE1ldGhvZE5vdEZvdW5kLy50ZXN0KGVycm9yTWVzc2FnZSk6XG4gICAgICAgICAgICByZXR1cm4gJ01ldGhvZE5vdEZvdW5kJztcbiAgICAgICAgY2FzZSAvd2FzbSBleGVjdXRpb24gZmFpbGVkIHdpdGggZXJyb3I6IE1ldGhvZFJlc29sdmVFcnJvclxcKE1ldGhvZE5vdEZvdW5kLy50ZXN0KGVycm9yTWVzc2FnZSk6XG4gICAgICAgICAgICByZXR1cm4gJ01ldGhvZE5vdEZvdW5kJztcbiAgICAgICAgY2FzZSAvVHJhbnNhY3Rpb24gbm9uY2UgXFxkKyBtdXN0IGJlIGxhcmdlciB0aGFuIG5vbmNlIG9mIHRoZSB1c2VkIGFjY2VzcyBrZXkgXFxkKy8udGVzdChlcnJvck1lc3NhZ2UpOlxuICAgICAgICAgICAgcmV0dXJuICdJbnZhbGlkTm9uY2UnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGVycm9yVHlwZTtcbiAgICB9XG59XG5leHBvcnRzLmdldEVycm9yVHlwZUZyb21FcnJvck1lc3NhZ2UgPSBnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlO1xuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gZGV0ZXJtaW5pbmcgaWYgdGhlIGFyZ3VtZW50IGlzIGFuIG9iamVjdFxuICogQHBhcmFtIG4gVmFsdWUgdG8gY2hlY2tcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3Qobikge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobikgPT09ICdbb2JqZWN0IE9iamVjdF0nO1xufVxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gZGV0ZXJtaW5pbmcgaWYgdGhlIGFyZ3VtZW50IGlzIGEgc3RyaW5nXG4gKiBAcGFyYW0gbiBWYWx1ZSB0byBjaGVja1xuICovXG5mdW5jdGlvbiBpc1N0cmluZyhuKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuKSA9PT0gJ1tvYmplY3QgU3RyaW5nXSc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baseDecode = exports.baseEncode = exports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bs58_1 = __importDefault(__webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = BigInt(10) ** BigInt(exports.NEAR_NOMINATION_EXP);\n// Pre-calculate offsets used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = BigInt(10);\nfor (let i = 0, offset = BigInt(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset * BN10) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    let balanceBN = BigInt(balance);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN += ROUNDING_OFFSETS[roundingExp];\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || \"0\";\n    const fractionStr = balance\n        .substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, \"0\")\n        .substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split(\".\");\n    const wholePart = split[0];\n    const fracPart = split[1] || \"\";\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, \"0\"));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, \"\").trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, \"\");\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, \"\");\n    if (value === \"\") {\n        return \"0\";\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, \"$1,$2\");\n    }\n    return value;\n}\n/**\n * Encodes a Uint8Array or string into base58\n * @param value Uint8Array or string representing a borsh encoded object\n * @returns string base58 encoding of the value\n */\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        const bytes = [];\n        for (let c = 0; c < value.length; c++) {\n            bytes.push(value.charCodeAt(c));\n        }\n        value = new Uint8Array(bytes);\n    }\n    return bs58_1.default.encode(value);\n}\nexports.baseEncode = baseEncode;\n/**\n * Decodes a base58 string into a Uint8Array\n * @param value base58 encoded string\n * @returns Uint8Array representing the decoded value\n */\nfunction baseDecode(value) {\n    return new Uint8Array(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/constants.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./format */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logging */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logging.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./validators */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/validators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsaUhBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLGlIQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQywyR0FBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsNkdBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLCtHQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyxtSEFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsaUhBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHlHQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2luZGV4LmpzPzg5NTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZm9ybWF0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2dnaW5nXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmFsaWRhdG9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/console.logger.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/console.logger.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    constructor(logLevels) {\n        this.logLevels = logLevels;\n        this.isLevelEnabled = (level) => {\n            return this.logLevels.includes(level);\n        };\n    }\n    print(level, message, ...optionalParams) {\n        switch (level) {\n            case 'error':\n            case 'fatal':\n                return console.error(message, ...optionalParams);\n            case 'warn':\n                return console.warn(message, ...optionalParams);\n            case 'log':\n                return console.log(message, ...optionalParams);\n            case 'debug':\n            case 'verbose':\n                return console.debug(message, ...optionalParams);\n        }\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose'))\n            return;\n        this.print('verbose', message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug'))\n            return;\n        this.print('debug', message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log'))\n            return;\n        this.print('log', message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn'))\n            return;\n        this.print('warn', message, ...optionalParams);\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error'))\n            return;\n        this.print('error', message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        if (!this.isLevelEnabled('fatal'))\n            return;\n        this.print('fatal', message, ...optionalParams);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvY29uc29sZS5sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9jb25zb2xlLmxvZ2dlci5qcz83MzcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gdm9pZCAwO1xuY2xhc3MgQ29uc29sZUxvZ2dlciB7XG4gICAgY29uc3RydWN0b3IobG9nTGV2ZWxzKSB7XG4gICAgICAgIHRoaXMubG9nTGV2ZWxzID0gbG9nTGV2ZWxzO1xuICAgICAgICB0aGlzLmlzTGV2ZWxFbmFibGVkID0gKGxldmVsKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5sb2dMZXZlbHMuaW5jbHVkZXMobGV2ZWwpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBwcmludChsZXZlbCwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgc3dpdGNoIChsZXZlbCkge1xuICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgY2FzZSAnZmF0YWwnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgICAgIGNhc2UgJ3dhcm4nOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnbG9nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnZGVidWcnOlxuICAgICAgICAgICAgY2FzZSAndmVyYm9zZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd2ZXJib3NlJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3ZlcmJvc2UnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGRlYnVnKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZGVidWcnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZGVidWcnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2xvZycpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByaW50KCdsb2cnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHdhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd3YXJuJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3dhcm4nLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZXJyb3InKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZXJyb3InLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZmF0YWwnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZmF0YWwnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gQ29uc29sZUxvZ2dlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/console.logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nvar logger_1 = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/logger.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQyxrSEFBVTtBQUNqQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2luZGV4LmpzP2VkNmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ2dlciA9IHZvaWQgMDtcbnZhciBsb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2xvZ2dlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ2dlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyXzEuTG9nZ2VyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/logger.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/logger.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nconst console_logger_1 = __webpack_require__(/*! ./console.logger */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/console.logger.js\");\nconst DEFAULT_LOG_LEVELS = [\n    'verbose',\n    'debug',\n    'log',\n    'warn',\n    'error',\n    'fatal',\n];\nconst DEFAULT_LOGGER = typeof process === 'object' && process.env.NEAR_NO_LOGS\n    ? undefined\n    : new console_logger_1.ConsoleLogger(DEFAULT_LOG_LEVELS);\n/**\n * Used to log the library messages\n */\nclass Logger {\n    static error(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.error(message, ...optionalParams);\n    }\n    /**\n     * Write a 'log' level log.\n     */\n    static log(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.log(message, ...optionalParams);\n    }\n    /**\n     * Write a 'warn' level log.\n     */\n    static warn(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.warn(message, ...optionalParams);\n    }\n    /**\n     * Write a 'debug' level log.\n     */\n    static debug(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.debug) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    /**\n     * Write a 'verbose' level log.\n     */\n    static verbose(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.verbose) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.fatal) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n}\nexports.Logger = Logger;\n_a = Logger;\nLogger.instanceRef = DEFAULT_LOGGER;\nLogger.overrideLogger = (logger) => {\n    _a.instanceRef = logger;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLHlCQUF5QixtQkFBTyxDQUFDLGtJQUFrQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9sb2dnZXIuanM/MzU1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfYTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTG9nZ2VyID0gdm9pZCAwO1xuY29uc3QgY29uc29sZV9sb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2NvbnNvbGUubG9nZ2VyXCIpO1xuY29uc3QgREVGQVVMVF9MT0dfTEVWRUxTID0gW1xuICAgICd2ZXJib3NlJyxcbiAgICAnZGVidWcnLFxuICAgICdsb2cnLFxuICAgICd3YXJuJyxcbiAgICAnZXJyb3InLFxuICAgICdmYXRhbCcsXG5dO1xuY29uc3QgREVGQVVMVF9MT0dHRVIgPSB0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcgJiYgcHJvY2Vzcy5lbnYuTkVBUl9OT19MT0dTXG4gICAgPyB1bmRlZmluZWRcbiAgICA6IG5ldyBjb25zb2xlX2xvZ2dlcl8xLkNvbnNvbGVMb2dnZXIoREVGQVVMVF9MT0dfTEVWRUxTKTtcbi8qKlxuICogVXNlZCB0byBsb2cgdGhlIGxpYnJhcnkgbWVzc2FnZXNcbiAqL1xuY2xhc3MgTG9nZ2VyIHtcbiAgICBzdGF0aWMgZXJyb3IobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iO1xuICAgICAgICAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZXJyb3IobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICdsb2cnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgbG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYjtcbiAgICAgICAgKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ3dhcm4nIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgd2FybihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2I7XG4gICAgICAgIChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi53YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSAnZGVidWcnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iLCBfYztcbiAgICAgICAgKF9jID0gKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmRlYnVnKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbChfYiwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICd2ZXJib3NlJyBsZXZlbCBsb2cuXG4gICAgICovXG4gICAgc3RhdGljIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iLCBfYztcbiAgICAgICAgKF9jID0gKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnZlcmJvc2UpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHN0YXRpYyBmYXRhbChtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZmF0YWwpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Mb2dnZXIgPSBMb2dnZXI7XG5fYSA9IExvZ2dlcjtcbkxvZ2dlci5pbnN0YW5jZVJlZiA9IERFRkFVTFRfTE9HR0VSO1xuTG9nZ2VyLm92ZXJyaWRlTG9nZ2VyID0gKGxvZ2dlcikgPT4ge1xuICAgIF9hLmluc3RhbmNlUmVmID0gbG9nZ2VyO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logging.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logging.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.printTxOutcomeLogs = exports.printTxOutcomeLogsAndFailures = void 0;\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js\");\nconst logger_1 = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js\");\n/**\n * Parse and print details from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.outcome the query execution response\n */\nfunction printTxOutcomeLogsAndFailures({ contractId, outcome, }) {\n    const flatLogs = [outcome.transaction_outcome, ...outcome.receipts_outcome]\n        .reduce((acc, it) => {\n        const isFailure = typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object';\n        if (it.outcome.logs.length || isFailure) {\n            return acc.concat({\n                receiptIds: it.outcome.receipt_ids,\n                logs: it.outcome.logs,\n                failure: typeof it.outcome.status === 'object' && it.outcome.status.Failure !== undefined\n                    ? (0, errors_1.parseRpcError)(it.outcome.status.Failure)\n                    : null\n            });\n        }\n        else {\n            return acc;\n        }\n    }, []);\n    for (const result of flatLogs) {\n        logger_1.Logger.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n        printTxOutcomeLogs({\n            contractId,\n            logs: result.logs,\n            prefix: '\\t',\n        });\n        if (result.failure) {\n            logger_1.Logger.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n        }\n    }\n}\nexports.printTxOutcomeLogsAndFailures = printTxOutcomeLogsAndFailures;\n/**\n * Format and print log output from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.logs log output from a query execution response\n * @param params.prefix string to append to the beginning of each log\n */\nfunction printTxOutcomeLogs({ contractId, logs, prefix = '', }) {\n    for (const log of logs) {\n        logger_1.Logger.log(`${prefix}Log [${contractId}]: ${log}`);\n    }\n}\nexports.printTxOutcomeLogs = printTxOutcomeLogs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHFDQUFxQztBQUNsRSxpQkFBaUIsbUJBQU8sQ0FBQyxpSEFBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxpSEFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsc0JBQXNCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0NBQXNDLHdDQUF3QyxJQUFJLDZCQUE2QjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLCtDQUErQyxXQUFXLEtBQUssZUFBZTtBQUM5RTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlEO0FBQ0EsK0JBQStCLE9BQU8sT0FBTyxXQUFXLEtBQUssSUFBSTtBQUNqRTtBQUNBO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dpbmcuanM/Yjk1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzID0gZXhwb3J0cy5wcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcyA9IHZvaWQgMDtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9sb2dnZXJcIik7XG4vKipcbiAqIFBhcnNlIGFuZCBwcmludCBkZXRhaWxzIGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5vdXRjb21lIHRoZSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gcHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMoeyBjb250cmFjdElkLCBvdXRjb21lLCB9KSB7XG4gICAgY29uc3QgZmxhdExvZ3MgPSBbb3V0Y29tZS50cmFuc2FjdGlvbl9vdXRjb21lLCAuLi5vdXRjb21lLnJlY2VpcHRzX291dGNvbWVdXG4gICAgICAgIC5yZWR1Y2UoKGFjYywgaXQpID0+IHtcbiAgICAgICAgY29uc3QgaXNGYWlsdXJlID0gdHlwZW9mIGl0Lm91dGNvbWUuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSA9PT0gJ29iamVjdCc7XG4gICAgICAgIGlmIChpdC5vdXRjb21lLmxvZ3MubGVuZ3RoIHx8IGlzRmFpbHVyZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFjYy5jb25jYXQoe1xuICAgICAgICAgICAgICAgIHJlY2VpcHRJZHM6IGl0Lm91dGNvbWUucmVjZWlwdF9pZHMsXG4gICAgICAgICAgICAgICAgbG9nczogaXQub3V0Y29tZS5sb2dzLFxuICAgICAgICAgICAgICAgIGZhaWx1cmU6IHR5cGVvZiBpdC5vdXRjb21lLnN0YXR1cyA9PT0gJ29iamVjdCcgJiYgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIGVycm9yc18xLnBhcnNlUnBjRXJyb3IpKGl0Lm91dGNvbWUuc3RhdHVzLkZhaWx1cmUpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgfSwgW10pO1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIGZsYXRMb2dzKSB7XG4gICAgICAgIGxvZ2dlcl8xLkxvZ2dlci5sb2coYFJlY2VpcHQke3Jlc3VsdC5yZWNlaXB0SWRzLmxlbmd0aCA+IDEgPyAncycgOiAnJ306ICR7cmVzdWx0LnJlY2VpcHRJZHMuam9pbignLCAnKX1gKTtcbiAgICAgICAgcHJpbnRUeE91dGNvbWVMb2dzKHtcbiAgICAgICAgICAgIGNvbnRyYWN0SWQsXG4gICAgICAgICAgICBsb2dzOiByZXN1bHQubG9ncyxcbiAgICAgICAgICAgIHByZWZpeDogJ1xcdCcsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocmVzdWx0LmZhaWx1cmUpIHtcbiAgICAgICAgICAgIGxvZ2dlcl8xLkxvZ2dlci53YXJuKGBcXHRGYWlsdXJlIFske2NvbnRyYWN0SWR9XTogJHtyZXN1bHQuZmFpbHVyZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMgPSBwcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcztcbi8qKlxuICogRm9ybWF0IGFuZCBwcmludCBsb2cgb3V0cHV0IGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5sb2dzIGxvZyBvdXRwdXQgZnJvbSBhIHF1ZXJ5IGV4ZWN1dGlvbiByZXNwb25zZVxuICogQHBhcmFtIHBhcmFtcy5wcmVmaXggc3RyaW5nIHRvIGFwcGVuZCB0byB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggbG9nXG4gKi9cbmZ1bmN0aW9uIHByaW50VHhPdXRjb21lTG9ncyh7IGNvbnRyYWN0SWQsIGxvZ3MsIHByZWZpeCA9ICcnLCB9KSB7XG4gICAgZm9yIChjb25zdCBsb2cgb2YgbG9ncykge1xuICAgICAgICBsb2dnZXJfMS5Mb2dnZXIubG9nKGAke3ByZWZpeH1Mb2cgWyR7Y29udHJhY3RJZH1dOiAke2xvZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLnByaW50VHhPdXRjb21lTG9ncyA9IHByaW50VHhPdXRjb21lTG9ncztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logging.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/provider.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/provider.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTransactionLastResult = void 0;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvcHJvdmlkZXIuanM/YjVlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0ID0gdm9pZCAwO1xuLyoqIEBoaWRkZW4gKi9cbmZ1bmN0aW9uIGdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdCh0eFJlc3VsdCkge1xuICAgIGlmICh0eXBlb2YgdHhSZXN1bHQuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdHhSZXN1bHQuc3RhdHVzLlN1Y2Nlc3NWYWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBCdWZmZXIuZnJvbSh0eFJlc3VsdC5zdGF0dXMuU3VjY2Vzc1ZhbHVlLCAnYmFzZTY0JykudG9TdHJpbmcoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0cy5nZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQgPSBnZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sortBigIntAsc = void 0;\nfunction sortBigIntAsc(a, b) {\n    return (a < b ? -1 : a > b ? 1 : 0);\n}\nexports.sortBigIntAsc = sortBigIntAsc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3V0aWxzLmpzPzI2NzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNvcnRCaWdJbnRBc2MgPSB2b2lkIDA7XG5mdW5jdGlvbiBzb3J0QmlnSW50QXNjKGEsIGIpIHtcbiAgICByZXR1cm4gKGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwKTtcbn1cbmV4cG9ydHMuc29ydEJpZ0ludEFzYyA9IHNvcnRCaWdJbnRBc2M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/validators.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/validators.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"(ssr)/./node_modules/depd/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js\");\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @param validators: current or next epoch validators.\n * @param maxNumberOfSeats: maximum number of seats in the network.\n * @param minimumStakeRatio: minimum stake ratio\n * @param protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = (0, depd_1.default)('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // hardcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const num = BigInt(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (stakesSum < num) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = BigInt(1), right = stakesSum + BigInt(1);\n    while (left !== right - BigInt(1)) {\n        const mid = (left + right) / BigInt(2);\n        let found = false;\n        let currentSum = BigInt(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum + (stakes[i] / mid);\n            if (currentSum >= num) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum * BigInt(minimumStakeRatio[0]) / BigInt(minimumStakeRatio[1]);\n    }\n    else {\n        return stakes[0] + BigInt(1);\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @param currentValidators: list of current validators.\n * @param nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcscUJBQXFCO0FBQ25ELCtCQUErQixtQkFBTyxDQUFDLGdEQUFNO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLHlHQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBKQUEwSjtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFtRDtBQUM1RTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3ZhbGlkYXRvcnMuanM/ZWMxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IGV4cG9ydHMuZmluZFNlYXRQcmljZSA9IHZvaWQgMDtcbmNvbnN0IGRlcGRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVwZFwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG4vKiogRmluZHMgc2VhdCBwcmljZSBnaXZlbiB2YWxpZGF0b3JzIHN0YWtlcyBhbmQgbnVtYmVyIG9mIHNlYXRzLlxuICogIENhbGN1bGF0aW9uIGZvbGxvdyB0aGUgc3BlYzogaHR0cHM6Ly9ub21pY29uLmlvL0Vjb25vbWljcy9SRUFETUUuaHRtbCN2YWxpZGF0b3Itc2VsZWN0aW9uXG4gKiBAcGFyYW0gdmFsaWRhdG9yczogY3VycmVudCBvciBuZXh0IGVwb2NoIHZhbGlkYXRvcnMuXG4gKiBAcGFyYW0gbWF4TnVtYmVyT2ZTZWF0czogbWF4aW11bSBudW1iZXIgb2Ygc2VhdHMgaW4gdGhlIG5ldHdvcmsuXG4gKiBAcGFyYW0gbWluaW11bVN0YWtlUmF0aW86IG1pbmltdW0gc3Rha2UgcmF0aW9cbiAqIEBwYXJhbSBwcm90b2NvbFZlcnNpb246IHZlcnNpb24gb2YgdGhlIHByb3RvY29sIGZyb20gZ2VuZXNpcyBjb25maWdcbiAqL1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbywgcHJvdG9jb2xWZXJzaW9uKSB7XG4gICAgaWYgKHByb3RvY29sVmVyc2lvbiAmJiBwcm90b2NvbFZlcnNpb24gPCA0OSkge1xuICAgICAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cyk7XG4gICAgfVxuICAgIGlmICghbWluaW11bVN0YWtlUmF0aW8pIHtcbiAgICAgICAgY29uc3QgZGVwcmVjYXRlID0gKDAsIGRlcGRfMS5kZWZhdWx0KSgnZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzKScpO1xuICAgICAgICBkZXByZWNhdGUoJ2B1c2UgYGZpbmRTZWF0UHJpY2UodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cywgbWluaW11bVN0YWtlUmF0aW8pYCBpbnN0ZWFkJyk7XG4gICAgICAgIG1pbmltdW1TdGFrZVJhdGlvID0gWzEsIDYyNTBdOyAvLyBoYXJkY29kZWQgbWluaW11bVN0YWtlUmF0aW9uIGZyb20gMTIvNy8yMVxuICAgIH1cbiAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbyk7XG59XG5leHBvcnRzLmZpbmRTZWF0UHJpY2UgPSBmaW5kU2VhdFByaWNlO1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbnVtU2VhdHMpIHtcbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IG51bSA9IEJpZ0ludChudW1TZWF0cyk7XG4gICAgY29uc3Qgc3Rha2VzU3VtID0gc3Rha2VzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIGlmIChzdGFrZXNTdW0gPCBudW0pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdGFrZXMgYXJlIGJlbG93IHNlYXRzJyk7XG4gICAgfVxuICAgIC8vIGFzc2VydCBzdGFrZXNTdW0gPj0gbnVtU2VhdHNcbiAgICBsZXQgbGVmdCA9IEJpZ0ludCgxKSwgcmlnaHQgPSBzdGFrZXNTdW0gKyBCaWdJbnQoMSk7XG4gICAgd2hpbGUgKGxlZnQgIT09IHJpZ2h0IC0gQmlnSW50KDEpKSB7XG4gICAgICAgIGNvbnN0IG1pZCA9IChsZWZ0ICsgcmlnaHQpIC8gQmlnSW50KDIpO1xuICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGN1cnJlbnRTdW0gPSBCaWdJbnQoMCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Rha2VzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBjdXJyZW50U3VtID0gY3VycmVudFN1bSArIChzdGFrZXNbaV0gLyBtaWQpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRTdW0gPj0gbnVtKSB7XG4gICAgICAgICAgICAgICAgbGVmdCA9IG1pZDtcbiAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFmb3VuZCkge1xuICAgICAgICAgICAgcmlnaHQgPSBtaWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxlZnQ7XG59XG4vLyBuZWFyY29yZSByZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9uZWFyL25lYXJjb3JlL2Jsb2IvNWE4YWUyNjNlYzA3OTMwY2QzNGQwZGNmNWJjZWUyNTBjNjdjMDJhYS9jaGFpbi9lcG9jaF9tYW5hZ2VyL3NyYy92YWxpZGF0b3Jfc2VsZWN0aW9uLnJzI0wzMDg7TDMxNVxuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbykge1xuICAgIGlmIChtaW5pbXVtU3Rha2VSYXRpby5sZW5ndGggIT0gMikge1xuICAgICAgICB0aHJvdyBFcnJvcignbWluaW11bVN0YWtlUmF0aW8gc2hvdWxkIGhhdmUgMiBlbGVtZW50cycpO1xuICAgIH1cbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IHN0YWtlc1N1bSA9IHN0YWtlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICBpZiAodmFsaWRhdG9ycy5sZW5ndGggPCBtYXhOdW1iZXJPZlNlYXRzKSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNTdW0gKiBCaWdJbnQobWluaW11bVN0YWtlUmF0aW9bMF0pIC8gQmlnSW50KG1pbmltdW1TdGFrZVJhdGlvWzFdKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNbMF0gKyBCaWdJbnQoMSk7XG4gICAgfVxufVxuLyoqIERpZmYgdmFsaWRhdG9ycyBiZXR3ZWVuIGN1cnJlbnQgYW5kIG5leHQgZXBvY2guXG4gKiBSZXR1cm5zIGFkZGl0aW9ucywgc3VidHJhY3Rpb25zIGFuZCBjaGFuZ2VzIHRvIHZhbGlkYXRvciBzZXQuXG4gKiBAcGFyYW0gY3VycmVudFZhbGlkYXRvcnM6IGxpc3Qgb2YgY3VycmVudCB2YWxpZGF0b3JzLlxuICogQHBhcmFtIG5leHRWYWxpZGF0b3JzOiBsaXN0IG9mIG5leHQgdmFsaWRhdG9ycy5cbiAqL1xuZnVuY3Rpb24gZGlmZkVwb2NoVmFsaWRhdG9ycyhjdXJyZW50VmFsaWRhdG9ycywgbmV4dFZhbGlkYXRvcnMpIHtcbiAgICBjb25zdCB2YWxpZGF0b3JzTWFwID0gbmV3IE1hcCgpO1xuICAgIGN1cnJlbnRWYWxpZGF0b3JzLmZvckVhY2godiA9PiB2YWxpZGF0b3JzTWFwLnNldCh2LmFjY291bnRfaWQsIHYpKTtcbiAgICBjb25zdCBuZXh0VmFsaWRhdG9yc1NldCA9IG5ldyBTZXQobmV4dFZhbGlkYXRvcnMubWFwKHYgPT4gdi5hY2NvdW50X2lkKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV3VmFsaWRhdG9yczogbmV4dFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIXZhbGlkYXRvcnNNYXAuaGFzKHYuYWNjb3VudF9pZCkpLFxuICAgICAgICByZW1vdmVkVmFsaWRhdG9yczogY3VycmVudFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIW5leHRWYWxpZGF0b3JzU2V0Lmhhcyh2LmFjY291bnRfaWQpKSxcbiAgICAgICAgY2hhbmdlZFZhbGlkYXRvcnM6IG5leHRWYWxpZGF0b3JzLmZpbHRlcih2ID0+ICh2YWxpZGF0b3JzTWFwLmhhcyh2LmFjY291bnRfaWQpICYmIHZhbGlkYXRvcnNNYXAuZ2V0KHYuYWNjb3VudF9pZCkuc3Rha2UgIT0gdi5zdGFrZSkpXG4gICAgICAgICAgICAubWFwKHYgPT4gKHsgY3VycmVudDogdmFsaWRhdG9yc01hcC5nZXQodi5hY2NvdW50X2lkKSwgbmV4dDogdiB9KSlcbiAgICB9O1xufVxuZXhwb3J0cy5kaWZmRXBvY2hWYWxpZGF0b3JzID0gZGlmZkVwb2NoVmFsaWRhdG9ycztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/lib/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnencryptedFileSystemKeyStore = exports.readKeyFile = void 0;\nvar unencrypted_file_system_keystore_1 = __webpack_require__(/*! ./unencrypted_file_system_keystore */ \"(ssr)/./node_modules/@near-js/keystores-node/lib/unencrypted_file_system_keystore.js\");\nObject.defineProperty(exports, \"readKeyFile\", ({ enumerable: true, get: function () { return unencrypted_file_system_keystore_1.readKeyFile; } }));\nObject.defineProperty(exports, \"UnencryptedFileSystemKeyStore\", ({ enumerable: true, get: function () { return unencrypted_file_system_keystore_1.UnencryptedFileSystemKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQyxHQUFHLG1CQUFtQjtBQUMzRCx5Q0FBeUMsbUJBQU8sQ0FBQyxnSUFBb0M7QUFDckYsK0NBQThDLEVBQUUscUNBQXFDLDBEQUEwRCxFQUFDO0FBQ2hKLGlFQUFnRSxFQUFFLHFDQUFxQyw0RUFBNEUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbGliL2luZGV4LmpzPzNhNjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVuZW5jcnlwdGVkRmlsZVN5c3RlbUtleVN0b3JlID0gZXhwb3J0cy5yZWFkS2V5RmlsZSA9IHZvaWQgMDtcbnZhciB1bmVuY3J5cHRlZF9maWxlX3N5c3RlbV9rZXlzdG9yZV8xID0gcmVxdWlyZShcIi4vdW5lbmNyeXB0ZWRfZmlsZV9zeXN0ZW1fa2V5c3RvcmVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJyZWFkS2V5RmlsZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdW5lbmNyeXB0ZWRfZmlsZV9zeXN0ZW1fa2V5c3RvcmVfMS5yZWFkS2V5RmlsZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVuZW5jcnlwdGVkRmlsZVN5c3RlbUtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1bmVuY3J5cHRlZF9maWxlX3N5c3RlbV9rZXlzdG9yZV8xLlVuZW5jcnlwdGVkRmlsZVN5c3RlbUtleVN0b3JlOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/lib/unencrypted_file_system_keystore.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/lib/unencrypted_file_system_keystore.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnencryptedFileSystemKeyStore = exports.readKeyFile = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/index.js\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/index.js\");\nconst fs_1 = __importDefault(__webpack_require__(/*! fs */ \"fs\"));\nconst path_1 = __importDefault(__webpack_require__(/*! path */ \"path\"));\nconst util_1 = __webpack_require__(/*! util */ \"util\");\n/* remove for versions not referenced by near-api-js */\nconst promisify = (fn) => {\n    if (!fn) {\n        return () => {\n            throw new Error('Trying to use unimplemented function. `fs` module not available in web build?');\n        };\n    }\n    return (0, util_1.promisify)(fn);\n};\nconst exists = promisify(fs_1.default.exists);\nconst readFile = promisify(fs_1.default.readFile);\nconst writeFile = promisify(fs_1.default.writeFile);\nconst unlink = promisify(fs_1.default.unlink);\nconst readdir = promisify(fs_1.default.readdir);\nconst mkdir = promisify(fs_1.default.mkdir);\n/** @hidden */\nfunction loadJsonFile(filename) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const content = yield readFile(filename);\n        return JSON.parse(content.toString());\n    });\n}\nfunction ensureDir(dir) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield mkdir(dir, { recursive: true });\n        }\n        catch (err) {\n            if (err.code !== 'EEXIST') {\n                throw err;\n            }\n        }\n    });\n}\n/** @hidden */\nfunction readKeyFile(filename) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const accountInfo = yield loadJsonFile(filename);\n        // The private key might be in private_key or secret_key field.\n        let privateKey = accountInfo.private_key;\n        if (!privateKey && accountInfo.secret_key) {\n            privateKey = accountInfo.secret_key;\n        }\n        return [accountInfo.account_id, crypto_1.KeyPair.fromString(privateKey)];\n    });\n}\nexports.readKeyFile = readKeyFile;\n/**\n * This class is used to store keys on the file system.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * const { homedir } = require('os');\n * const { connect, keyStores } = require('near-api-js');\n *\n * const keyStore = new keyStores.UnencryptedFileSystemKeyStore(`${homedir()}/.near-credentials`);\n * const config = {\n *   keyStore, // instance of UnencryptedFileSystemKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass UnencryptedFileSystemKeyStore extends keystores_1.KeyStore {\n    /**\n     * @param keyDir base directory for key storage. Keys will be stored in `keyDir/networkId/accountId.json`\n     */\n    constructor(keyDir) {\n        super();\n        this.keyDir = path_1.default.resolve(keyDir);\n    }\n    /**\n     * Store a {@link KeyPair} in an unencrypted file\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield ensureDir(`${this.keyDir}/${networkId}`);\n            const content = { account_id: accountId, public_key: keyPair.getPublicKey().toString(), private_key: keyPair.toString() };\n            yield writeFile(this.getKeyFilePath(networkId, accountId), JSON.stringify(content), { mode: 0o600 });\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from an unencrypted file\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Find key / account id.\n            if (!(yield exists(this.getKeyFilePath(networkId, accountId)))) {\n                return null;\n            }\n            const accountKeyPair = yield readKeyFile(this.getKeyFilePath(networkId, accountId));\n            return accountKeyPair[1];\n        });\n    }\n    /**\n     * Deletes an unencrypted file holding a {@link KeyPair}\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (yield exists(this.getKeyFilePath(networkId, accountId))) {\n                yield unlink(this.getKeyFilePath(networkId, accountId));\n            }\n        });\n    }\n    /**\n     * Deletes all unencrypted files from the `keyDir` path.\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const network of yield this.getNetworks()) {\n                for (const account of yield this.getAccounts(network)) {\n                    yield this.removeKey(network, account);\n                }\n            }\n        });\n    }\n    /** @hidden */\n    getKeyFilePath(networkId, accountId) {\n        return `${this.keyDir}/${networkId}/${accountId}.json`;\n    }\n    /**\n     * Get the network(s) from files in `keyDir`\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const files = yield readdir(this.keyDir);\n            const result = new Array();\n            files.forEach((item) => {\n                result.push(item);\n            });\n            return result;\n        });\n    }\n    /**\n     * Gets the account(s) files in `keyDir/networkId`\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(yield exists(`${this.keyDir}/${networkId}`))) {\n                return [];\n            }\n            const files = yield readdir(`${this.keyDir}/${networkId}`);\n            return files\n                .filter(file => file.endsWith('.json'))\n                .map(file => file.replace(/.json$/, ''));\n        });\n    }\n    /** @hidden */\n    toString() {\n        return `UnencryptedFileSystemKeyStore(${this.keyDir})`;\n    }\n}\nexports.UnencryptedFileSystemKeyStore = UnencryptedFileSystemKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbGliL3VuZW5jcnlwdGVkX2ZpbGVfc3lzdGVtX2tleXN0b3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQyxHQUFHLG1CQUFtQjtBQUMzRCxpQkFBaUIsbUJBQU8sQ0FBQywrR0FBaUI7QUFDMUMsb0JBQW9CLG1CQUFPLENBQUMscUhBQW9CO0FBQ2hELDZCQUE2QixtQkFBTyxDQUFDLGNBQUk7QUFDekMsK0JBQStCLG1CQUFPLENBQUMsa0JBQU07QUFDN0MsZUFBZSxtQkFBTyxDQUFDLGtCQUFNO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsaUJBQWlCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLHFCQUFxQjtBQUNoQztBQUNBLG1FQUFtRSxVQUFVO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLFlBQVksR0FBRyxVQUFVO0FBQ3hELDhCQUE4QjtBQUM5QixrR0FBa0csYUFBYTtBQUMvRyxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWSxHQUFHLFVBQVUsR0FBRyxVQUFVO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxZQUFZLEdBQUcsVUFBVTtBQUMzRDtBQUNBO0FBQ0EsMkNBQTJDLFlBQVksR0FBRyxVQUFVO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsWUFBWTtBQUM1RDtBQUNBO0FBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9saWIvdW5lbmNyeXB0ZWRfZmlsZV9zeXN0ZW1fa2V5c3RvcmUuanM/OTlkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VbmVuY3J5cHRlZEZpbGVTeXN0ZW1LZXlTdG9yZSA9IGV4cG9ydHMucmVhZEtleUZpbGUgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9jcnlwdG9cIik7XG5jb25zdCBrZXlzdG9yZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9rZXlzdG9yZXNcIik7XG5jb25zdCBmc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJmc1wiKSk7XG5jb25zdCBwYXRoXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInBhdGhcIikpO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcInV0aWxcIik7XG4vKiByZW1vdmUgZm9yIHZlcnNpb25zIG5vdCByZWZlcmVuY2VkIGJ5IG5lYXItYXBpLWpzICovXG5jb25zdCBwcm9taXNpZnkgPSAoZm4pID0+IHtcbiAgICBpZiAoIWZuKSB7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyeWluZyB0byB1c2UgdW5pbXBsZW1lbnRlZCBmdW5jdGlvbi4gYGZzYCBtb2R1bGUgbm90IGF2YWlsYWJsZSBpbiB3ZWIgYnVpbGQ/Jyk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiAoMCwgdXRpbF8xLnByb21pc2lmeSkoZm4pO1xufTtcbmNvbnN0IGV4aXN0cyA9IHByb21pc2lmeShmc18xLmRlZmF1bHQuZXhpc3RzKTtcbmNvbnN0IHJlYWRGaWxlID0gcHJvbWlzaWZ5KGZzXzEuZGVmYXVsdC5yZWFkRmlsZSk7XG5jb25zdCB3cml0ZUZpbGUgPSBwcm9taXNpZnkoZnNfMS5kZWZhdWx0LndyaXRlRmlsZSk7XG5jb25zdCB1bmxpbmsgPSBwcm9taXNpZnkoZnNfMS5kZWZhdWx0LnVubGluayk7XG5jb25zdCByZWFkZGlyID0gcHJvbWlzaWZ5KGZzXzEuZGVmYXVsdC5yZWFkZGlyKTtcbmNvbnN0IG1rZGlyID0gcHJvbWlzaWZ5KGZzXzEuZGVmYXVsdC5ta2Rpcik7XG4vKiogQGhpZGRlbiAqL1xuZnVuY3Rpb24gbG9hZEpzb25GaWxlKGZpbGVuYW1lKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgY29udGVudCA9IHlpZWxkIHJlYWRGaWxlKGZpbGVuYW1lKTtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoY29udGVudC50b1N0cmluZygpKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGVuc3VyZURpcihkaXIpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgeWllbGQgbWtkaXIoZGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBpZiAoZXJyLmNvZGUgIT09ICdFRVhJU1QnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59XG4vKiogQGhpZGRlbiAqL1xuZnVuY3Rpb24gcmVhZEtleUZpbGUoZmlsZW5hbWUpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBhY2NvdW50SW5mbyA9IHlpZWxkIGxvYWRKc29uRmlsZShmaWxlbmFtZSk7XG4gICAgICAgIC8vIFRoZSBwcml2YXRlIGtleSBtaWdodCBiZSBpbiBwcml2YXRlX2tleSBvciBzZWNyZXRfa2V5IGZpZWxkLlxuICAgICAgICBsZXQgcHJpdmF0ZUtleSA9IGFjY291bnRJbmZvLnByaXZhdGVfa2V5O1xuICAgICAgICBpZiAoIXByaXZhdGVLZXkgJiYgYWNjb3VudEluZm8uc2VjcmV0X2tleSkge1xuICAgICAgICAgICAgcHJpdmF0ZUtleSA9IGFjY291bnRJbmZvLnNlY3JldF9rZXk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFthY2NvdW50SW5mby5hY2NvdW50X2lkLCBjcnlwdG9fMS5LZXlQYWlyLmZyb21TdHJpbmcocHJpdmF0ZUtleSldO1xuICAgIH0pO1xufVxuZXhwb3J0cy5yZWFkS2V5RmlsZSA9IHJlYWRLZXlGaWxlO1xuLyoqXG4gKiBUaGlzIGNsYXNzIGlzIHVzZWQgdG8gc3RvcmUga2V5cyBvbiB0aGUgZmlsZSBzeXN0ZW0uXG4gKlxuICogQHNlZSBbaHR0cHM6Ly9kb2NzLm5lYXIub3JnL2RvY3MvZGV2ZWxvcC9mcm9udC1lbmQvbmFqLXF1aWNrLXJlZmVyZW5jZSNrZXktc3RvcmVdKGh0dHBzOi8vZG9jcy5uZWFyLm9yZy9kb2NzL2RldmVsb3AvZnJvbnQtZW5kL25hai1xdWljay1yZWZlcmVuY2Uja2V5LXN0b3JlKVxuICogQGV4YW1wbGVcbiAqIGBgYGpzXG4gKiBjb25zdCB7IGhvbWVkaXIgfSA9IHJlcXVpcmUoJ29zJyk7XG4gKiBjb25zdCB7IGNvbm5lY3QsIGtleVN0b3JlcyB9ID0gcmVxdWlyZSgnbmVhci1hcGktanMnKTtcbiAqXG4gKiBjb25zdCBrZXlTdG9yZSA9IG5ldyBrZXlTdG9yZXMuVW5lbmNyeXB0ZWRGaWxlU3lzdGVtS2V5U3RvcmUoYCR7aG9tZWRpcigpfS8ubmVhci1jcmVkZW50aWFsc2ApO1xuICogY29uc3QgY29uZmlnID0ge1xuICogICBrZXlTdG9yZSwgLy8gaW5zdGFuY2Ugb2YgVW5lbmNyeXB0ZWRGaWxlU3lzdGVtS2V5U3RvcmVcbiAqICAgbmV0d29ya0lkOiAndGVzdG5ldCcsXG4gKiAgIG5vZGVVcmw6ICdodHRwczovL3JwYy50ZXN0bmV0Lm5lYXIub3JnJyxcbiAqICAgd2FsbGV0VXJsOiAnaHR0cHM6Ly93YWxsZXQudGVzdG5ldC5uZWFyLm9yZycsXG4gKiAgIGhlbHBlclVybDogJ2h0dHBzOi8vaGVscGVyLnRlc3RuZXQubmVhci5vcmcnLFxuICogICBleHBsb3JlclVybDogJ2h0dHBzOi8vZXhwbG9yZXIudGVzdG5ldC5uZWFyLm9yZydcbiAqIH07XG4gKlxuICogLy8gaW5zaWRlIGFuIGFzeW5jIGZ1bmN0aW9uXG4gKiBjb25zdCBuZWFyID0gYXdhaXQgY29ubmVjdChjb25maWcpXG4gKiBgYGBcbiAqL1xuY2xhc3MgVW5lbmNyeXB0ZWRGaWxlU3lzdGVtS2V5U3RvcmUgZXh0ZW5kcyBrZXlzdG9yZXNfMS5LZXlTdG9yZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGtleURpciBiYXNlIGRpcmVjdG9yeSBmb3Iga2V5IHN0b3JhZ2UuIEtleXMgd2lsbCBiZSBzdG9yZWQgaW4gYGtleURpci9uZXR3b3JrSWQvYWNjb3VudElkLmpzb25gXG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioa2V5RGlyKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMua2V5RGlyID0gcGF0aF8xLmRlZmF1bHQucmVzb2x2ZShrZXlEaXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdG9yZSBhIHtAbGluayBLZXlQYWlyfSBpbiBhbiB1bmVuY3J5cHRlZCBmaWxlXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICogQHBhcmFtIGtleVBhaXIgVGhlIGtleSBwYWlyIHRvIHN0b3JlIGluIGxvY2FsIHN0b3JhZ2VcbiAgICAgKi9cbiAgICBzZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQsIGtleVBhaXIpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHlpZWxkIGVuc3VyZURpcihgJHt0aGlzLmtleURpcn0vJHtuZXR3b3JrSWR9YCk7XG4gICAgICAgICAgICBjb25zdCBjb250ZW50ID0geyBhY2NvdW50X2lkOiBhY2NvdW50SWQsIHB1YmxpY19rZXk6IGtleVBhaXIuZ2V0UHVibGljS2V5KCkudG9TdHJpbmcoKSwgcHJpdmF0ZV9rZXk6IGtleVBhaXIudG9TdHJpbmcoKSB9O1xuICAgICAgICAgICAgeWllbGQgd3JpdGVGaWxlKHRoaXMuZ2V0S2V5RmlsZVBhdGgobmV0d29ya0lkLCBhY2NvdW50SWQpLCBKU09OLnN0cmluZ2lmeShjb250ZW50KSwgeyBtb2RlOiAwbzYwMCB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSBhbiB1bmVuY3J5cHRlZCBmaWxlXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICogQHJldHVybnMge1Byb21pc2U8S2V5UGFpcj59XG4gICAgICovXG4gICAgZ2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICAvLyBGaW5kIGtleSAvIGFjY291bnQgaWQuXG4gICAgICAgICAgICBpZiAoISh5aWVsZCBleGlzdHModGhpcy5nZXRLZXlGaWxlUGF0aChuZXR3b3JrSWQsIGFjY291bnRJZCkpKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYWNjb3VudEtleVBhaXIgPSB5aWVsZCByZWFkS2V5RmlsZSh0aGlzLmdldEtleUZpbGVQYXRoKG5ldHdvcmtJZCwgYWNjb3VudElkKSk7XG4gICAgICAgICAgICByZXR1cm4gYWNjb3VudEtleVBhaXJbMV07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGVzIGFuIHVuZW5jcnlwdGVkIGZpbGUgaG9sZGluZyBhIHtAbGluayBLZXlQYWlyfVxuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqL1xuICAgIHJlbW92ZUtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKHlpZWxkIGV4aXN0cyh0aGlzLmdldEtleUZpbGVQYXRoKG5ldHdvcmtJZCwgYWNjb3VudElkKSkpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCB1bmxpbmsodGhpcy5nZXRLZXlGaWxlUGF0aChuZXR3b3JrSWQsIGFjY291bnRJZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlcyBhbGwgdW5lbmNyeXB0ZWQgZmlsZXMgZnJvbSB0aGUgYGtleURpcmAgcGF0aC5cbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgbmV0d29yayBvZiB5aWVsZCB0aGlzLmdldE5ldHdvcmtzKCkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGFjY291bnQgb2YgeWllbGQgdGhpcy5nZXRBY2NvdW50cyhuZXR3b3JrKSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCB0aGlzLnJlbW92ZUtleShuZXR3b3JrLCBhY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIGdldEtleUZpbGVQYXRoKG5ldHdvcmtJZCwgYWNjb3VudElkKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLmtleURpcn0vJHtuZXR3b3JrSWR9LyR7YWNjb3VudElkfS5qc29uYDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gZmlsZXMgaW4gYGtleURpcmBcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBmaWxlcyA9IHlpZWxkIHJlYWRkaXIodGhpcy5rZXlEaXIpO1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IEFycmF5KCk7XG4gICAgICAgICAgICBmaWxlcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goaXRlbSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBhY2NvdW50KHMpIGZpbGVzIGluIGBrZXlEaXIvbmV0d29ya0lkYFxuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqL1xuICAgIGdldEFjY291bnRzKG5ldHdvcmtJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCEoeWllbGQgZXhpc3RzKGAke3RoaXMua2V5RGlyfS8ke25ldHdvcmtJZH1gKSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBmaWxlcyA9IHlpZWxkIHJlYWRkaXIoYCR7dGhpcy5rZXlEaXJ9LyR7bmV0d29ya0lkfWApO1xuICAgICAgICAgICAgcmV0dXJuIGZpbGVzXG4gICAgICAgICAgICAgICAgLmZpbHRlcihmaWxlID0+IGZpbGUuZW5kc1dpdGgoJy5qc29uJykpXG4gICAgICAgICAgICAgICAgLm1hcChmaWxlID0+IGZpbGUucmVwbGFjZSgvLmpzb24kLywgJycpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBgVW5lbmNyeXB0ZWRGaWxlU3lzdGVtS2V5U3RvcmUoJHt0aGlzLmtleURpcn0pYDtcbiAgICB9XG59XG5leHBvcnRzLlVuZW5jcnlwdGVkRmlsZVN5c3RlbUtleVN0b3JlID0gVW5lbmNyeXB0ZWRGaWxlU3lzdGVtS2V5U3RvcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/lib/unencrypted_file_system_keystore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/constants.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/constants.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeySize = exports.KeyType = void 0;\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n    KeyType[KeyType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nvar KeySize;\n(function (KeySize) {\n    KeySize[KeySize[\"SECRET_KEY\"] = 32] = \"SECRET_KEY\";\n    KeySize[KeySize[\"ED25519_PUBLIC_KEY\"] = 32] = \"ED25519_PUBLIC_KEY\";\n    KeySize[KeySize[\"SECP256k1_PUBLIC_KEY\"] = 64] = \"SECP256k1_PUBLIC_KEY\";\n})(KeySize = exports.KeySize || (exports.KeySize = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyxlQUFlLEtBQUs7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDLGVBQWUsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzPzZjMDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVNpemUgPSBleHBvcnRzLktleVR5cGUgPSB2b2lkIDA7XG4vKiogQWxsIHN1cHBvcnRlZCBrZXkgdHlwZXMgKi9cbnZhciBLZXlUeXBlO1xuKGZ1bmN0aW9uIChLZXlUeXBlKSB7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiRUQyNTUxOVwiXSA9IDBdID0gXCJFRDI1NTE5XCI7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiU0VDUDI1NksxXCJdID0gMV0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoS2V5VHlwZSA9IGV4cG9ydHMuS2V5VHlwZSB8fCAoZXhwb3J0cy5LZXlUeXBlID0ge30pKTtcbnZhciBLZXlTaXplO1xuKGZ1bmN0aW9uIChLZXlTaXplKSB7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUkVUX0tFWVwiXSA9IDMyXSA9IFwiU0VDUkVUX0tFWVwiO1xuICAgIEtleVNpemVbS2V5U2l6ZVtcIkVEMjU1MTlfUFVCTElDX0tFWVwiXSA9IDMyXSA9IFwiRUQyNTUxOV9QVUJMSUNfS0VZXCI7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUDI1NmsxX1BVQkxJQ19LRVlcIl0gPSA2NF0gPSBcIlNFQ1AyNTZrMV9QVUJMSUNfS0VZXCI7XG59KShLZXlTaXplID0gZXhwb3J0cy5LZXlTaXplIHx8IChleHBvcnRzLktleVNpemUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.KeyPairSecp256k1 = exports.KeyPairEd25519 = exports.KeyPair = exports.KeyType = void 0;\nvar constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/constants.js\");\nObject.defineProperty(exports, \"KeyType\", ({ enumerable: true, get: function () { return constants_1.KeyType; } }));\nvar key_pair_1 = __webpack_require__(/*! ./key_pair */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair.js\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nvar key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return key_pair_ed25519_1.KeyPairEd25519; } }));\nvar key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nObject.defineProperty(exports, \"KeyPairSecp256k1\", ({ enumerable: true, get: function () { return key_pair_secp256k1_1.KeyPairSecp256k1; } }));\nvar public_key_1 = __webpack_require__(/*! ./public_key */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/public_key.js\");\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return public_key_1.PublicKey; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsZUFBZSxHQUFHLGVBQWU7QUFDekcsa0JBQWtCLG1CQUFPLENBQUMsK0dBQWE7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2pILGlCQUFpQixtQkFBTyxDQUFDLDZHQUFZO0FBQ3JDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCx5QkFBeUIsbUJBQU8sQ0FBQyw2SEFBb0I7QUFDckQsa0RBQWlELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3RJLDJCQUEyQixtQkFBTyxDQUFDLGlJQUFzQjtBQUN6RCxvREFBbUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDNUksbUJBQW1CLG1CQUFPLENBQUMsaUhBQWM7QUFDekMsNkNBQTRDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9pbmRleC5qcz9kY2FkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QdWJsaWNLZXkgPSBleHBvcnRzLktleVBhaXJTZWNwMjU2azEgPSBleHBvcnRzLktleVBhaXJFZDI1NTE5ID0gZXhwb3J0cy5LZXlQYWlyID0gZXhwb3J0cy5LZXlUeXBlID0gdm9pZCAwO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuS2V5VHlwZTsgfSB9KTtcbnZhciBrZXlfcGFpcl8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl8xLktleVBhaXI7IH0gfSk7XG52YXIga2V5X3BhaXJfZWQyNTUxOV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfZWQyNTUxOVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJFZDI1NTE5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9lZDI1NTE5XzEuS2V5UGFpckVkMjU1MTk7IH0gfSk7XG52YXIga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyU2VjcDI1NmsxXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxOyB9IH0pO1xudmFyIHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdWJsaWNLZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmxpY19rZXlfMS5QdWJsaWNLZXk7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPair = void 0;\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nconst key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nclass KeyPair extends key_pair_base_1.KeyPairBase {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return key_pair_ed25519_1.KeyPairEd25519.fromRandom();\n            case 'SECP256K1': return key_pair_secp256k1_1.KeyPairSecp256k1.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    /**\n     * Creates a key pair from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {KeyPair} The key pair created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new key_pair_ed25519_1.KeyPairEd25519(parts[1]);\n                case 'SECP256K1': return new key_pair_secp256k1_1.KeyPairSecp256k1(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHdCQUF3QixtQkFBTyxDQUFDLHVIQUFpQjtBQUNqRCwyQkFBMkIsbUJBQU8sQ0FBQyw2SEFBb0I7QUFDdkQsNkJBQTZCLG1CQUFPLENBQUMsaUlBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxTQUFTO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanM/N2VmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpciA9IHZvaWQgMDtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBrZXlfcGFpcl9lZDI1NTE5XzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9lZDI1NTE5XCIpO1xuY29uc3Qga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5jbGFzcyBLZXlQYWlyIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY3VydmUgTmFtZSBvZiBlbGxpcHRpY2FsIGN1cnZlLCBjYXNlLWluc2Vuc2l0aXZlXG4gICAgICogQHJldHVybnMgUmFuZG9tIEtleVBhaXIgYmFzZWQgb24gdGhlIGN1cnZlXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oY3VydmUpIHtcbiAgICAgICAgc3dpdGNoIChjdXJ2ZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICAgICAgICBjYXNlICdFRDI1NTE5JzogcmV0dXJuIGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBjYXNlICdTRUNQMjU2SzEnOiByZXR1cm4ga2V5X3BhaXJfc2VjcDI1NmsxXzEuS2V5UGFpclNlY3AyNTZrMS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmUgJHtjdXJ2ZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEga2V5IHBhaXIgZnJvbSBhbiBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHBhcmFtIGVuY29kZWRLZXkgVGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKiBAcmV0dXJucyB7S2V5UGFpcn0gVGhlIGtleSBwYWlyIGNyZWF0ZWQgZnJvbSB0aGUgZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGVuY29kZWRLZXkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBlbmNvZGVkS2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocGFydHNbMF0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0VEMjU1MTknOiByZXR1cm4gbmV3IGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOShwYXJ0c1sxXSk7XG4gICAgICAgICAgICAgICAgY2FzZSAnU0VDUDI1NksxJzogcmV0dXJuIG5ldyBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxKHBhcnRzWzFdKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmU6ICR7cGFydHNbMF19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jb2RlZCBrZXkgZm9ybWF0LCBtdXN0IGJlIDxjdXJ2ZT46PGVuY29kZWQga2V5PicpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyID0gS2V5UGFpcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_base.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_base.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairBase = void 0;\nclass KeyPairBase {\n}\nexports.KeyPairBase = KeyPairBase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcz80MjcwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlQYWlyQmFzZSA9IHZvaWQgMDtcbmNsYXNzIEtleVBhaXJCYXNlIHtcbn1cbmV4cG9ydHMuS2V5UGFpckJhc2UgPSBLZXlQYWlyQmFzZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_ed25519.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_ed25519.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairEd25519 = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"(ssr)/./node_modules/@noble/curves/ed25519.js\");\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/public_key.js\");\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        this.publicKey = new public_key_1.PublicKey({ keyType: constants_1.KeyType.ED25519, data: publicKey });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairEd25519((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    /**\n     * Signs a message using the key pair's secret key.\n     * @param message The message to be signed.\n     * @returns {Signature} The signature object containing the signature and the public key.\n     */\n    sign(message) {\n        const signature = ed25519_1.ed25519.sign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    /**\n     * Verifies the signature of a message using the key pair's public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    /**\n     * Returns a string representation of the key pair in the format 'ed25519:[extendedSecretKey]'.\n     * @returns {string} The string representation of the key pair.\n     */\n    toString() {\n        return `ed25519:${this.extendedSecretKey}`;\n    }\n    /**\n     * Retrieves the public key associated with the key pair.\n     * @returns {PublicKey} The public key.\n     */\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfZWQyNTUxOS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQyw2R0FBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsNEVBQXVCO0FBQ2pELHNDQUFzQyxtQkFBTyxDQUFDLDhEQUFhO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLCtHQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLHVIQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyxpSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsdURBQXVEO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EsMEJBQTBCLHVCQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9lZDI1NTE5LmpzPzI1ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGVkMjU1MTlfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2VkMjU1MTlcIik7XG5jb25zdCByYW5kb21ieXRlc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyYW5kb21ieXRlc1wiKSk7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBwdWJsaWNfa2V5XzEgPSByZXF1aXJlKFwiLi9wdWJsaWNfa2V5XCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHByb3ZpZGVzIGtleSBwYWlyIGZ1bmN0aW9uYWxpdHkgZm9yIEVkMjU1MTkgY3VydmU6XG4gKiBnZW5lcmF0aW5nIGtleSBwYWlycywgZW5jb2Rpbmcga2V5IHBhaXJzLCBzaWduaW5nIGFuZCB2ZXJpZnlpbmcuXG4gKi9cbmNsYXNzIEtleVBhaXJFZDI1NTE5IGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3QgcHVibGljS2V5ID0gZWQyNTUxOV8xLmVkMjU1MTkuZ2V0UHVibGljS2V5KG5ldyBVaW50OEFycmF5KHNlY3JldEtleSkpO1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IG5ldyBwdWJsaWNfa2V5XzEuUHVibGljS2V5KHsga2V5VHlwZTogY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5LCBkYXRhOiBwdWJsaWNLZXkgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9ICgwLCByYW5kb21ieXRlc18xLmRlZmF1bHQpKGNvbnN0YW50c18xLktleVNpemUuU0VDUkVUX0tFWSk7XG4gICAgICAgIGNvbnN0IHB1YmxpY0tleSA9IGVkMjU1MTlfMS5lZDI1NTE5LmdldFB1YmxpY0tleShuZXcgVWludDhBcnJheShzZWNyZXRLZXkpKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyRWQyNTUxOSgoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKShleHRlbmRlZFNlY3JldEtleSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3Mgc2VjcmV0IGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSBzaWduZWQuXG4gICAgICogQHJldHVybnMge1NpZ25hdHVyZX0gVGhlIHNpZ25hdHVyZSBvYmplY3QgY29udGFpbmluZyB0aGUgc2lnbmF0dXJlIGFuZCB0aGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBzaWduKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gZWQyNTUxOV8xLmVkMjU1MTkuc2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmUsIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmVyaWZpZXMgdGhlIHNpZ25hdHVyZSBvZiBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3MgcHVibGljIGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSB2ZXJpZmllZC5cbiAgICAgKiBAcGFyYW0gc2lnbmF0dXJlIFRoZSBzaWduYXR1cmUgdG8gYmUgdmVyaWZpZWQuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgc2lnbmF0dXJlIGlzIHZhbGlkLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICB2ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleS52ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5IHBhaXIgaW4gdGhlIGZvcm1hdCAnZWQyNTUxOTpbZXh0ZW5kZWRTZWNyZXRLZXldJy5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXkgcGFpci5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBlZDI1NTE5OiR7dGhpcy5leHRlbmRlZFNlY3JldEtleX1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHB1YmxpYyBrZXkgYXNzb2NpYXRlZCB3aXRoIHRoZSBrZXkgcGFpci5cbiAgICAgKiBAcmV0dXJucyB7UHVibGljS2V5fSBUaGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleTtcbiAgICB9XG59XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gS2V5UGFpckVkMjU1MTk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairSecp256k1 = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/public_key.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"(ssr)/./node_modules/secp256k1/index.js\"));\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/index.js\");\n/**\n * This class provides key pair functionality for secp256k1 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n * nearcore expects secp256k1 public keys to be 64 bytes at all times,\n * even when string encoded the secp256k1 library returns 65 byte keys\n * (including a 1 byte header that indicates how the pubkey was encoded).\n * We'll force the secp256k1 library to always encode uncompressed\n * keys with the corresponding 0x04 header byte, then manually\n * insert/remove that byte as needed.\n */\nclass KeyPairSecp256k1 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const data = withHeader.subarray(1, withHeader.length); // remove the 0x04 header byte\n        this.publicKey = new public_key_1.PublicKey({\n            keyType: constants_1.KeyType.SECP256K1,\n            data\n        });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        // TODO: find better way to generate PK\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const publicKey = withHeader.subarray(1, withHeader.length);\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairSecp256k1((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    sign(message) {\n        // nearcore expects 65 byte signatures formed by appending the recovery id to the 64 byte signature\n        const { signature, recid } = secp256k1_1.default.ecdsaSign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature: new Uint8Array([...signature, recid]), publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `secp256k1:${this.extendedSecretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairSecp256k1 = KeyPairSecp256k1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfc2VjcDI1NmsxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG9CQUFvQixtQkFBTyxDQUFDLCtHQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLHVIQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyxpSEFBYztBQUMzQyxvQ0FBb0MsbUJBQU8sQ0FBQywwREFBVztBQUN2RCxzQ0FBc0MsbUJBQU8sQ0FBQyw4REFBYTtBQUMzRCxnQkFBZ0IsbUJBQU8sQ0FBQyw2R0FBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9zZWNwMjU2azEuanM/NDE3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpclNlY3AyNTZrMSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3Qga2V5X3BhaXJfYmFzZV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfYmFzZVwiKTtcbmNvbnN0IHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5jb25zdCBzZWNwMjU2azFfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2VjcDI1NmsxXCIpKTtcbmNvbnN0IHJhbmRvbWJ5dGVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcHJvdmlkZXMga2V5IHBhaXIgZnVuY3Rpb25hbGl0eSBmb3Igc2VjcDI1NmsxIGN1cnZlOlxuICogZ2VuZXJhdGluZyBrZXkgcGFpcnMsIGVuY29kaW5nIGtleSBwYWlycywgc2lnbmluZyBhbmQgdmVyaWZ5aW5nLlxuICogbmVhcmNvcmUgZXhwZWN0cyBzZWNwMjU2azEgcHVibGljIGtleXMgdG8gYmUgNjQgYnl0ZXMgYXQgYWxsIHRpbWVzLFxuICogZXZlbiB3aGVuIHN0cmluZyBlbmNvZGVkIHRoZSBzZWNwMjU2azEgbGlicmFyeSByZXR1cm5zIDY1IGJ5dGUga2V5c1xuICogKGluY2x1ZGluZyBhIDEgYnl0ZSBoZWFkZXIgdGhhdCBpbmRpY2F0ZXMgaG93IHRoZSBwdWJrZXkgd2FzIGVuY29kZWQpLlxuICogV2UnbGwgZm9yY2UgdGhlIHNlY3AyNTZrMSBsaWJyYXJ5IHRvIGFsd2F5cyBlbmNvZGUgdW5jb21wcmVzc2VkXG4gKiBrZXlzIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgMHgwNCBoZWFkZXIgYnl0ZSwgdGhlbiBtYW51YWxseVxuICogaW5zZXJ0L3JlbW92ZSB0aGF0IGJ5dGUgYXMgbmVlZGVkLlxuICovXG5jbGFzcyBLZXlQYWlyU2VjcDI1NmsxIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3Qgd2l0aEhlYWRlciA9IHNlY3AyNTZrMV8xLmRlZmF1bHQucHVibGljS2V5Q3JlYXRlKG5ldyBVaW50OEFycmF5KHNlY3JldEtleSksIGZhbHNlKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHdpdGhIZWFkZXIuc3ViYXJyYXkoMSwgd2l0aEhlYWRlci5sZW5ndGgpOyAvLyByZW1vdmUgdGhlIDB4MDQgaGVhZGVyIGJ5dGVcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBuZXcgcHVibGljX2tleV8xLlB1YmxpY0tleSh7XG4gICAgICAgICAgICBrZXlUeXBlOiBjb25zdGFudHNfMS5LZXlUeXBlLlNFQ1AyNTZLMSxcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIC8vIFRPRE86IGZpbmQgYmV0dGVyIHdheSB0byBnZW5lcmF0ZSBQS1xuICAgICAgICBjb25zdCBzZWNyZXRLZXkgPSAoMCwgcmFuZG9tYnl0ZXNfMS5kZWZhdWx0KShjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpO1xuICAgICAgICBjb25zdCB3aXRoSGVhZGVyID0gc2VjcDI1NmsxXzEuZGVmYXVsdC5wdWJsaWNLZXlDcmVhdGUobmV3IFVpbnQ4QXJyYXkoc2VjcmV0S2V5KSwgZmFsc2UpO1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB3aXRoSGVhZGVyLnN1YmFycmF5KDEsIHdpdGhIZWFkZXIubGVuZ3RoKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyU2VjcDI1NmsxKCgwLCB1dGlsc18xLmJhc2VFbmNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KSk7XG4gICAgfVxuICAgIHNpZ24obWVzc2FnZSkge1xuICAgICAgICAvLyBuZWFyY29yZSBleHBlY3RzIDY1IGJ5dGUgc2lnbmF0dXJlcyBmb3JtZWQgYnkgYXBwZW5kaW5nIHRoZSByZWNvdmVyeSBpZCB0byB0aGUgNjQgYnl0ZSBzaWduYXR1cmVcbiAgICAgICAgY29uc3QgeyBzaWduYXR1cmUsIHJlY2lkIH0gPSBzZWNwMjU2azFfMS5kZWZhdWx0LmVjZHNhU2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmU6IG5ldyBVaW50OEFycmF5KFsuLi5zaWduYXR1cmUsIHJlY2lkXSksIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgdmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXkudmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYHNlY3AyNTZrMToke3RoaXMuZXh0ZW5kZWRTZWNyZXRLZXl9YDtcbiAgICB9XG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyU2VjcDI1NmsxID0gS2V5UGFpclNlY3AyNTZrMTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/public_key.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/public_key.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"(ssr)/./node_modules/@noble/curves/ed25519.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"(ssr)/./node_modules/secp256k1/index.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/constants.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/index.js\");\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: return 'ed25519';\n        case constants_1.KeyType.SECP256K1: return 'secp256k1';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return constants_1.KeyType.ED25519;\n        case 'secp256k1': return constants_1.KeyType.SECP256K1;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nclass ED25519PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.SECP256K1;\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === constants_1.KeyType.ED25519) {\n            this.ed25519Key = { keyType, data };\n        }\n        else if (keyType === constants_1.KeyType.SECP256K1) {\n            this.secp256k1Key = { keyType, data };\n        }\n    }\n    /**\n     * Creates a PublicKey instance from a string or an existing PublicKey instance.\n     * @param value The string or PublicKey instance to create a PublicKey from.\n     * @returns {PublicKey} The PublicKey instance.\n     */\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    /**\n     * Creates a PublicKey instance from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {PublicKey} The PublicKey instance created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        let publicKey;\n        let keyType;\n        if (parts.length === 1) {\n            publicKey = parts[0];\n        }\n        else if (parts.length === 2) {\n            publicKey = parts[1];\n            keyType = str_to_key_type(parts[0]);\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n        const decodedPublicKey = (0, utils_1.baseDecode)(publicKey);\n        if (!keyType) {\n            keyType = decodedPublicKey.length === constants_1.KeySize.SECP256k1_PUBLIC_KEY ? constants_1.KeyType.SECP256K1 : constants_1.KeyType.ED25519;\n        }\n        const keySize = keyType === constants_1.KeyType.ED25519 ? constants_1.KeySize.ED25519_PUBLIC_KEY : constants_1.KeySize.SECP256k1_PUBLIC_KEY;\n        if (decodedPublicKey.length !== keySize) {\n            throw new Error(`Invalid public key size (${decodedPublicKey.length}), must be ${keySize}`);\n        }\n        return new PublicKey({ keyType, data: decodedPublicKey });\n    }\n    /**\n     * Returns a string representation of the public key.\n     * @returns {string} The string representation of the public key.\n     */\n    toString() {\n        const encodedKey = (0, utils_1.baseEncode)(this.data);\n        return `${key_type_to_str(this.keyType)}:${encodedKey}`;\n    }\n    /**\n     * Verifies a message signature using the public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        const keyType = this.keyType;\n        const data = this.data;\n        switch (keyType) {\n            case constants_1.KeyType.ED25519:\n                return ed25519_1.ed25519.verify(signature, message, data);\n            case constants_1.KeyType.SECP256K1:\n                return secp256k1_1.default.ecdsaVerify(signature.subarray(0, 64), message, new Uint8Array([0x04, ...data]));\n            default:\n                throw new Error(`Unknown key type: ${keyType}`);\n        }\n    }\n    get keyPair() {\n        return this.ed25519Key || this.secp256k1Key;\n    }\n    get keyType() {\n        return this.keyPair.keyType;\n    }\n    get data() {\n        return this.keyPair.data;\n    }\n}\nexports.PublicKey = PublicKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/public_key.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/in_memory_key_store.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/in_memory_key_store.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemoryKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/crypto/lib/index.js\");\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/keystore.js\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@link KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.keys[`${accountId}:${networkId}`];\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            delete this.keys[`${accountId}:${networkId}`];\n        });\n    }\n    /**\n     * Removes all {@link KeyPair} from in-memory storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys = {};\n        });\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                result.add(parts[1]);\n            });\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                if (parts[parts.length - 1] === networkId) {\n                    result.push(parts.slice(0, parts.length - 1).join(':'));\n                }\n            });\n            return result;\n        });\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5fbWVtb3J5X2tleV9zdG9yZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGlCQUFpQixtQkFBTyxDQUFDLCtHQUFpQjtBQUMxQyxtQkFBbUIsbUJBQU8sQ0FBQyxnSEFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDRCQUE0QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGVBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFVBQVUsR0FBRyxVQUFVO0FBQ2hELFNBQVM7QUFDVDtBQUNBO0FBQ0EsZUFBZSxlQUFlO0FBQzlCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFVBQVUsR0FBRyxVQUFVO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsR0FBRyxVQUFVO0FBQ3ZELFNBQVM7QUFDVDtBQUNBO0FBQ0Esb0JBQW9CLGVBQWU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5fbWVtb3J5X2tleV9zdG9yZS5qcz82Yzc2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkluTWVtb3J5S2V5U3RvcmUgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9jcnlwdG9cIik7XG5jb25zdCBrZXlzdG9yZV8xID0gcmVxdWlyZShcIi4va2V5c3RvcmVcIik7XG4vKipcbiAqIFNpbXBsZSBpbi1tZW1vcnkga2V5c3RvcmUgZm9yIG1haW5seSBmb3IgdGVzdGluZyBwdXJwb3Nlcy5cbiAqXG4gKiBAc2VlIFtodHRwczovL2RvY3MubmVhci5vcmcvZG9jcy9kZXZlbG9wL2Zyb250LWVuZC9uYWotcXVpY2stcmVmZXJlbmNlI2tleS1zdG9yZV0oaHR0cHM6Ly9kb2NzLm5lYXIub3JnL2RvY3MvZGV2ZWxvcC9mcm9udC1lbmQvbmFqLXF1aWNrLXJlZmVyZW5jZSNrZXktc3RvcmUpXG4gKiBAZXhhbXBsZVxuICogYGBganNcbiAqIGltcG9ydCB7IGNvbm5lY3QsIGtleVN0b3JlcywgdXRpbHMgfSBmcm9tICduZWFyLWFwaS1qcyc7XG4gKlxuICogY29uc3QgcHJpdmF0ZUtleSA9ICcuLi4uLi4uJztcbiAqIGNvbnN0IGtleVBhaXIgPSB1dGlscy5LZXlQYWlyLmZyb21TdHJpbmcocHJpdmF0ZUtleSk7XG4gKlxuICogY29uc3Qga2V5U3RvcmUgPSBuZXcga2V5U3RvcmVzLkluTWVtb3J5S2V5U3RvcmUoKTtcbiAqIGtleVN0b3JlLnNldEtleSgndGVzdG5ldCcsICdleGFtcGxlLWFjY291bnQudGVzdG5ldCcsIGtleVBhaXIpO1xuICpcbiAqIGNvbnN0IGNvbmZpZyA9IHtcbiAqICAga2V5U3RvcmUsIC8vIGluc3RhbmNlIG9mIEluTWVtb3J5S2V5U3RvcmVcbiAqICAgbmV0d29ya0lkOiAndGVzdG5ldCcsXG4gKiAgIG5vZGVVcmw6ICdodHRwczovL3JwYy50ZXN0bmV0Lm5lYXIub3JnJyxcbiAqICAgd2FsbGV0VXJsOiAnaHR0cHM6Ly93YWxsZXQudGVzdG5ldC5uZWFyLm9yZycsXG4gKiAgIGhlbHBlclVybDogJ2h0dHBzOi8vaGVscGVyLnRlc3RuZXQubmVhci5vcmcnLFxuICogICBleHBsb3JlclVybDogJ2h0dHBzOi8vZXhwbG9yZXIudGVzdG5ldC5uZWFyLm9yZydcbiAqIH07XG4gKlxuICogLy8gaW5zaWRlIGFuIGFzeW5jIGZ1bmN0aW9uXG4gKiBjb25zdCBuZWFyID0gYXdhaXQgY29ubmVjdChjb25maWcpXG4gKiBgYGBcbiAqL1xuY2xhc3MgSW5NZW1vcnlLZXlTdG9yZSBleHRlbmRzIGtleXN0b3JlXzEuS2V5U3RvcmUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmtleXMgPSB7fTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3RvcmVzIGEge0BsaW5rIEtleVBhaXJ9IGluIGluLW1lbW9yeSBzdG9yYWdlIGl0ZW1cbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5IHBhaXIgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIHNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdGhpcy5rZXlzW2Ake2FjY291bnRJZH06JHtuZXR3b3JrSWR9YF0gPSBrZXlQYWlyLnRvU3RyaW5nKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIGEge0BsaW5rIEtleVBhaXJ9IGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxLZXlQYWlyPn1cbiAgICAgKi9cbiAgICBnZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5rZXlzW2Ake2FjY291bnRJZH06JHtuZXR3b3JrSWR9YF07XG4gICAgICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvXzEuS2V5UGFpci5mcm9tU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSBpbi1tZW1vcnkgc3RvcmFnZVxuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqL1xuICAgIHJlbW92ZUtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMua2V5c1tgJHthY2NvdW50SWR9OiR7bmV0d29ya0lkfWBdO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhbGwge0BsaW5rIEtleVBhaXJ9IGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRoaXMua2V5cyA9IHt9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBPYmplY3Qua2V5cyh0aGlzLmtleXMpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcnRzID0ga2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmFkZChwYXJ0c1sxXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBBcnJheS5mcm9tKHJlc3VsdC52YWx1ZXMoKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBhY2NvdW50KHMpIGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKi9cbiAgICBnZXRBY2NvdW50cyhuZXR3b3JrSWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBBcnJheSgpO1xuICAgICAgICAgICAgT2JqZWN0LmtleXModGhpcy5rZXlzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJ0cyA9IGtleS5zcGxpdCgnOicpO1xuICAgICAgICAgICAgICAgIGlmIChwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXSA9PT0gbmV0d29ya0lkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHBhcnRzLnNsaWNlKDAsIHBhcnRzLmxlbmd0aCAtIDEpLmpvaW4oJzonKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuICdJbk1lbW9yeUtleVN0b3JlJztcbiAgICB9XG59XG5leHBvcnRzLkluTWVtb3J5S2V5U3RvcmUgPSBJbk1lbW9yeUtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/in_memory_key_store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = exports.MergeKeyStore = exports.KeyStore = exports.InMemoryKeyStore = void 0;\nvar in_memory_key_store_1 = __webpack_require__(/*! ./in_memory_key_store */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/in_memory_key_store.js\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", ({ enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } }));\nvar keystore_1 = __webpack_require__(/*! ./keystore */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/keystore.js\");\nObject.defineProperty(exports, \"KeyStore\", ({ enumerable: true, get: function () { return keystore_1.KeyStore; } }));\nvar merge_key_store_1 = __webpack_require__(/*! ./merge_key_store */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/merge_key_store.js\");\nObject.defineProperty(exports, \"MergeKeyStore\", ({ enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } }));\nvar multi_contract_keystore_1 = __webpack_require__(/*! ./multi_contract_keystore */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\");\nObject.defineProperty(exports, \"MultiContractKeyStore\", ({ enumerable: true, get: function () { return multi_contract_keystore_1.MultiContractKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcscUJBQXFCLEdBQUcsZ0JBQWdCLEdBQUcsd0JBQXdCO0FBQ25HLDRCQUE0QixtQkFBTyxDQUFDLHNJQUF1QjtBQUMzRCxvREFBbUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDN0ksaUJBQWlCLG1CQUFPLENBQUMsZ0hBQVk7QUFDckMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILHdCQUF3QixtQkFBTyxDQUFDLDhIQUFtQjtBQUNuRCxpREFBZ0QsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUM7QUFDbkksZ0NBQWdDLG1CQUFPLENBQUMsOElBQTJCO0FBQ25FLHlEQUF3RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanM/NTdkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlDb250cmFjdEtleVN0b3JlID0gZXhwb3J0cy5NZXJnZUtleVN0b3JlID0gZXhwb3J0cy5LZXlTdG9yZSA9IGV4cG9ydHMuSW5NZW1vcnlLZXlTdG9yZSA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfa2V5X3N0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW5NZW1vcnlLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5fbWVtb3J5X2tleV9zdG9yZV8xLkluTWVtb3J5S2V5U3RvcmU7IH0gfSk7XG52YXIga2V5c3RvcmVfMSA9IHJlcXVpcmUoXCIuL2tleXN0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleXN0b3JlXzEuS2V5U3RvcmU7IH0gfSk7XG52YXIgbWVyZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tZXJnZV9rZXlfc3RvcmVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZXJnZUtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtZXJnZV9rZXlfc3RvcmVfMS5NZXJnZUtleVN0b3JlOyB9IH0pO1xudmFyIG11bHRpX2NvbnRyYWN0X2tleXN0b3JlXzEgPSByZXF1aXJlKFwiLi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bHRpQ29udHJhY3RLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbXVsdGlfY29udHJhY3Rfa2V5c3RvcmVfMS5NdWx0aUNvbnRyYWN0S2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/keystore.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/keystore.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link \"@near-js/wallet-account\".near.Near | Near} via {@link \"@near-js/wallet-account\".near.NearConfig | NearConfig}\n * and are used by the {@link \"@near-js/signers\".in_memory_signer.InMemorySigner | InMemorySigner} to sign transactions.\n *\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIva2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0EsNEJBQTRCLGtEQUFrRCxLQUFLO0FBQ25GLHdCQUF3QiwyRUFBMkU7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1ub2RlL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL2tleXN0b3JlLmpzPzcwMTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVN0b3JlID0gdm9pZCAwO1xuLyoqXG4gKiBLZXlTdG9yZXMgYXJlIHBhc3NlZCB0byB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhciB8IE5lYXJ9IHZpYSB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhckNvbmZpZyB8IE5lYXJDb25maWd9XG4gKiBhbmQgYXJlIHVzZWQgYnkgdGhlIHtAbGluayBcIkBuZWFyLWpzL3NpZ25lcnNcIi5pbl9tZW1vcnlfc2lnbmVyLkluTWVtb3J5U2lnbmVyIHwgSW5NZW1vcnlTaWduZXJ9IHRvIHNpZ24gdHJhbnNhY3Rpb25zLlxuICpcbiAqL1xuY2xhc3MgS2V5U3RvcmUge1xufVxuZXhwb3J0cy5LZXlTdG9yZSA9IEtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/keystore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/merge_key_store.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/merge_key_store.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MergeKeyStore = void 0;\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/keystore.js\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options KeyStore options\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPair} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                const keyPair = yield keyStore.getKey(networkId, accountId);\n                if (keyPair) {\n                    return keyPair;\n                }\n            }\n            return null;\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.removeKey(networkId, accountId);\n            }\n        });\n    }\n    /**\n     * Removes all items from each key store\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.clear();\n            }\n        });\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const network of yield keyStore.getNetworks()) {\n                    result.add(network);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const account of yield keyStore.getAccounts(networkId)) {\n                    result.add(account);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbWVyZ2Vfa2V5X3N0b3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsbUJBQW1CLG1CQUFPLENBQUMsZ0hBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVCQUF1QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMEJBQTBCO0FBQzFEO0FBQ0E7QUFDQSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1ub2RlL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL21lcmdlX2tleV9zdG9yZS5qcz8yNDM1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSB2b2lkIDA7XG5jb25zdCBrZXlzdG9yZV8xID0gcmVxdWlyZShcIi4va2V5c3RvcmVcIik7XG5jbGFzcyBNZXJnZUtleVN0b3JlIGV4dGVuZHMga2V5c3RvcmVfMS5LZXlTdG9yZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGtleVN0b3JlcyByZWFkIGNhbGxzIGFyZSBhdHRlbXB0ZWQgZnJvbSBzdGFydCB0byBlbmQgb2YgYXJyYXlcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBLZXlTdG9yZSBvcHRpb25zXG4gICAgICogQHBhcmFtIG9wdGlvbnMud3JpdGVLZXlTdG9yZUluZGV4IHRoZSBrZXlzdG9yZSBpbmRleCB0aGF0IHdpbGwgcmVjZWl2ZSBhbGwgd3JpdGUgY2FsbHNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihrZXlTdG9yZXMsIG9wdGlvbnMgPSB7IHdyaXRlS2V5U3RvcmVJbmRleDogMCB9KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMua2V5U3RvcmVzID0ga2V5U3RvcmVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdG9yZSBhIHtAbGluayBLZXlQYWlyfSB0byB0aGUgZmlyc3QgaW5kZXggb2YgYSBrZXkgc3RvcmUgYXJyYXlcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5IHBhaXIgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIHNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgdGhpcy5rZXlTdG9yZXNbdGhpcy5vcHRpb25zLndyaXRlS2V5U3RvcmVJbmRleF0uc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSB0aGUgYXJyYXkgb2Yga2V5IHN0b3Jlc1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEtleVBhaXI+fVxuICAgICAqL1xuICAgIGdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXlTdG9yZSBvZiB0aGlzLmtleVN0b3Jlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCBrZXlTdG9yZS5nZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpO1xuICAgICAgICAgICAgICAgIGlmIChrZXlQYWlyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBrZXlQYWlyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIHtAbGluayBLZXlQYWlyfSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICovXG4gICAgcmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQga2V5U3RvcmUucmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYWxsIGl0ZW1zIGZyb20gZWFjaCBrZXkgc3RvcmVcbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5U3RvcmUgb2YgdGhpcy5rZXlTdG9yZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBrZXlTdG9yZS5jbGVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gdGhlIGFycmF5IG9mIGtleSBzdG9yZXNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBuZXR3b3JrIG9mIHlpZWxkIGtleVN0b3JlLmdldE5ldHdvcmtzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChuZXR3b3JrKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYWNjb3VudChzKSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICovXG4gICAgZ2V0QWNjb3VudHMobmV0d29ya0lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhY2NvdW50IG9mIHlpZWxkIGtleVN0b3JlLmdldEFjY291bnRzKG5ldHdvcmtJZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChhY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBNZXJnZUtleVN0b3JlKCR7dGhpcy5rZXlTdG9yZXMuam9pbignLCAnKX0pYDtcbiAgICB9XG59XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSBNZXJnZUtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/merge_key_store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/multi_contract_keystore.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/multi_contract_keystore.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = void 0;\n/**\n * KeyStores are passed to {@link near!Near} via {@link near!NearConfig}\n * and are used by the {@link signer!InMemorySigner} to sign transactions.\n *\n * @see {@link connect}\n */\nclass MultiContractKeyStore {\n}\nexports.MultiContractKeyStore = MultiContractKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbXVsdGlfY29udHJhY3Rfa2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCO0FBQ0EsNEJBQTRCLGlCQUFpQixLQUFLO0FBQ2xELHdCQUF3Qiw2QkFBNkI7QUFDckQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZS5qcz8xMDcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSB2b2lkIDA7XG4vKipcbiAqIEtleVN0b3JlcyBhcmUgcGFzc2VkIHRvIHtAbGluayBuZWFyIU5lYXJ9IHZpYSB7QGxpbmsgbmVhciFOZWFyQ29uZmlnfVxuICogYW5kIGFyZSB1c2VkIGJ5IHRoZSB7QGxpbmsgc2lnbmVyIUluTWVtb3J5U2lnbmVyfSB0byBzaWduIHRyYW5zYWN0aW9ucy5cbiAqXG4gKiBAc2VlIHtAbGluayBjb25uZWN0fVxuICovXG5jbGFzcyBNdWx0aUNvbnRyYWN0S2V5U3RvcmUge1xufVxuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSBNdWx0aUNvbnRyYWN0S2V5U3RvcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/assignable.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/assignable.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Assignable = void 0;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9hc3NpZ25hYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2Fzc2lnbmFibGUuanM/M2I3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXNzaWduYWJsZSA9IHZvaWQgMDtcbmNsYXNzIEFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKHByb3BlcnRpZXMpIHtcbiAgICAgICAgT2JqZWN0LmtleXMocHJvcGVydGllcykubWFwKChrZXkpID0+IHtcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IHByb3BlcnRpZXNba2V5XTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Bc3NpZ25hYmxlID0gQXNzaWduYWJsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/assignable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/errors.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/errors.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcsMkJBQTJCO0FBQ25HO0FBQ0E7QUFDQSxzRkFBc0YsMENBQTBDO0FBQ2hJO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLDBCQUEwQixTQUFTLE9BQU8sUUFBUSx1QkFBdUIseUJBQXlCO0FBQ2xHO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanM/ZjAzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JDb250ZXh0ID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IGV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFBvc2l0aW9uYWxBcmdzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDb250cmFjdCBtZXRob2QgY2FsbHMgZXhwZWN0IG5hbWVkIGFyZ3VtZW50cyB3cmFwcGVkIGluIG9iamVjdCwgZS5nLiB7IGFyZ05hbWUxOiBhcmdWYWx1ZTEsIGFyZ05hbWUyOiBhcmdWYWx1ZTIgfScpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IFBvc2l0aW9uYWxBcmdzRXJyb3I7XG5jbGFzcyBBcmd1bWVudFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdOYW1lLCBhcmdUeXBlLCBhcmdWYWx1ZSkge1xuICAgICAgICBzdXBlcihgRXhwZWN0ZWQgJHthcmdUeXBlfSBmb3IgJyR7YXJnTmFtZX0nIGFyZ3VtZW50LCBidXQgZ290ICcke0pTT04uc3RyaW5naWZ5KGFyZ1ZhbHVlKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IEFyZ3VtZW50VHlwZUVycm9yO1xuY2xhc3MgVHlwZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB0eXBlLCBjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlIHx8ICdVbnR5cGVkRXJyb3InO1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgIH1cbn1cbmV4cG9ydHMuVHlwZWRFcnJvciA9IFR5cGVkRXJyb3I7XG5jbGFzcyBFcnJvckNvbnRleHQge1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zYWN0aW9uSGFzaCkge1xuICAgICAgICB0aGlzLnRyYW5zYWN0aW9uSGFzaCA9IHRyYW5zYWN0aW9uSGFzaDtcbiAgICB9XG59XG5leHBvcnRzLkVycm9yQ29udGV4dCA9IEVycm9yQ29udGV4dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/index.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./assignable */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/assignable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsZ0hBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLHdHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxrSEFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcz8xNDgzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXNzaWduYWJsZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = void 0;\nvar light_client_1 = __webpack_require__(/*! ./light_client */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/light_client.js\");\nObject.defineProperty(exports, \"IdType\", ({ enumerable: true, get: function () { return light_client_1.IdType; } }));\nvar response_1 = __webpack_require__(/*! ./response */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/response.js\");\nObject.defineProperty(exports, \"ExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.ExecutionStatusBasic; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.FinalExecutionStatusBasic; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEIsR0FBRyxjQUFjO0FBQ2pGLHFCQUFxQixtQkFBTyxDQUFDLDZIQUFnQjtBQUM3QywwQ0FBeUMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDbEgsaUJBQWlCLG1CQUFPLENBQUMscUhBQVk7QUFDckMsd0RBQXVELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzFJLDZEQUE0RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcz80OWRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuSWRUeXBlID0gdm9pZCAwO1xudmFyIGxpZ2h0X2NsaWVudF8xID0gcmVxdWlyZShcIi4vbGlnaHRfY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsaWdodF9jbGllbnRfMS5JZFR5cGU7IH0gfSk7XG52YXIgcmVzcG9uc2VfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXhlY3V0aW9uU3RhdHVzQmFzaWNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlXzEuRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZV8xLkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/light_client.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/light_client.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdType = void 0;\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9saWdodF9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QixjQUFjLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1ub2RlL25vZGVfbW9kdWxlcy9AbmVhci1qcy90eXBlcy9saWIvcHJvdmlkZXIvbGlnaHRfY2xpZW50LmpzP2RiMmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIE5FQVIgUlBDIEFQSSByZXF1ZXN0IHR5cGVzIGFuZCByZXNwb25zZXNcbiAqIEBtb2R1bGVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JZFR5cGUgPSB2b2lkIDA7XG52YXIgSWRUeXBlO1xuKGZ1bmN0aW9uIChJZFR5cGUpIHtcbiAgICBJZFR5cGVbXCJUcmFuc2FjdGlvblwiXSA9IFwidHJhbnNhY3Rpb25cIjtcbiAgICBJZFR5cGVbXCJSZWNlaXB0XCJdID0gXCJyZWNlaXB0XCI7XG59KShJZFR5cGUgPSBleHBvcnRzLklkVHlwZSB8fCAoZXhwb3J0cy5JZFR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/light_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/response.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/response.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBELDRCQUE0QixLQUFLO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9FQUFvRSxpQ0FBaUMsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcz81YzE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHZvaWQgMDtcbnZhciBFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRXhlY3V0aW9uU3RhdHVzQmFzaWMpIHtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlVua25vd25cIl0gPSBcIlVua25vd25cIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlBlbmRpbmdcIl0gPSBcIlBlbmRpbmdcIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIkZhaWx1cmVcIl0gPSBcIkZhaWx1cmVcIjtcbn0pKEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHt9KSk7XG52YXIgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYykge1xuICAgIEZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJOb3RTdGFydGVkXCJdID0gXCJOb3RTdGFydGVkXCI7XG4gICAgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlN0YXJ0ZWRcIl0gPSBcIlN0YXJ0ZWRcIjtcbiAgICBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljW1wiRmFpbHVyZVwiXSA9IFwiRmFpbHVyZVwiO1xufSkoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/provider/response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/constants.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/constants.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = BigInt('30000000000000');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanM/MzM2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9GVU5DVElPTl9DQUxMX0dBUyA9IHZvaWQgMDtcbi8vIERlZmF1bHQgYW1vdW50IG9mIGdhcyB0byBiZSBzZW50IHdpdGggdGhlIGZ1bmN0aW9uIGNhbGxzLiBVc2VkIHRvIHBheSBmb3IgdGhlIGZlZXNcbi8vIGluY3VycmVkIHdoaWxlIHJ1bm5pbmcgdGhlIGNvbnRyYWN0IGV4ZWN1dGlvbi4gVGhlIHVudXNlZCBhbW91bnQgd2lsbCBiZSByZWZ1bmRlZCBiYWNrIHRvXG4vLyB0aGUgb3JpZ2luYXRvci5cbi8vIER1ZSB0byBwcm90b2NvbCBjaGFuZ2VzIHRoYXQgY2hhcmdlIHVwZnJvbnQgZm9yIHRoZSBtYXhpbXVtIHBvc3NpYmxlIGdhcyBwcmljZSBpbmZsYXRpb24gZHVlIHRvXG4vLyBmdWxsIGJsb2NrcywgdGhlIHByaWNlIG9mIG1heF9wcmVwYWlkX2dhcyBpcyBkZWNyZWFzZWQgdG8gYDMwMCAqIDEwKioxMmAuXG4vLyBGb3IgZGlzY3Vzc2lvbiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25lYXJwcm90b2NvbC9ORVBzL2lzc3Vlcy82N1xuZXhwb3J0cy5ERUZBVUxUX0ZVTkNUSU9OX0NBTExfR0FTID0gQmlnSW50KCczMDAwMDAwMDAwMDAwMCcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/errors.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/errors.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logWarning = void 0;\nconst logger_1 = __webpack_require__(/*! ../logger */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/index.js\");\n/** @deprecated */\nfunction logWarning(...args) {\n    const [message, ...optionalParams] = args;\n    logger_1.Logger.warn(message, ...optionalParams);\n}\nexports.logWarning = logWarning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixpQkFBaUIsbUJBQU8sQ0FBQywrR0FBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2Vycm9ycy9lcnJvcnMuanM/MTFlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9nV2FybmluZyA9IHZvaWQgMDtcbmNvbnN0IGxvZ2dlcl8xID0gcmVxdWlyZShcIi4uL2xvZ2dlclwiKTtcbi8qKiBAZGVwcmVjYXRlZCAqL1xuZnVuY3Rpb24gbG9nV2FybmluZyguLi5hcmdzKSB7XG4gICAgY29uc3QgW21lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zXSA9IGFyZ3M7XG4gICAgbG9nZ2VyXzEuTG9nZ2VyLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xufVxuZXhwb3J0cy5sb2dXYXJuaW5nID0gbG9nV2FybmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseRpcError = exports.parseResultError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.ServerError = exports.logWarning = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/errors.js\");\nObject.defineProperty(exports, \"logWarning\", ({ enumerable: true, get: function () { return errors_1.logWarning; } }));\nvar rpc_errors_1 = __webpack_require__(/*! ./rpc_errors */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/rpc_errors.js\");\nObject.defineProperty(exports, \"ServerError\", ({ enumerable: true, get: function () { return rpc_errors_1.ServerError; } }));\nObject.defineProperty(exports, \"formatError\", ({ enumerable: true, get: function () { return rpc_errors_1.formatError; } }));\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", ({ enumerable: true, get: function () { return rpc_errors_1.getErrorTypeFromErrorMessage; } }));\nObject.defineProperty(exports, \"parseResultError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseResultError; } }));\nObject.defineProperty(exports, \"parseRpcError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseRpcError; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsd0JBQXdCLEdBQUcsb0NBQW9DLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsa0JBQWtCO0FBQ3hKLGVBQWUsbUJBQU8sQ0FBQywrR0FBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbUJBQW1CLG1CQUFPLENBQUMsdUhBQWM7QUFDekMsK0NBQThDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzFILCtDQUE4QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMxSCxnRUFBK0QsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDNUosb0RBQW1ELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3BJLGlEQUFnRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanM/OTY1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VScGNFcnJvciA9IGV4cG9ydHMucGFyc2VSZXN1bHRFcnJvciA9IGV4cG9ydHMuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZSA9IGV4cG9ydHMuZm9ybWF0RXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gZXhwb3J0cy5sb2dXYXJuaW5nID0gdm9pZCAwO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibG9nV2FybmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEubG9nV2FybmluZzsgfSB9KTtcbnZhciBycGNfZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9ycGNfZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5TZXJ2ZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZm9ybWF0RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmVzdWx0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5wYXJzZVJlc3VsdEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VScGNFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcnBjX2Vycm9yc18xLnBhcnNlUnBjRXJyb3I7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/rpc_errors.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/rpc_errors.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/types/lib/index.js\");\nconst mustache_1 = __importDefault(__webpack_require__(/*! mustache */ \"(ssr)/./node_modules/mustache/mustache.js\"));\nconst format_1 = __webpack_require__(/*! ../format */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/format.js\");\nconst error_messages_json_1 = __importDefault(__webpack_require__(/*! ./error_messages.json */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/error_messages.json\"));\nconst rpc_error_schema_json_1 = __importDefault(__webpack_require__(/*! ./rpc_error_schema.json */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json\"));\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => (0, format_1.formatNearAmount)(render(n))\n};\nclass ServerError extends types_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], Object.assign(Object.assign({}, errorData), mustacheHelpers));\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage, errorType) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /wasm execution failed with error: MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return errorType;\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/rpc_errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/format.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/format.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baseDecode = exports.baseEncode = exports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bs58_1 = __importDefault(__webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = BigInt(10) ** BigInt(exports.NEAR_NOMINATION_EXP);\n// Pre-calculate offsets used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = BigInt(10);\nfor (let i = 0, offset = BigInt(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset * BN10) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    let balanceBN = BigInt(balance);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN += ROUNDING_OFFSETS[roundingExp];\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || \"0\";\n    const fractionStr = balance\n        .substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, \"0\")\n        .substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split(\".\");\n    const wholePart = split[0];\n    const fracPart = split[1] || \"\";\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, \"0\"));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, \"\").trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, \"\");\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, \"\");\n    if (value === \"\") {\n        return \"0\";\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, \"$1,$2\");\n    }\n    return value;\n}\n/**\n * Encodes a Uint8Array or string into base58\n * @param value Uint8Array or string representing a borsh encoded object\n * @returns string base58 encoding of the value\n */\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        const bytes = [];\n        for (let c = 0; c < value.length; c++) {\n            bytes.push(value.charCodeAt(c));\n        }\n        value = new Uint8Array(bytes);\n    }\n    return bs58_1.default.encode(value);\n}\nexports.baseEncode = baseEncode;\n/**\n * Decodes a base58 string into a Uint8Array\n * @param value base58 encoded string\n * @returns Uint8Array representing the decoded value\n */\nfunction baseDecode(value) {\n    return new Uint8Array(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/index.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/constants.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./format */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/format.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logging */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logging.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./validators */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/validators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsOEdBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLDhHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyx3R0FBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsMEdBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLDRHQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyxnSEFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsOEdBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHNHQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2luZGV4LmpzPzViYTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZm9ybWF0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2dnaW5nXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmFsaWRhdG9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/console.logger.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/console.logger.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    constructor(logLevels) {\n        this.logLevels = logLevels;\n        this.isLevelEnabled = (level) => {\n            return this.logLevels.includes(level);\n        };\n    }\n    print(level, message, ...optionalParams) {\n        switch (level) {\n            case 'error':\n            case 'fatal':\n                return console.error(message, ...optionalParams);\n            case 'warn':\n                return console.warn(message, ...optionalParams);\n            case 'log':\n                return console.log(message, ...optionalParams);\n            case 'debug':\n            case 'verbose':\n                return console.debug(message, ...optionalParams);\n        }\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose'))\n            return;\n        this.print('verbose', message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug'))\n            return;\n        this.print('debug', message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log'))\n            return;\n        this.print('log', message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn'))\n            return;\n        this.print('warn', message, ...optionalParams);\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error'))\n            return;\n        this.print('error', message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        if (!this.isLevelEnabled('fatal'))\n            return;\n        this.print('fatal', message, ...optionalParams);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvY29uc29sZS5sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9jb25zb2xlLmxvZ2dlci5qcz8wYjcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gdm9pZCAwO1xuY2xhc3MgQ29uc29sZUxvZ2dlciB7XG4gICAgY29uc3RydWN0b3IobG9nTGV2ZWxzKSB7XG4gICAgICAgIHRoaXMubG9nTGV2ZWxzID0gbG9nTGV2ZWxzO1xuICAgICAgICB0aGlzLmlzTGV2ZWxFbmFibGVkID0gKGxldmVsKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5sb2dMZXZlbHMuaW5jbHVkZXMobGV2ZWwpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBwcmludChsZXZlbCwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgc3dpdGNoIChsZXZlbCkge1xuICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgY2FzZSAnZmF0YWwnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgICAgIGNhc2UgJ3dhcm4nOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnbG9nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnZGVidWcnOlxuICAgICAgICAgICAgY2FzZSAndmVyYm9zZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd2ZXJib3NlJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3ZlcmJvc2UnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGRlYnVnKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZGVidWcnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZGVidWcnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2xvZycpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByaW50KCdsb2cnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHdhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd3YXJuJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3dhcm4nLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZXJyb3InKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZXJyb3InLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZmF0YWwnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZmF0YWwnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gQ29uc29sZUxvZ2dlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/console.logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nvar logger_1 = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/logger.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQywrR0FBVTtBQUNqQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1ub2RlL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2luZGV4LmpzP2NiZDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ2dlciA9IHZvaWQgMDtcbnZhciBsb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2xvZ2dlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ2dlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyXzEuTG9nZ2VyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/logger.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/logger.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nconst console_logger_1 = __webpack_require__(/*! ./console.logger */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/console.logger.js\");\nconst DEFAULT_LOG_LEVELS = [\n    'verbose',\n    'debug',\n    'log',\n    'warn',\n    'error',\n    'fatal',\n];\nconst DEFAULT_LOGGER = typeof process === 'object' && process.env.NEAR_NO_LOGS\n    ? undefined\n    : new console_logger_1.ConsoleLogger(DEFAULT_LOG_LEVELS);\n/**\n * Used to log the library messages\n */\nclass Logger {\n    static error(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.error(message, ...optionalParams);\n    }\n    /**\n     * Write a 'log' level log.\n     */\n    static log(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.log(message, ...optionalParams);\n    }\n    /**\n     * Write a 'warn' level log.\n     */\n    static warn(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.warn(message, ...optionalParams);\n    }\n    /**\n     * Write a 'debug' level log.\n     */\n    static debug(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.debug) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    /**\n     * Write a 'verbose' level log.\n     */\n    static verbose(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.verbose) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.fatal) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n}\nexports.Logger = Logger;\n_a = Logger;\nLogger.instanceRef = DEFAULT_LOGGER;\nLogger.overrideLogger = (logger) => {\n    _a.instanceRef = logger;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLHlCQUF5QixtQkFBTyxDQUFDLCtIQUFrQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9sb2dnZXIuanM/NWU2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfYTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTG9nZ2VyID0gdm9pZCAwO1xuY29uc3QgY29uc29sZV9sb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2NvbnNvbGUubG9nZ2VyXCIpO1xuY29uc3QgREVGQVVMVF9MT0dfTEVWRUxTID0gW1xuICAgICd2ZXJib3NlJyxcbiAgICAnZGVidWcnLFxuICAgICdsb2cnLFxuICAgICd3YXJuJyxcbiAgICAnZXJyb3InLFxuICAgICdmYXRhbCcsXG5dO1xuY29uc3QgREVGQVVMVF9MT0dHRVIgPSB0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcgJiYgcHJvY2Vzcy5lbnYuTkVBUl9OT19MT0dTXG4gICAgPyB1bmRlZmluZWRcbiAgICA6IG5ldyBjb25zb2xlX2xvZ2dlcl8xLkNvbnNvbGVMb2dnZXIoREVGQVVMVF9MT0dfTEVWRUxTKTtcbi8qKlxuICogVXNlZCB0byBsb2cgdGhlIGxpYnJhcnkgbWVzc2FnZXNcbiAqL1xuY2xhc3MgTG9nZ2VyIHtcbiAgICBzdGF0aWMgZXJyb3IobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iO1xuICAgICAgICAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZXJyb3IobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICdsb2cnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgbG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYjtcbiAgICAgICAgKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ3dhcm4nIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgd2FybihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2I7XG4gICAgICAgIChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi53YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSAnZGVidWcnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iLCBfYztcbiAgICAgICAgKF9jID0gKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmRlYnVnKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbChfYiwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICd2ZXJib3NlJyBsZXZlbCBsb2cuXG4gICAgICovXG4gICAgc3RhdGljIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iLCBfYztcbiAgICAgICAgKF9jID0gKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnZlcmJvc2UpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHN0YXRpYyBmYXRhbChtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZmF0YWwpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Mb2dnZXIgPSBMb2dnZXI7XG5fYSA9IExvZ2dlcjtcbkxvZ2dlci5pbnN0YW5jZVJlZiA9IERFRkFVTFRfTE9HR0VSO1xuTG9nZ2VyLm92ZXJyaWRlTG9nZ2VyID0gKGxvZ2dlcikgPT4ge1xuICAgIF9hLmluc3RhbmNlUmVmID0gbG9nZ2VyO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logging.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logging.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.printTxOutcomeLogs = exports.printTxOutcomeLogsAndFailures = void 0;\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/index.js\");\nconst logger_1 = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logger/index.js\");\n/**\n * Parse and print details from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.outcome the query execution response\n */\nfunction printTxOutcomeLogsAndFailures({ contractId, outcome, }) {\n    const flatLogs = [outcome.transaction_outcome, ...outcome.receipts_outcome]\n        .reduce((acc, it) => {\n        const isFailure = typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object';\n        if (it.outcome.logs.length || isFailure) {\n            return acc.concat({\n                receiptIds: it.outcome.receipt_ids,\n                logs: it.outcome.logs,\n                failure: typeof it.outcome.status === 'object' && it.outcome.status.Failure !== undefined\n                    ? (0, errors_1.parseRpcError)(it.outcome.status.Failure)\n                    : null\n            });\n        }\n        else {\n            return acc;\n        }\n    }, []);\n    for (const result of flatLogs) {\n        logger_1.Logger.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n        printTxOutcomeLogs({\n            contractId,\n            logs: result.logs,\n            prefix: '\\t',\n        });\n        if (result.failure) {\n            logger_1.Logger.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n        }\n    }\n}\nexports.printTxOutcomeLogsAndFailures = printTxOutcomeLogsAndFailures;\n/**\n * Format and print log output from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.logs log output from a query execution response\n * @param params.prefix string to append to the beginning of each log\n */\nfunction printTxOutcomeLogs({ contractId, logs, prefix = '', }) {\n    for (const log of logs) {\n        logger_1.Logger.log(`${prefix}Log [${contractId}]: ${log}`);\n    }\n}\nexports.printTxOutcomeLogs = printTxOutcomeLogs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHFDQUFxQztBQUNsRSxpQkFBaUIsbUJBQU8sQ0FBQyw4R0FBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyw4R0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsc0JBQXNCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0NBQXNDLHdDQUF3QyxJQUFJLDZCQUE2QjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLCtDQUErQyxXQUFXLEtBQUssZUFBZTtBQUM5RTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlEO0FBQ0EsK0JBQStCLE9BQU8sT0FBTyxXQUFXLEtBQUssSUFBSTtBQUNqRTtBQUNBO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dpbmcuanM/NmEwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzID0gZXhwb3J0cy5wcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcyA9IHZvaWQgMDtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9sb2dnZXJcIik7XG4vKipcbiAqIFBhcnNlIGFuZCBwcmludCBkZXRhaWxzIGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5vdXRjb21lIHRoZSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gcHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMoeyBjb250cmFjdElkLCBvdXRjb21lLCB9KSB7XG4gICAgY29uc3QgZmxhdExvZ3MgPSBbb3V0Y29tZS50cmFuc2FjdGlvbl9vdXRjb21lLCAuLi5vdXRjb21lLnJlY2VpcHRzX291dGNvbWVdXG4gICAgICAgIC5yZWR1Y2UoKGFjYywgaXQpID0+IHtcbiAgICAgICAgY29uc3QgaXNGYWlsdXJlID0gdHlwZW9mIGl0Lm91dGNvbWUuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSA9PT0gJ29iamVjdCc7XG4gICAgICAgIGlmIChpdC5vdXRjb21lLmxvZ3MubGVuZ3RoIHx8IGlzRmFpbHVyZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFjYy5jb25jYXQoe1xuICAgICAgICAgICAgICAgIHJlY2VpcHRJZHM6IGl0Lm91dGNvbWUucmVjZWlwdF9pZHMsXG4gICAgICAgICAgICAgICAgbG9nczogaXQub3V0Y29tZS5sb2dzLFxuICAgICAgICAgICAgICAgIGZhaWx1cmU6IHR5cGVvZiBpdC5vdXRjb21lLnN0YXR1cyA9PT0gJ29iamVjdCcgJiYgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIGVycm9yc18xLnBhcnNlUnBjRXJyb3IpKGl0Lm91dGNvbWUuc3RhdHVzLkZhaWx1cmUpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgfSwgW10pO1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIGZsYXRMb2dzKSB7XG4gICAgICAgIGxvZ2dlcl8xLkxvZ2dlci5sb2coYFJlY2VpcHQke3Jlc3VsdC5yZWNlaXB0SWRzLmxlbmd0aCA+IDEgPyAncycgOiAnJ306ICR7cmVzdWx0LnJlY2VpcHRJZHMuam9pbignLCAnKX1gKTtcbiAgICAgICAgcHJpbnRUeE91dGNvbWVMb2dzKHtcbiAgICAgICAgICAgIGNvbnRyYWN0SWQsXG4gICAgICAgICAgICBsb2dzOiByZXN1bHQubG9ncyxcbiAgICAgICAgICAgIHByZWZpeDogJ1xcdCcsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocmVzdWx0LmZhaWx1cmUpIHtcbiAgICAgICAgICAgIGxvZ2dlcl8xLkxvZ2dlci53YXJuKGBcXHRGYWlsdXJlIFske2NvbnRyYWN0SWR9XTogJHtyZXN1bHQuZmFpbHVyZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMgPSBwcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcztcbi8qKlxuICogRm9ybWF0IGFuZCBwcmludCBsb2cgb3V0cHV0IGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5sb2dzIGxvZyBvdXRwdXQgZnJvbSBhIHF1ZXJ5IGV4ZWN1dGlvbiByZXNwb25zZVxuICogQHBhcmFtIHBhcmFtcy5wcmVmaXggc3RyaW5nIHRvIGFwcGVuZCB0byB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggbG9nXG4gKi9cbmZ1bmN0aW9uIHByaW50VHhPdXRjb21lTG9ncyh7IGNvbnRyYWN0SWQsIGxvZ3MsIHByZWZpeCA9ICcnLCB9KSB7XG4gICAgZm9yIChjb25zdCBsb2cgb2YgbG9ncykge1xuICAgICAgICBsb2dnZXJfMS5Mb2dnZXIubG9nKGAke3ByZWZpeH1Mb2cgWyR7Y29udHJhY3RJZH1dOiAke2xvZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLnByaW50VHhPdXRjb21lTG9ncyA9IHByaW50VHhPdXRjb21lTG9ncztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/logging.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/provider.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/provider.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTransactionLastResult = void 0;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1ub2RlL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvcHJvdmlkZXIuanM/MjQyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0ID0gdm9pZCAwO1xuLyoqIEBoaWRkZW4gKi9cbmZ1bmN0aW9uIGdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdCh0eFJlc3VsdCkge1xuICAgIGlmICh0eXBlb2YgdHhSZXN1bHQuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdHhSZXN1bHQuc3RhdHVzLlN1Y2Nlc3NWYWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBCdWZmZXIuZnJvbSh0eFJlc3VsdC5zdGF0dXMuU3VjY2Vzc1ZhbHVlLCAnYmFzZTY0JykudG9TdHJpbmcoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0cy5nZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQgPSBnZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/utils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/utils.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sortBigIntAsc = void 0;\nfunction sortBigIntAsc(a, b) {\n    return (a < b ? -1 : a > b ? 1 : 0);\n}\nexports.sortBigIntAsc = sortBigIntAsc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3V0aWxzLmpzPzdkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNvcnRCaWdJbnRBc2MgPSB2b2lkIDA7XG5mdW5jdGlvbiBzb3J0QmlnSW50QXNjKGEsIGIpIHtcbiAgICByZXR1cm4gKGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwKTtcbn1cbmV4cG9ydHMuc29ydEJpZ0ludEFzYyA9IHNvcnRCaWdJbnRBc2M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/validators.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/validators.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"(ssr)/./node_modules/depd/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/utils.js\");\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @param validators: current or next epoch validators.\n * @param maxNumberOfSeats: maximum number of seats in the network.\n * @param minimumStakeRatio: minimum stake ratio\n * @param protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = (0, depd_1.default)('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // hardcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const num = BigInt(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (stakesSum < num) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = BigInt(1), right = stakesSum + BigInt(1);\n    while (left !== right - BigInt(1)) {\n        const mid = (left + right) / BigInt(2);\n        let found = false;\n        let currentSum = BigInt(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum + (stakes[i] / mid);\n            if (currentSum >= num) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum * BigInt(minimumStakeRatio[0]) / BigInt(minimumStakeRatio[1]);\n    }\n    else {\n        return stakes[0] + BigInt(1);\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @param currentValidators: list of current validators.\n * @param nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLW5vZGUvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcscUJBQXFCO0FBQ25ELCtCQUErQixtQkFBTyxDQUFDLGdEQUFNO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLHNHQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBKQUEwSjtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFtRDtBQUM1RTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtbm9kZS9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3ZhbGlkYXRvcnMuanM/MzJiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IGV4cG9ydHMuZmluZFNlYXRQcmljZSA9IHZvaWQgMDtcbmNvbnN0IGRlcGRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVwZFwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG4vKiogRmluZHMgc2VhdCBwcmljZSBnaXZlbiB2YWxpZGF0b3JzIHN0YWtlcyBhbmQgbnVtYmVyIG9mIHNlYXRzLlxuICogIENhbGN1bGF0aW9uIGZvbGxvdyB0aGUgc3BlYzogaHR0cHM6Ly9ub21pY29uLmlvL0Vjb25vbWljcy9SRUFETUUuaHRtbCN2YWxpZGF0b3Itc2VsZWN0aW9uXG4gKiBAcGFyYW0gdmFsaWRhdG9yczogY3VycmVudCBvciBuZXh0IGVwb2NoIHZhbGlkYXRvcnMuXG4gKiBAcGFyYW0gbWF4TnVtYmVyT2ZTZWF0czogbWF4aW11bSBudW1iZXIgb2Ygc2VhdHMgaW4gdGhlIG5ldHdvcmsuXG4gKiBAcGFyYW0gbWluaW11bVN0YWtlUmF0aW86IG1pbmltdW0gc3Rha2UgcmF0aW9cbiAqIEBwYXJhbSBwcm90b2NvbFZlcnNpb246IHZlcnNpb24gb2YgdGhlIHByb3RvY29sIGZyb20gZ2VuZXNpcyBjb25maWdcbiAqL1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbywgcHJvdG9jb2xWZXJzaW9uKSB7XG4gICAgaWYgKHByb3RvY29sVmVyc2lvbiAmJiBwcm90b2NvbFZlcnNpb24gPCA0OSkge1xuICAgICAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cyk7XG4gICAgfVxuICAgIGlmICghbWluaW11bVN0YWtlUmF0aW8pIHtcbiAgICAgICAgY29uc3QgZGVwcmVjYXRlID0gKDAsIGRlcGRfMS5kZWZhdWx0KSgnZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzKScpO1xuICAgICAgICBkZXByZWNhdGUoJ2B1c2UgYGZpbmRTZWF0UHJpY2UodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cywgbWluaW11bVN0YWtlUmF0aW8pYCBpbnN0ZWFkJyk7XG4gICAgICAgIG1pbmltdW1TdGFrZVJhdGlvID0gWzEsIDYyNTBdOyAvLyBoYXJkY29kZWQgbWluaW11bVN0YWtlUmF0aW9uIGZyb20gMTIvNy8yMVxuICAgIH1cbiAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbyk7XG59XG5leHBvcnRzLmZpbmRTZWF0UHJpY2UgPSBmaW5kU2VhdFByaWNlO1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbnVtU2VhdHMpIHtcbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IG51bSA9IEJpZ0ludChudW1TZWF0cyk7XG4gICAgY29uc3Qgc3Rha2VzU3VtID0gc3Rha2VzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIGlmIChzdGFrZXNTdW0gPCBudW0pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdGFrZXMgYXJlIGJlbG93IHNlYXRzJyk7XG4gICAgfVxuICAgIC8vIGFzc2VydCBzdGFrZXNTdW0gPj0gbnVtU2VhdHNcbiAgICBsZXQgbGVmdCA9IEJpZ0ludCgxKSwgcmlnaHQgPSBzdGFrZXNTdW0gKyBCaWdJbnQoMSk7XG4gICAgd2hpbGUgKGxlZnQgIT09IHJpZ2h0IC0gQmlnSW50KDEpKSB7XG4gICAgICAgIGNvbnN0IG1pZCA9IChsZWZ0ICsgcmlnaHQpIC8gQmlnSW50KDIpO1xuICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGN1cnJlbnRTdW0gPSBCaWdJbnQoMCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Rha2VzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBjdXJyZW50U3VtID0gY3VycmVudFN1bSArIChzdGFrZXNbaV0gLyBtaWQpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRTdW0gPj0gbnVtKSB7XG4gICAgICAgICAgICAgICAgbGVmdCA9IG1pZDtcbiAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFmb3VuZCkge1xuICAgICAgICAgICAgcmlnaHQgPSBtaWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxlZnQ7XG59XG4vLyBuZWFyY29yZSByZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9uZWFyL25lYXJjb3JlL2Jsb2IvNWE4YWUyNjNlYzA3OTMwY2QzNGQwZGNmNWJjZWUyNTBjNjdjMDJhYS9jaGFpbi9lcG9jaF9tYW5hZ2VyL3NyYy92YWxpZGF0b3Jfc2VsZWN0aW9uLnJzI0wzMDg7TDMxNVxuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbykge1xuICAgIGlmIChtaW5pbXVtU3Rha2VSYXRpby5sZW5ndGggIT0gMikge1xuICAgICAgICB0aHJvdyBFcnJvcignbWluaW11bVN0YWtlUmF0aW8gc2hvdWxkIGhhdmUgMiBlbGVtZW50cycpO1xuICAgIH1cbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IHN0YWtlc1N1bSA9IHN0YWtlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICBpZiAodmFsaWRhdG9ycy5sZW5ndGggPCBtYXhOdW1iZXJPZlNlYXRzKSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNTdW0gKiBCaWdJbnQobWluaW11bVN0YWtlUmF0aW9bMF0pIC8gQmlnSW50KG1pbmltdW1TdGFrZVJhdGlvWzFdKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNbMF0gKyBCaWdJbnQoMSk7XG4gICAgfVxufVxuLyoqIERpZmYgdmFsaWRhdG9ycyBiZXR3ZWVuIGN1cnJlbnQgYW5kIG5leHQgZXBvY2guXG4gKiBSZXR1cm5zIGFkZGl0aW9ucywgc3VidHJhY3Rpb25zIGFuZCBjaGFuZ2VzIHRvIHZhbGlkYXRvciBzZXQuXG4gKiBAcGFyYW0gY3VycmVudFZhbGlkYXRvcnM6IGxpc3Qgb2YgY3VycmVudCB2YWxpZGF0b3JzLlxuICogQHBhcmFtIG5leHRWYWxpZGF0b3JzOiBsaXN0IG9mIG5leHQgdmFsaWRhdG9ycy5cbiAqL1xuZnVuY3Rpb24gZGlmZkVwb2NoVmFsaWRhdG9ycyhjdXJyZW50VmFsaWRhdG9ycywgbmV4dFZhbGlkYXRvcnMpIHtcbiAgICBjb25zdCB2YWxpZGF0b3JzTWFwID0gbmV3IE1hcCgpO1xuICAgIGN1cnJlbnRWYWxpZGF0b3JzLmZvckVhY2godiA9PiB2YWxpZGF0b3JzTWFwLnNldCh2LmFjY291bnRfaWQsIHYpKTtcbiAgICBjb25zdCBuZXh0VmFsaWRhdG9yc1NldCA9IG5ldyBTZXQobmV4dFZhbGlkYXRvcnMubWFwKHYgPT4gdi5hY2NvdW50X2lkKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV3VmFsaWRhdG9yczogbmV4dFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIXZhbGlkYXRvcnNNYXAuaGFzKHYuYWNjb3VudF9pZCkpLFxuICAgICAgICByZW1vdmVkVmFsaWRhdG9yczogY3VycmVudFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIW5leHRWYWxpZGF0b3JzU2V0Lmhhcyh2LmFjY291bnRfaWQpKSxcbiAgICAgICAgY2hhbmdlZFZhbGlkYXRvcnM6IG5leHRWYWxpZGF0b3JzLmZpbHRlcih2ID0+ICh2YWxpZGF0b3JzTWFwLmhhcyh2LmFjY291bnRfaWQpICYmIHZhbGlkYXRvcnNNYXAuZ2V0KHYuYWNjb3VudF9pZCkuc3Rha2UgIT0gdi5zdGFrZSkpXG4gICAgICAgICAgICAubWFwKHYgPT4gKHsgY3VycmVudDogdmFsaWRhdG9yc01hcC5nZXQodi5hY2NvdW50X2lkKSwgbmV4dDogdiB9KSlcbiAgICB9O1xufVxuZXhwb3J0cy5kaWZmRXBvY2hWYWxpZGF0b3JzID0gZGlmZkVwb2NoVmFsaWRhdG9ycztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/lib/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WalletConnection = exports.ConnectedWalletAccount = exports.Near = void 0;\nvar near_1 = __webpack_require__(/*! ./near */ \"(ssr)/./node_modules/@near-js/wallet-account/lib/near.js\");\nObject.defineProperty(exports, \"Near\", ({ enumerable: true, get: function () { return near_1.Near; } }));\nvar wallet_account_1 = __webpack_require__(/*! ./wallet_account */ \"(ssr)/./node_modules/@near-js/wallet-account/lib/wallet_account.js\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", ({ enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } }));\nObject.defineProperty(exports, \"WalletConnection\", ({ enumerable: true, get: function () { return wallet_account_1.WalletConnection; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLDhCQUE4QixHQUFHLFlBQVk7QUFDeEUsYUFBYSxtQkFBTyxDQUFDLHdFQUFRO0FBQzdCLHdDQUF1QyxFQUFFLHFDQUFxQyx1QkFBdUIsRUFBQztBQUN0Ryx1QkFBdUIsbUJBQU8sQ0FBQyw0RkFBa0I7QUFDakQsMERBQXlELEVBQUUscUNBQXFDLG1EQUFtRCxFQUFDO0FBQ3BKLG9EQUFtRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbGliL2luZGV4LmpzPzMwODYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldhbGxldENvbm5lY3Rpb24gPSBleHBvcnRzLkNvbm5lY3RlZFdhbGxldEFjY291bnQgPSBleHBvcnRzLk5lYXIgPSB2b2lkIDA7XG52YXIgbmVhcl8xID0gcmVxdWlyZShcIi4vbmVhclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5lYXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5lYXJfMS5OZWFyOyB9IH0pO1xudmFyIHdhbGxldF9hY2NvdW50XzEgPSByZXF1aXJlKFwiLi93YWxsZXRfYWNjb3VudFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3RlZFdhbGxldEFjY291bnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdhbGxldF9hY2NvdW50XzEuQ29ubmVjdGVkV2FsbGV0QWNjb3VudDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIldhbGxldENvbm5lY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdhbGxldF9hY2NvdW50XzEuV2FsbGV0Q29ubmVjdGlvbjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/lib/near.js":
/*!**********************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/lib/near.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link \"@near-js/accounts\".account.Account | Account} through the {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#account](https://docs.near.org/tools/near-api-js/quick-reference#account)\n *\n * @module near\n */\nconst accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/index.js\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    constructor(config) {\n        var _a;\n        this.config = config;\n        this.connection = accounts_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: config.provider || { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || ((_a = config.deps) === null || _a === void 0 ? void 0 : _a.keyStore) },\n            jsvmAccountId: config.jsvmAccountId || `jsvm.${config.networkId}`\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? BigInt(config.initialBalance) : BigInt('500000000000000000000000000');\n            this.accountCreator = new accounts_1.LocalAccountCreator(new accounts_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new accounts_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    account(accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new accounts_1.Account(this.connection, accountId);\n            return account;\n        });\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig#masterAccount} and {@link NearConfig#helperUrl}\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    createAccount(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.accountCreator) {\n                throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n            }\n            yield this.accountCreator.createAccount(accountId, publicKey);\n            return new accounts_1.Account(this.connection, accountId);\n        });\n    }\n}\nexports.Near = Near;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbGliL25lYXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWjtBQUNBO0FBQ0EsUUFBUSxZQUFZLGdDQUFnQyxxREFBcUQsYUFBYSwrRUFBK0U7QUFDck0sNkJBQTZCLGlCQUFpQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsbUhBQW1CO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGlDQUFpQyxnREFBZ0Q7QUFDNUgsdUNBQXVDLDRIQUE0SDtBQUNuSywyREFBMkQsaUJBQWlCO0FBQzVFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxvQ0FBb0MscUJBQXFCO0FBQ3pELHFDQUFxQztBQUNyQyxtQ0FBbUM7QUFDbkMsYUFBYSxnQ0FBZ0MsS0FBSztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9saWIvbmVhci5qcz80MGNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5lYXIgPSB2b2lkIDA7XG4vKipcbiAqIFRoaXMgbW9kdWxlIGNvbnRhaW5zIHRoZSBtYWluIGNsYXNzIGRldmVsb3BlcnMgd2lsbCB1c2UgdG8gaW50ZXJhY3Qgd2l0aCBORUFSLlxuICogVGhlIHtAbGluayBOZWFyfSBjbGFzcyBpcyB1c2VkIHRvIGludGVyYWN0IHdpdGgge0BsaW5rIFwiQG5lYXItanMvYWNjb3VudHNcIi5hY2NvdW50LkFjY291bnQgfCBBY2NvdW50fSB0aHJvdWdoIHRoZSB7QGxpbmsgXCJAbmVhci1qcy9wcm92aWRlcnNcIi5qc29uLXJwYy1wcm92aWRlci5Kc29uUnBjUHJvdmlkZXIgfCBKc29uUnBjUHJvdmlkZXJ9LlxuICogSXQgaXMgY29uZmlndXJlZCB2aWEgdGhlIHtAbGluayBOZWFyQ29uZmlnfS5cbiAqXG4gKiBAc2VlIFtodHRwczovL2RvY3MubmVhci5vcmcvdG9vbHMvbmVhci1hcGktanMvcXVpY2stcmVmZXJlbmNlI2FjY291bnRdKGh0dHBzOi8vZG9jcy5uZWFyLm9yZy90b29scy9uZWFyLWFwaS1qcy9xdWljay1yZWZlcmVuY2UjYWNjb3VudClcbiAqXG4gKiBAbW9kdWxlIG5lYXJcbiAqL1xuY29uc3QgYWNjb3VudHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9hY2NvdW50c1wiKTtcbi8qKlxuICogVGhpcyBpcyB0aGUgbWFpbiBjbGFzcyBkZXZlbG9wZXJzIHNob3VsZCB1c2UgdG8gaW50ZXJhY3Qgd2l0aCBORUFSLlxuICogQGV4YW1wbGVcbiAqIGBgYGpzXG4gKiBjb25zdCBuZWFyID0gbmV3IE5lYXIoY29uZmlnKTtcbiAqIGBgYFxuICovXG5jbGFzcyBOZWFyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uID0gYWNjb3VudHNfMS5Db25uZWN0aW9uLmZyb21Db25maWcoe1xuICAgICAgICAgICAgbmV0d29ya0lkOiBjb25maWcubmV0d29ya0lkLFxuICAgICAgICAgICAgcHJvdmlkZXI6IGNvbmZpZy5wcm92aWRlciB8fCB7IHR5cGU6ICdKc29uUnBjUHJvdmlkZXInLCBhcmdzOiB7IHVybDogY29uZmlnLm5vZGVVcmwsIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzIH0gfSxcbiAgICAgICAgICAgIHNpZ25lcjogY29uZmlnLnNpZ25lciB8fCB7IHR5cGU6ICdJbk1lbW9yeVNpZ25lcicsIGtleVN0b3JlOiBjb25maWcua2V5U3RvcmUgfHwgKChfYSA9IGNvbmZpZy5kZXBzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eua2V5U3RvcmUpIH0sXG4gICAgICAgICAgICBqc3ZtQWNjb3VudElkOiBjb25maWcuanN2bUFjY291bnRJZCB8fCBganN2bS4ke2NvbmZpZy5uZXR3b3JrSWR9YFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGNvbmZpZy5tYXN0ZXJBY2NvdW50KSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBmaWd1cmUgb3V0IGJldHRlciB3YXkgb2Ygc3BlY2lmaXlpbmcgaW5pdGlhbCBiYWxhbmNlLlxuICAgICAgICAgICAgLy8gSGFyZGNvZGVkIG51bWJlciBiZWxvdyBtdXN0IGJlIGVub3VnaCB0byBwYXkgdGhlIGdhcyBjb3N0IHRvIGRldi1kZXBsb3kgd2l0aCBuZWFyLXNoZWxsIGZvciBtdWx0aXBsZSB0aW1lc1xuICAgICAgICAgICAgY29uc3QgaW5pdGlhbEJhbGFuY2UgPSBjb25maWcuaW5pdGlhbEJhbGFuY2UgPyBCaWdJbnQoY29uZmlnLmluaXRpYWxCYWxhbmNlKSA6IEJpZ0ludCgnNTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJyk7XG4gICAgICAgICAgICB0aGlzLmFjY291bnRDcmVhdG9yID0gbmV3IGFjY291bnRzXzEuTG9jYWxBY2NvdW50Q3JlYXRvcihuZXcgYWNjb3VudHNfMS5BY2NvdW50KHRoaXMuY29ubmVjdGlvbiwgY29uZmlnLm1hc3RlckFjY291bnQpLCBpbml0aWFsQmFsYW5jZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY29uZmlnLmhlbHBlclVybCkge1xuICAgICAgICAgICAgdGhpcy5hY2NvdW50Q3JlYXRvciA9IG5ldyBhY2NvdW50c18xLlVybEFjY291bnRDcmVhdG9yKHRoaXMuY29ubmVjdGlvbiwgY29uZmlnLmhlbHBlclVybCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmFjY291bnRDcmVhdG9yID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIG5lYXIgYWNjb3VudElkIHVzZWQgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgbmV0d29yay5cbiAgICAgKi9cbiAgICBhY2NvdW50KGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgYWNjb3VudCA9IG5ldyBhY2NvdW50c18xLkFjY291bnQodGhpcy5jb25uZWN0aW9uLCBhY2NvdW50SWQpO1xuICAgICAgICAgICAgcmV0dXJuIGFjY291bnQ7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gYWNjb3VudCB1c2luZyB0aGUge0BsaW5rIEFjY291bnRDcmVhdG9yfS4gRWl0aGVyOlxuICAgICAqICogdXNpbmcgYSBtYXN0ZXJBY2NvdW50IHdpdGgge0BsaW5rIExvY2FsQWNjb3VudENyZWF0b3J9XG4gICAgICogKiB1c2luZyB0aGUgaGVscGVyVXJsIHdpdGgge0BsaW5rIFVybEFjY291bnRDcmVhdG9yfVxuICAgICAqIEBzZWUge0BsaW5rIE5lYXJDb25maWcjbWFzdGVyQWNjb3VudH0gYW5kIHtAbGluayBOZWFyQ29uZmlnI2hlbHBlclVybH1cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhY2NvdW50SWRcbiAgICAgKiBAcGFyYW0gcHVibGljS2V5XG4gICAgICovXG4gICAgY3JlYXRlQWNjb3VudChhY2NvdW50SWQsIHB1YmxpY0tleSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmFjY291bnRDcmVhdG9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNdXN0IHNwZWNpZnkgYWNjb3VudCBjcmVhdG9yLCBlaXRoZXIgdmlhIG1hc3RlckFjY291bnQgb3IgaGVscGVyVXJsIGNvbmZpZ3VyYXRpb24gc2V0dGluZ3MuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5aWVsZCB0aGlzLmFjY291bnRDcmVhdG9yLmNyZWF0ZUFjY291bnQoYWNjb3VudElkLCBwdWJsaWNLZXkpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBhY2NvdW50c18xLkFjY291bnQodGhpcy5jb25uZWN0aW9uLCBhY2NvdW50SWQpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLk5lYXIgPSBOZWFyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/lib/near.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/lib/wallet_account.js":
/*!********************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/lib/wallet_account.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectedWalletAccount = exports.WalletConnection = void 0;\n/**\n * This module exposes two classes:\n * * {@link WalletConnection} which redirects users to [NEAR Wallet](https://wallet.near.org/) for key management.\n * * {@link ConnectedWalletAccount} is an {@link \"@near-js/accounts\".account.Account | Account} implementation that uses {@link WalletConnection} to get keys\n *\n * @module walletAccount\n */\nconst accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/index.js\");\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js\");\nconst borsh_1 = __webpack_require__(/*! borsh */ \"(ssr)/./node_modules/borsh/lib/cjs/index.js\");\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\n/**\n * This class is not intended for use outside the browser. Without `window` (i.e. in server contexts), it will instantiate but will throw a clear error when used.\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#wallet](https://docs.near.org/tools/near-api-js/quick-reference#wallet)\n * @example\n * ```js\n * // create new WalletConnection instance\n * const wallet = new WalletConnection(near, 'my-app');\n *\n * // If not signed in redirect to the NEAR wallet to sign in\n * // keys will be stored in the BrowserLocalStorageKeyStore\n * if(!wallet.isSignedIn()) return wallet.requestSignIn()\n * ```\n */\nclass WalletConnection {\n    constructor(near, appKeyPrefix) {\n        if (typeof (appKeyPrefix) !== 'string') {\n            throw new Error('Please define a clear appKeyPrefix for this WalletConnection instance as the second argument to the constructor');\n        }\n        if (typeof window === 'undefined') {\n            return new Proxy(this, {\n                get(target, property) {\n                    if (property === 'isSignedIn') {\n                        return () => false;\n                    }\n                    if (property === 'getAccountId') {\n                        return () => '';\n                    }\n                    if (target[property] && typeof target[property] === 'function') {\n                        return () => {\n                            throw new Error('No window found in context, please ensure you are using WalletConnection on the browser');\n                        };\n                    }\n                    return target[property];\n                }\n            });\n        }\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInPromise = this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletConnection is authorized with the wallet.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.isSignedIn();\n     * ```\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns promise of completing signing in after redirecting from wallet\n     * @example\n     * ```js\n     * // on login callback page\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.isSignedIn(); // false\n     * await wallet.isSignedInAsync(); // true\n     * ```\n     */\n    isSignedInAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._completeSignInPromise) {\n                return this.isSignedIn();\n            }\n            yield this._completeSignInPromise;\n            return this.isSignedIn();\n        });\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.getAccountId();\n     * ```\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Constructs string URL to the wallet authentication page.\n     * @param options An optional options object\n     * @param options.contractId The NEAR account where the contract is deployed\n     * @param options.successUrl URL to redirect upon success. Default: current url\n     * @param options.failureUrl URL to redirect upon failure. Default: current url\n     *\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * // return string URL to the NEAR Wallet\n     * const url = await wallet.requestSignInUrl({ contractId: 'account-with-deploy-contract.near' });\n     * ```\n     */\n    requestSignInUrl({ contractId, methodNames, successUrl, failureUrl, keyType = 'ed25519' }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n            newUrl.searchParams.set('success_url', successUrl || currentUrl.href);\n            newUrl.searchParams.set('failure_url', failureUrl || currentUrl.href);\n            if (contractId) {\n                /* Throws exception if contract account does not exist */\n                const contractAccount = yield this._near.account(contractId);\n                yield contractAccount.state();\n                newUrl.searchParams.set('contract_id', contractId);\n                const accessKey = crypto_1.KeyPair.fromRandom(keyType);\n                newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n                yield this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n            }\n            if (methodNames) {\n                methodNames.forEach(methodName => {\n                    newUrl.searchParams.append('methodNames', methodName);\n                });\n            }\n            return newUrl.toString();\n        });\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param options An optional options object\n     * @param options.contractId The NEAR account where the contract is deployed\n     * @param options.successUrl URL to redirect upon success. Default: current url\n     * @param options.failureUrl URL to redirect upon failure. Default: current url\n     *\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * // redirects to the NEAR Wallet\n     * wallet.requestSignIn({ contractId: 'account-with-deploy-contract.near' });\n     * ```\n     */\n    requestSignIn(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = yield this.requestSignInUrl(options);\n            window.location.assign(url);\n        });\n    }\n    /**\n     * Constructs string URL to the wallet to sign a transaction or batch of transactions.\n     *\n     * @param options A required options object\n     * @param options.transactions List of transactions to sign\n     * @param options.callbackUrl URL to redirect upon success. Default: current url\n     * @param options.meta Meta information the wallet will send back to the application. `meta` will be attached to the `callbackUrl` as a url search param\n     *\n     */\n    requestSignTransactionsUrl({ transactions, meta, callbackUrl }) {\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL('sign', this._walletBaseUrl);\n        newUrl.searchParams.set('transactions', transactions\n            .map(transaction => (0, borsh_1.serialize)(transactions_1.SCHEMA.Transaction, transaction))\n            .map(serialized => Buffer.from(serialized).toString('base64'))\n            .join(','));\n        newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n        if (meta)\n            newUrl.searchParams.set('meta', meta);\n        return newUrl.toString();\n    }\n    /**\n     * Requests the user to quickly sign for a transaction or batch of transactions by redirecting to the wallet.\n     *\n     * @param options A required options object\n     * @param options.transactions List of transactions to sign\n     * @param options.callbackUrl URL to redirect upon success. Default: current url\n     * @param options.meta Meta information the wallet will send back to the application. `meta` will be attached to the `callbackUrl` as a url search param\n     *\n     */\n    requestSignTransactions(options) {\n        const url = this.requestSignTransactionsUrl(options);\n        window.location.assign(url);\n    }\n    /**\n     * @hidden\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    _completeSignInWithAccessKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const publicKey = currentUrl.searchParams.get('public_key') || '';\n            const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n            const accountId = currentUrl.searchParams.get('account_id') || '';\n            // TODO: Handle errors during login\n            if (accountId) {\n                const authData = {\n                    accountId,\n                    allKeys\n                };\n                window.localStorage.setItem(this._authDataKey, JSON.stringify(authData));\n                if (publicKey) {\n                    yield this._moveKeyFromTempToPermanent(accountId, publicKey);\n                }\n                this._authData = authData;\n            }\n            currentUrl.searchParams.delete('public_key');\n            currentUrl.searchParams.delete('all_keys');\n            currentUrl.searchParams.delete('account_id');\n            currentUrl.searchParams.delete('meta');\n            currentUrl.searchParams.delete('transactionHashes');\n            window.history.replaceState({}, document.title, currentUrl.toString());\n        });\n    }\n    /**\n     * @hidden\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    _moveKeyFromTempToPermanent(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n            yield this._keyStore.setKey(this._networkId, accountId, keyPair);\n            yield this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        });\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletConnection.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexports.WalletConnection = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using {@link WalletConnection} when no local key is available.\n */\nclass ConnectedWalletAccount extends accounts_1.Account {\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    /**\n     * Sign a transaction by redirecting to the NEAR Wallet\n     * @see {@link WalletConnection#requestSignTransactions}\n     * @param options An optional options object\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions An array of transaction actions to be performed.\n     * @param options.walletMeta Additional metadata to be included in the wallet signing request.\n     * @param options.walletCallbackUrl URL to redirect upon completion of the wallet signing process. Default: current URL.\n     */\n    signAndSendTransaction({ receiverId, actions, walletMeta, walletCallbackUrl = window.location.href }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const localKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            let accessKey = yield this.accessKeyForTransaction(receiverId, actions, localKey);\n            if (!accessKey) {\n                throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n            }\n            if (localKey && localKey.toString() === accessKey.public_key) {\n                try {\n                    return yield _super.signAndSendTransaction.call(this, { receiverId, actions });\n                }\n                catch (e) {\n                    if (e.type === 'NotEnoughAllowance') {\n                        accessKey = yield this.accessKeyForTransaction(receiverId, actions);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockHash = (0, utils_1.baseDecode)(block.header.hash);\n            const publicKey = crypto_1.PublicKey.from(accessKey.public_key);\n            // TODO: Cache & listen for nonce updates for given access key\n            const nonce = accessKey.access_key.nonce + BigInt(1);\n            const transaction = (0, transactions_1.createTransaction)(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n            yield this.walletConnection.requestSignTransactions({\n                transactions: [transaction],\n                meta: walletMeta,\n                callbackUrl: walletCallbackUrl\n            });\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    reject(new Error('Failed to redirect to sign transaction'));\n                }, 1000);\n            });\n            // TODO: Aggregate multiple transaction request with \"debounce\".\n            // TODO: Introduce TransactionQueue which also can be used to watch for status?\n        });\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of \\{access_key: AccessKey, public_key: PublicKey\\} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { access_key: { permission } } = accessKey;\n            if (permission === 'FullAccess') {\n                return true;\n            }\n            if (permission.FunctionCall) {\n                const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n                /********************************\n                Accept multisig access keys and let wallets attempt to signAndSendTransaction\n                If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n                ********************************/\n                if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                    return true;\n                }\n                if (allowedReceiverId === receiverId) {\n                    if (actions.length !== 1) {\n                        return false;\n                    }\n                    const [{ functionCall }] = actions;\n                    return functionCall &&\n                        (!functionCall.deposit || functionCall.deposit.toString() === '0') && // TODO: Should support charging amount smaller than allowance?\n                        (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                    // TODO: Handle cases when allowance doesn't have enough to pay for gas\n                }\n            }\n            // TODO: Support other permissions than FunctionCall\n            return false;\n        });\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     */\n    accessKeyForTransaction(receiverId, actions, localKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKeys = yield this.getAccessKeys();\n            if (localKey) {\n                const accessKey = accessKeys.find(key => key.public_key.toString() === localKey.toString());\n                if (accessKey && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            const walletKeys = this.walletConnection._authData.allKeys;\n            for (const accessKey of accessKeys) {\n                if (walletKeys.indexOf(accessKey.public_key) !== -1 && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            return null;\n        });\n    }\n}\nexports.ConnectedWalletAccount = ConnectedWalletAccount;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/lib/wallet_account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Account = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/index.js\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst utils_2 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/utils.js\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey, stake, transfer, } = transactions_1.actionCreators;\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link \"@near-js/crypto\".key_pair.KeyPair | KeyPair}.\n */\nclass Account {\n    constructor(connection, accountId) {\n        /** @hidden */\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    getConnection() {\n        return this.connection;\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see [https://docs.near.org/api/rpc/contracts#view-account](https://docs.near.org/api/rpc/contracts#view-account)\n     */\n    state() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.connection.provider.query({\n                request_type: 'view_account',\n                account_id: this.accountId,\n                finality: 'optimistic'\n            });\n        });\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     */\n    signTransaction(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKeyInfo = yield this.findAccessKey(receiverId, actions);\n            if (!accessKeyInfo) {\n                throw new types_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair exists for this account`, 'KeyNotFound');\n            }\n            const { accessKey } = accessKeyInfo;\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockHash = block.header.hash;\n            const nonce = accessKey.nonce + BigInt(1);\n            return yield (0, transactions_1.signTransaction)(receiverId, nonce, actions, (0, utils_1.baseDecode)(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n        });\n    }\n    /**\n     * Sign a transaction to perform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider | JsonRpcProvider }\n     *\n     * @param options The options for signing and sending the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be performed in the transaction.\n     * @param options.returnError Whether to return an error if the transaction fails.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransaction({ receiverId, actions, returnError }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let txHash, signedTx;\n            // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n            const result = yield (0, providers_1.exponentialBackoff)(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, () => __awaiter(this, void 0, void 0, function* () {\n                [txHash, signedTx] = yield this.signTransaction(receiverId, actions);\n                const publicKey = signedTx.transaction.publicKey;\n                try {\n                    return yield this.connection.provider.sendTransaction(signedTx);\n                }\n                catch (error) {\n                    if (error.type === 'InvalidNonce') {\n                        utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} with new nonce.`);\n                        delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                        return null;\n                    }\n                    if (error.type === 'Expired') {\n                        utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} due to expired block hash`);\n                        return null;\n                    }\n                    error.context = new types_1.ErrorContext((0, utils_1.baseEncode)(txHash));\n                    throw error;\n                }\n            }));\n            if (!result) {\n                // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n                throw new types_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n            }\n            (0, utils_1.printTxOutcomeLogsAndFailures)({ contractId: signedTx.transaction.receiverId, outcome: result });\n            // Should be falsy if result.status.Failure is null\n            if (!returnError && typeof result.status === 'object' && typeof result.status.Failure === 'object' && result.status.Failure !== null) {\n                // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                    throw new types_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n                }\n                else {\n                    throw (0, utils_1.parseResultError)(result);\n                }\n            }\n            // TODO: if Tx is Unknown or Started.\n            return result;\n        });\n    }\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link \"@near-js/keystores\".keystore.KeyStore | Keystore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    findAccessKey(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n            const publicKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            if (!publicKey) {\n                throw new types_1.TypedError(`no matching key pair found in ${this.connection.signer}`, 'PublicKeyNotFound');\n            }\n            const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n            if (cachedAccessKey !== undefined) {\n                return { publicKey, accessKey: cachedAccessKey };\n            }\n            try {\n                const rawAccessKey = yield this.connection.provider.query({\n                    request_type: 'view_access_key',\n                    account_id: this.accountId,\n                    public_key: publicKey.toString(),\n                    finality: 'optimistic'\n                });\n                // store nonce as BigInt to preserve precision on big number\n                const accessKey = Object.assign(Object.assign({}, rawAccessKey), { nonce: BigInt(rawAccessKey.nonce || 0) });\n                // this function can be called multiple times and retrieve the same access key\n                // this checks to see if the access key was already retrieved and cached while\n                // the above network call was in flight. To keep nonce values in line, we return\n                // the cached access key.\n                if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                    return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n                }\n                this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n                return { publicKey, accessKey };\n            }\n            catch (e) {\n                if (e.type == 'AccessKeyDoesNotExist') {\n                    return null;\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     * @param amount of NEAR to transfer to the created contract account. Transfer enough to pay for storage https://docs.near.org/docs/concepts/storage-staking\n     */\n    createAndDeployContract(contractId, publicKey, data, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            yield this.signAndSendTransaction({\n                receiverId: contractId,\n                actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey), deployContract(data)]\n            });\n            const contractAccount = new Account(this.connection, contractId);\n            return contractAccount;\n        });\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    sendMoney(receiverId, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId,\n                actions: [transfer(amount)]\n            });\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    createAccount(newAccountId, publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            return this.signAndSendTransaction({\n                receiverId: newAccountId,\n                actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n            });\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    deleteAccount(beneficiaryId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            utils_1.Logger.log('Deleting an account does not automatically transfer NFTs and FTs to the beneficiary address. Ensure to transfer assets before deleting.');\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [deleteAccount(beneficiaryId)]\n            });\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    deployContract(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [deployContract(data)]\n            });\n        });\n    }\n    /** @hidden */\n    encodeJSContractArgs(contractId, method, args) {\n        return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n    }\n    /**\n      * Execute a function call.\n      * @param options The options for the function call.\n      * @param options.contractId The NEAR account ID of the smart contract.\n      * @param options.methodName The name of the method to be called on the smart contract.\n      * @param options.args The arguments to be passed to the method.\n      * @param options.gas The maximum amount of gas to be used for the function call.\n      * @param options.attachedDeposit The amount of NEAR tokens to be attached to the function call.\n      * @param options.walletMeta Metadata for wallet integration.\n      * @param options.walletCallbackUrl The callback URL for wallet integration.\n      * @param options.stringify A function to convert input arguments into bytes array\n      * @param options.jsContract Whether the contract is from JS SDK, automatically encodes args from JS SDK to binary.\n      * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the function call.\n      */\n    functionCall({ contractId, methodName, args = {}, gas = utils_1.DEFAULT_FUNCTION_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl, stringify, jsContract }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateArgs(args);\n            let functionCallArgs;\n            if (jsContract) {\n                const encodedArgs = this.encodeJSContractArgs(contractId, methodName, JSON.stringify(args));\n                functionCallArgs = ['call_js_contract', encodedArgs, gas, attachedDeposit, null, true];\n            }\n            else {\n                const stringifyArg = stringify === undefined ? transactions_1.stringifyJsonOrBytes : stringify;\n                functionCallArgs = [methodName, args, gas, attachedDeposit, stringifyArg, false];\n            }\n            return this.signAndSendTransaction({\n                receiverId: jsContract ? this.connection.jsvmAccountId : contractId,\n                // eslint-disable-next-line prefer-spread\n                actions: [functionCall.apply(void 0, functionCallArgs)],\n                walletMeta,\n                walletCallbackUrl\n            });\n        });\n    }\n    /**\n     * @see [https://docs.near.org/concepts/basics/accounts/access-keys](https://docs.near.org/concepts/basics/accounts/access-keys)\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    addKey(publicKey, contractId, methodNames, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!methodNames) {\n                methodNames = [];\n            }\n            if (!Array.isArray(methodNames)) {\n                methodNames = [methodNames];\n            }\n            let accessKey;\n            if (!contractId) {\n                accessKey = fullAccessKey();\n            }\n            else {\n                accessKey = functionCallAccessKey(contractId, methodNames, amount);\n            }\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n            });\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    deleteKey(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [deleteKey(crypto_1.PublicKey.from(publicKey))]\n            });\n        });\n    }\n    /**\n     * @see [https://near-nodes.io/validator/staking-and-delegation](https://near-nodes.io/validator/staking-and-delegation)\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    stake(publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [stake(amount, crypto_1.PublicKey.from(publicKey))]\n            });\n        });\n    }\n    /**\n     * Compose and sign a SignedDelegate action to be executed in a transaction on behalf of this Account instance\n     *\n     * @param options Options for the transaction.\n     * @param options.actions Actions to be included in the meta transaction\n     * @param options.blockHeightTtl Number of blocks past the current block height for which the SignedDelegate action may be included in a meta transaction\n     * @param options.receiverId Receiver account of the meta transaction\n     */\n    signedDelegate({ actions, blockHeightTtl, receiverId, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { provider, signer } = this.connection;\n            const { header } = yield provider.block({ finality: 'final' });\n            const { accessKey, publicKey } = yield this.findAccessKey(null, null);\n            const delegateAction = (0, transactions_1.buildDelegateAction)({\n                actions,\n                maxBlockHeight: BigInt(header.height) + BigInt(blockHeightTtl),\n                nonce: BigInt(accessKey.nonce) + BigInt(1),\n                publicKey,\n                receiverId,\n                senderId: this.accountId,\n            });\n            const { signedDelegateAction } = yield (0, transactions_1.signDelegateAction)({\n                delegateAction,\n                signer: {\n                    sign: (message) => __awaiter(this, void 0, void 0, function* () {\n                        const { signature } = yield signer.signMessage(message, delegateAction.senderId, this.connection.networkId);\n                        return signature;\n                    }),\n                }\n            });\n            return signedDelegateAction;\n        });\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new types_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n     *\n     * @param options Function call options.\n     * @param options.contractId NEAR account where the contract is deployed\n     * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param options.args Any arguments to the view contract method, wrapped in JSON\n     * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n     * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n     * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n     * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     * @returns {Promise<any>}\n     */\n    viewFunction(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_2.viewFunction)(this.connection, options);\n        });\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_2.viewState)(this.connection, this.accountId, prefix, blockQuery);\n        });\n    }\n    /**\n     * Get all access keys for the account\n     * @see [https://docs.near.org/api/rpc/access-keys#view-access-key-list](https://docs.near.org/api/rpc/access-keys#view-access-key-list)\n     */\n    getAccessKeys() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connection.provider.query({\n                request_type: 'view_access_key_list',\n                account_id: this.accountId,\n                finality: 'optimistic'\n            });\n            // Replace raw nonce into a new BigInt\n            return (_a = response === null || response === void 0 ? void 0 : response.keys) === null || _a === void 0 ? void 0 : _a.map((key) => (Object.assign(Object.assign({}, key), { access_key: Object.assign(Object.assign({}, key.access_key), { nonce: BigInt(key.access_key.nonce) }) })));\n        });\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    getAccountDetails() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: update the response value to return all the different keys, not just app keys.\n            // Also if we need this function, or getAccessKeys is good enough.\n            const accessKeys = yield this.getAccessKeys();\n            const authorizedApps = accessKeys\n                .filter(item => item.access_key.permission !== 'FullAccess')\n                .map(item => {\n                const perm = item.access_key.permission;\n                return {\n                    contractId: perm.FunctionCall.receiver_id,\n                    amount: perm.FunctionCall.allowance,\n                    publicKey: item.public_key,\n                };\n            });\n            return { authorizedApps };\n        });\n    }\n    /**\n     * Returns calculated account balance\n     */\n    getAccountBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const protocolConfig = yield this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n            const state = yield this.state();\n            const costPerByte = BigInt(protocolConfig.runtime_config.storage_amount_per_byte);\n            const stateStaked = BigInt(state.storage_usage) * costPerByte;\n            const staked = BigInt(state.locked);\n            const totalBalance = BigInt(state.amount) + staked;\n            const availableBalance = totalBalance - (staked > stateStaked ? staked : stateStaked);\n            return {\n                total: totalBalance.toString(),\n                stateStaked: stateStaked.toString(),\n                staked: staked.toString(),\n                available: availableBalance.toString()\n            };\n        });\n    }\n    /**\n     * Returns the NEAR tokens balance and validators of a given account that is delegated to the staking pools that are part of the validators set in the current epoch.\n     *\n     * NOTE: If the tokens are delegated to a staking pool that is currently on pause or does not have enough tokens to participate in validation, they won't be accounted for.\n     * @returns {Promise<ActiveDelegatedStakeBalance>}\n     */\n    getActiveDelegatedStakeBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockHash = block.header.hash;\n            const epochId = block.header.epoch_id;\n            const { current_validators, next_validators, current_proposals } = yield this.connection.provider.validators(epochId);\n            const pools = new Set();\n            [...current_validators, ...next_validators, ...current_proposals]\n                .forEach((validator) => pools.add(validator.account_id));\n            const uniquePools = [...pools];\n            const promises = uniquePools\n                .map((validator) => (this.viewFunction({\n                contractId: validator,\n                methodName: 'get_account_total_balance',\n                args: { account_id: this.accountId },\n                blockQuery: { blockId: blockHash }\n            })));\n            const results = yield Promise.allSettled(promises);\n            const hasTimeoutError = results.some((result) => {\n                if (result.status === 'rejected' && result.reason.type === 'TimeoutError') {\n                    return true;\n                }\n                return false;\n            });\n            // When RPC is down and return timeout error, throw error\n            if (hasTimeoutError) {\n                throw new Error('Failed to get delegated stake balance');\n            }\n            const summary = results.reduce((result, state, index) => {\n                const validatorId = uniquePools[index];\n                if (state.status === 'fulfilled') {\n                    const currentBN = BigInt(state.value);\n                    if (currentBN !== BigInt(0)) {\n                        return Object.assign(Object.assign({}, result), { stakedValidators: [...result.stakedValidators, { validatorId, amount: currentBN.toString() }], total: result.total + currentBN });\n                    }\n                }\n                if (state.status === 'rejected') {\n                    return Object.assign(Object.assign({}, result), { failedValidators: [...result.failedValidators, { validatorId, error: state.reason }] });\n                }\n                return result;\n            }, { stakedValidators: [], failedValidators: [], total: BigInt(0) });\n            return Object.assign(Object.assign({}, summary), { total: summary.total.toString() });\n        });\n    }\n}\nexports.Account = Account;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_2fa.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_2fa.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Account2FA = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/index.js\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst account_multisig_1 = __webpack_require__(/*! ./account_multisig */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_multisig.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/constants.js\");\nconst types_2 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/types.js\");\nconst { addKey, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey } = transactions_1.actionCreators;\nclass Account2FA extends account_multisig_1.AccountMultisig {\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = 'https://helper.testnet.near.org';\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    /**\n     * Sign a transaction to preform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     *\n     * @param options Options for the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransaction({ receiverId, actions }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _super.signAndSendTransaction.call(this, { receiverId, actions });\n            // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n            yield this.sendCode();\n            const result = yield this.promptAndVerify();\n            if (this.onConfirmResult) {\n                yield this.onConfirmResult(result);\n            }\n            return result;\n        });\n    }\n    // default helpers for CH deployments of multisig\n    /**\n     * Deploy a multisig contract with 2FA and handle the deployment process.\n     * @param contractBytes - The bytecode of the multisig contract.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deployment.\n     */\n    deployMultisig(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransactionWithAccount: { get: () => super.signAndSendTransactionWithAccount }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const seedOrLedgerKey = (yield this.getRecoveryMethods()).data\n                .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n                .map((rm) => rm.publicKey);\n            const fak2lak = (yield this.getAccessKeys())\n                .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n                .map((ak) => ak.public_key)\n                .map(toPK);\n            const confirmOnlyKey = toPK((yield this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n            const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n            const actions = [\n                ...fak2lak.map((pk) => deleteKey(pk)),\n                ...fak2lak.map((pk) => addKey(pk, functionCallAccessKey(accountId, constants_1.MULTISIG_CHANGE_METHODS, null))),\n                addKey(confirmOnlyKey, functionCallAccessKey(accountId, constants_1.MULTISIG_CONFIRM_METHODS, null)),\n                deployContract(contractBytes),\n            ];\n            const newFunctionCallActionBatch = actions.concat(functionCall('new', newArgs, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT));\n            utils_1.Logger.log('deploying multisig contract for', accountId);\n            const { stateStatus: multisigStateStatus } = yield this.checkMultisigCodeAndStateStatus(contractBytes);\n            switch (multisigStateStatus) {\n                case types_2.MultisigStateStatus.STATE_NOT_INITIALIZED:\n                    return yield _super.signAndSendTransactionWithAccount.call(this, accountId, newFunctionCallActionBatch);\n                case types_2.MultisigStateStatus.VALID_STATE:\n                    return yield _super.signAndSendTransactionWithAccount.call(this, accountId, actions);\n                case types_2.MultisigStateStatus.INVALID_STATE:\n                    throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState');\n                default:\n                    throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n            }\n        });\n    }\n    /**\n     * Disable 2FA with the option to clean up contract state.\n     * @param options Options for disabling 2FA.\n     * @param options.contractBytes The bytecode of the contract to deploy.\n     * @param options.cleanupContractBytes The bytecode of the cleanup contract (optional).\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    disableWithFAK({ contractBytes, cleanupContractBytes }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let cleanupActions = [];\n            if (cleanupContractBytes) {\n                yield this.deleteAllRequests().catch(e => e);\n                cleanupActions = yield this.get2faDisableCleanupActions(cleanupContractBytes);\n            }\n            const keyConversionActions = yield this.get2faDisableKeyConversionActions();\n            const actions = [\n                ...cleanupActions,\n                ...keyConversionActions,\n                deployContract(contractBytes)\n            ];\n            const accessKeyInfo = yield this.findAccessKey(this.accountId, actions);\n            if (accessKeyInfo && accessKeyInfo.accessKey && accessKeyInfo.accessKey.permission !== 'FullAccess') {\n                throw new types_1.TypedError('No full access key found in keystore. Unable to bypass multisig', 'NoFAKFound');\n            }\n            return this.signAndSendTransactionWithAccount(this.accountId, actions);\n        });\n    }\n    /**\n     * Retrieves cleanup actions for disabling 2FA.\n     * @param cleanupContractBytes - The bytecode of the cleanup contract.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of cleanup actions.\n     */\n    get2faDisableCleanupActions(cleanupContractBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentAccountState = yield this.viewState('').catch(error => {\n                const cause = error.cause && error.cause.name;\n                if (cause == 'NO_CONTRACT_CODE') {\n                    return [];\n                }\n                throw cause == 'TOO_LARGE_CONTRACT_STATE'\n                    ? new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState')\n                    : error;\n            });\n            const currentAccountStateKeys = currentAccountState.map(({ key }) => key.toString('base64'));\n            return currentAccountState.length ? [\n                deployContract(cleanupContractBytes),\n                functionCall('clean', { keys: currentAccountStateKeys }, constants_1.MULTISIG_GAS, BigInt('0'))\n            ] : [];\n        });\n    }\n    /**\n     * Retrieves key conversion actions for disabling 2FA.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of key conversion actions.\n     */\n    get2faDisableKeyConversionActions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const accessKeys = yield this.getAccessKeys();\n            const lak2fak = accessKeys\n                .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n                .filter(({ access_key }) => {\n                const perm = access_key.permission.FunctionCall;\n                return perm.receiver_id === accountId &&\n                    perm.method_names.length === 4 &&\n                    perm.method_names.includes('add_request_and_confirm');\n            });\n            const confirmOnlyKey = crypto_1.PublicKey.from((yield this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n            return [\n                deleteKey(confirmOnlyKey),\n                ...lak2fak.map(({ public_key }) => deleteKey(crypto_1.PublicKey.from(public_key))),\n                ...lak2fak.map(({ public_key }) => addKey(crypto_1.PublicKey.from(public_key), fullAccessKey()))\n            ];\n        });\n    }\n    /**\n     * This method converts LAKs back to FAKs, clears state and deploys an 'empty' contract (contractBytes param)\n     * @param [contractBytes]{@link https://github.com/near/near-wallet/blob/master/packages/frontend/src/wasm/main.wasm?raw=true}\n     * @param [cleanupContractBytes]{@link https://github.com/near/core-contracts/blob/master/state-manipulation/res/state_cleanup.wasm?raw=true}\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    disable(contractBytes, cleanupContractBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { stateStatus } = yield this.checkMultisigCodeAndStateStatus();\n            if (stateStatus !== types_2.MultisigStateStatus.VALID_STATE && stateStatus !== types_2.MultisigStateStatus.STATE_NOT_INITIALIZED) {\n                throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n            }\n            let deleteAllRequestsError;\n            yield this.deleteAllRequests().catch(e => deleteAllRequestsError = e);\n            const cleanupActions = yield this.get2faDisableCleanupActions(cleanupContractBytes).catch(e => {\n                if (e.type === 'ContractHasExistingState') {\n                    throw deleteAllRequestsError || e;\n                }\n                throw e;\n            });\n            const actions = [\n                ...cleanupActions,\n                ...(yield this.get2faDisableKeyConversionActions()),\n                deployContract(contractBytes),\n            ];\n            utils_1.Logger.log('disabling 2fa for', this.accountId);\n            return yield this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions\n            });\n        });\n    }\n    /**\n     * Default implementation for sending the 2FA code.\n     * @returns {Promise<string>} - A promise that resolves to the request ID.\n     */\n    sendCodeDefault() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const { requestId } = this.getRequest();\n            const method = yield this.get2faMethod();\n            yield this.postSignedJson('/2fa/send', {\n                accountId,\n                method,\n                requestId,\n            });\n            return requestId;\n        });\n    }\n    getCodeDefault() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n        });\n    }\n    /**\n     * Prompts the user to enter and verify the 2FA code.\n     * @returns {Promise<any>} - A promise that resolves to the verification result.\n     */\n    promptAndVerify() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const method = yield this.get2faMethod();\n            const securityCode = yield this.getCode(method);\n            try {\n                const result = yield this.verifyCode(securityCode);\n                // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n                return result;\n            }\n            catch (e) {\n                utils_1.Logger.warn('Error validating security code:', e);\n                if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                    return yield this.promptAndVerify();\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * Verify the 2FA code using the default method.\n     * @param securityCode - The security code to verify.\n     * @returns {Promise<any>} A promise that resolves to the verification result.\n     */\n    verifyCodeDefault(securityCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const request = this.getRequest();\n            if (!request) {\n                throw new Error('no request pending');\n            }\n            const { requestId } = request;\n            return yield this.postSignedJson('/2fa/verify', {\n                accountId,\n                securityCode,\n                requestId\n            });\n        });\n    }\n    /**\n     * Retrieves recovery methods for the account.\n     * @returns {Promise<{ accountId: string, data: any }>} - A promise that resolves to recovery methods data.\n     */\n    getRecoveryMethods() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            return {\n                accountId,\n                data: yield this.postSignedJson('/account/recoveryMethods', { accountId })\n            };\n        });\n    }\n    /**\n     * Gets the 2FA method (kind and detail).\n     * @returns {Promise<{ kind: string, detail: string }>} A promise that resolves to the 2FA method.\n     */\n    get2faMethod() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { data } = yield this.getRecoveryMethods();\n            if (data && data.length) {\n                data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n            }\n            if (!data)\n                return null;\n            const { kind, detail } = data;\n            return { kind, detail };\n        });\n    }\n    /**\n    * Generates a signature for the latest finalized block.\n    * @returns {Promise<{ blockNumber: string, blockNumberSignature: string }>} - A promise that resolves to the signature information.\n    */\n    signatureFor() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockNumber = block.header.height.toString();\n            const signed = yield this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n            const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n            return { blockNumber, blockNumberSignature };\n        });\n    }\n    /**\n    * Sends a signed JSON request to a specified path.\n    * @param path - The path for the request.\n    * @param body - The request body.\n    * @returns {Promise<any>} - A promise that resolves to the response from the helper.\n    */\n    postSignedJson(path, body) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, providers_1.fetchJson)(this.helperUrl + path, JSON.stringify(Object.assign(Object.assign({}, body), (yield this.signatureFor()))));\n        });\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => crypto_1.PublicKey.from(pk);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_2fa.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_creator.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_creator.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/index.js\");\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    createAccount(newAccountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n        });\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    createAccount(newAccountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield (0, providers_1.fetchJson)(`${this.helperUrl}/account`, JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }));\n        });\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9hY2NvdW50X2NyZWF0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLDJCQUEyQixHQUFHLHNCQUFzQjtBQUNoRixvQkFBb0IsbUJBQU8sQ0FBQyxxSEFBb0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELGVBQWUsNEJBQTRCLHlEQUF5RDtBQUNwSixTQUFTO0FBQ1Q7QUFDQTtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9hY2NvdW50X2NyZWF0b3IuanM/YWVkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VcmxBY2NvdW50Q3JlYXRvciA9IGV4cG9ydHMuTG9jYWxBY2NvdW50Q3JlYXRvciA9IGV4cG9ydHMuQWNjb3VudENyZWF0b3IgPSB2b2lkIDA7XG5jb25zdCBwcm92aWRlcnNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9wcm92aWRlcnNcIik7XG4vKipcbiAqIEFjY291bnQgY3JlYXRvciBwcm92aWRlcyBhbiBpbnRlcmZhY2UgZm9yIGltcGxlbWVudGF0aW9ucyB0byBhY3R1YWxseSBjcmVhdGUgYWNjb3VudHNcbiAqL1xuY2xhc3MgQWNjb3VudENyZWF0b3Ige1xufVxuZXhwb3J0cy5BY2NvdW50Q3JlYXRvciA9IEFjY291bnRDcmVhdG9yO1xuY2xhc3MgTG9jYWxBY2NvdW50Q3JlYXRvciBleHRlbmRzIEFjY291bnRDcmVhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcihtYXN0ZXJBY2NvdW50LCBpbml0aWFsQmFsYW5jZSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLm1hc3RlckFjY291bnQgPSBtYXN0ZXJBY2NvdW50O1xuICAgICAgICB0aGlzLmluaXRpYWxCYWxhbmNlID0gaW5pdGlhbEJhbGFuY2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gYWNjb3VudCB1c2luZyBhIG1hc3RlckFjY291bnQsIG1lYW5pbmcgdGhlIG5ldyBhY2NvdW50IGlzIGNyZWF0ZWQgZnJvbSBhbiBleGlzdGluZyBhY2NvdW50XG4gICAgICogQHBhcmFtIG5ld0FjY291bnRJZCBUaGUgbmFtZSBvZiB0aGUgTkVBUiBhY2NvdW50IHRvIGJlIGNyZWF0ZWRcbiAgICAgKiBAcGFyYW0gcHVibGljS2V5IFRoZSBwdWJsaWMga2V5IGZyb20gdGhlIG1hc3RlckFjY291bnQgdXNlZCB0byBjcmVhdGUgdGhpcyBhY2NvdW50XG4gICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XG4gICAgICovXG4gICAgY3JlYXRlQWNjb3VudChuZXdBY2NvdW50SWQsIHB1YmxpY0tleSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgdGhpcy5tYXN0ZXJBY2NvdW50LmNyZWF0ZUFjY291bnQobmV3QWNjb3VudElkLCBwdWJsaWNLZXksIHRoaXMuaW5pdGlhbEJhbGFuY2UpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLkxvY2FsQWNjb3VudENyZWF0b3IgPSBMb2NhbEFjY291bnRDcmVhdG9yO1xuY2xhc3MgVXJsQWNjb3VudENyZWF0b3IgZXh0ZW5kcyBBY2NvdW50Q3JlYXRvciB7XG4gICAgY29uc3RydWN0b3IoY29ubmVjdGlvbiwgaGVscGVyVXJsKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvbiA9IGNvbm5lY3Rpb247XG4gICAgICAgIHRoaXMuaGVscGVyVXJsID0gaGVscGVyVXJsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGFjY291bnQgdXNpbmcgYSBoZWxwZXJVcmxcbiAgICAgKiBUaGlzIGlzIFtob3N0ZWQgaGVyZV0oaHR0cHM6Ly9oZWxwZXIubmVhcnByb3RvY29sLmNvbSkgb3Igc2V0IHVwIGxvY2FsbHkgd2l0aCB0aGUgW25lYXItY29udHJhY3QtaGVscGVyXShodHRwczovL2dpdGh1Yi5jb20vbmVhcnByb3RvY29sL25lYXItY29udHJhY3QtaGVscGVyKSByZXBvc2l0b3J5XG4gICAgICogQHBhcmFtIG5ld0FjY291bnRJZCBUaGUgbmFtZSBvZiB0aGUgTkVBUiBhY2NvdW50IHRvIGJlIGNyZWF0ZWRcbiAgICAgKiBAcGFyYW0gcHVibGljS2V5IFRoZSBwdWJsaWMga2V5IGZyb20gdGhlIG1hc3RlckFjY291bnQgdXNlZCB0byBjcmVhdGUgdGhpcyBhY2NvdW50XG4gICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XG4gICAgICovXG4gICAgY3JlYXRlQWNjb3VudChuZXdBY2NvdW50SWQsIHB1YmxpY0tleSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgKDAsIHByb3ZpZGVyc18xLmZldGNoSnNvbikoYCR7dGhpcy5oZWxwZXJVcmx9L2FjY291bnRgLCBKU09OLnN0cmluZ2lmeSh7IG5ld0FjY291bnRJZCwgbmV3QWNjb3VudFB1YmxpY0tleTogcHVibGljS2V5LnRvU3RyaW5nKCkgfSkpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlVybEFjY291bnRDcmVhdG9yID0gVXJsQWNjb3VudENyZWF0b3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_creator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_multisig.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_multisig.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountMultisig = void 0;\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst account_1 = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/constants.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/types.js\");\nconst { deployContract, functionCall } = transactions_1.actionCreators;\nvar MultisigCodeStatus;\n(function (MultisigCodeStatus) {\n    MultisigCodeStatus[MultisigCodeStatus[\"INVALID_CODE\"] = 0] = \"INVALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"VALID_CODE\"] = 1] = \"VALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"UNKNOWN_CODE\"] = 2] = \"UNKNOWN_CODE\";\n})(MultisigCodeStatus || (MultisigCodeStatus = {}));\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [constants_1.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    /**\n     * Constructs an instance of the `AccountMultisig` class.\n     * @param connection The NEAR connection object.\n     * @param accountId The NEAR account ID.\n     * @param options Additional options for the multisig account.\n     * @param options.storage Storage to store data related to multisig operations.\n     * @param options.onAddRequestResult Callback function to handle the result of adding a request.\n     */\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    /**\n     * Sign and send a transaction with the multisig account as the sender.\n     * @param receiverId - The NEAR account ID of the transaction receiver.\n     * @param actions - The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransactionWithAccount(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.signAndSendTransaction.call(this, { receiverId, actions });\n        });\n    }\n    /**\n     * Sign and send a multisig transaction to add a request and confirm it.\n     * @param options Options for the multisig transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransaction({ receiverId, actions }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const args = Buffer.from(JSON.stringify({\n                request: {\n                    receiver_id: receiverId,\n                    actions: convertActions(actions, accountId, receiverId)\n                }\n            }));\n            let result;\n            try {\n                result = yield _super.signAndSendTransaction.call(this, {\n                    receiverId: accountId,\n                    actions: [\n                        functionCall('add_request_and_confirm', args, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                    ]\n                });\n            }\n            catch (e) {\n                if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                    yield this.deleteUnconfirmedRequests();\n                    return yield this.signAndSendTransaction({ receiverId, actions });\n                }\n                throw e;\n            }\n            // TODO: Are following even needed? Seems like it throws on error already\n            if (!result.status) {\n                throw new Error('Request failed');\n            }\n            const status = Object.assign({}, result.status);\n            if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n                throw new Error('Request failed');\n            }\n            this.setRequest({\n                accountId,\n                actions,\n                requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n            });\n            if (this.onAddRequestResult) {\n                yield this.onAddRequestResult(result);\n            }\n            // NOTE there is no await on purpose to avoid blocking for 2fa\n            this.deleteUnconfirmedRequests();\n            return result;\n        });\n    }\n    /**\n     * This method submits a canary transaction that is expected to always fail in order to determine whether the contract currently has valid multisig state\n     * and whether it is initialized. The canary transaction attempts to delete a request at index u32_max and will go through if a request exists at that index.\n     * a u32_max + 1 and -1 value cannot be used for the canary due to expected u32 error thrown before deserialization attempt.\n     * @param contractBytes The bytecode of the multisig contract.\n     * @returns {Promise<{ codeStatus: MultisigCodeStatus; stateStatus: MultisigStateStatus }>} A promise that resolves to the status of the code and state.\n     */\n    checkMultisigCodeAndStateStatus(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const u32_max = 4294967295;\n            const validCodeStatusIfNoDeploy = contractBytes ? MultisigCodeStatus.UNKNOWN_CODE : MultisigCodeStatus.VALID_CODE;\n            try {\n                if (contractBytes) {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId, actions: [\n                            deployContract(contractBytes),\n                            functionCall('delete_request', { request_id: u32_max }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                        ]\n                    });\n                }\n                else {\n                    yield this.deleteRequest(u32_max);\n                }\n                return { codeStatus: MultisigCodeStatus.VALID_CODE, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n            }\n            catch (e) {\n                if (new RegExp(types_1.MultisigDeleteRequestRejectionError.CANNOT_DESERIALIZE_STATE).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.INVALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.MULTISIG_NOT_INITIALIZED).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.STATE_NOT_INITIALIZED };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.NO_SUCH_REQUEST).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.METHOD_NOT_FOUND).test(e && e.message)) {\n                    // not reachable if transaction included a deploy\n                    return { codeStatus: MultisigCodeStatus.INVALID_CODE, stateStatus: types_1.MultisigStateStatus.UNKNOWN_STATE };\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * Delete a multisig request by its ID.\n     * @param request_id The ID of the multisig request to be deleted.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deletion.\n     */\n    deleteRequest(request_id) {\n        return super.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [functionCall('delete_request', { request_id }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n        });\n    }\n    /**\n     * Delete all multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when all requests are deleted.\n     */\n    deleteAllRequests() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request_ids = yield this.getRequestIds();\n            if (request_ids.length) {\n                yield Promise.all(request_ids.map((id) => this.deleteRequest(id)));\n            }\n        });\n    }\n    /**\n     * Delete unconfirmed multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when unconfirmed requests are deleted.\n     */\n    deleteUnconfirmedRequests() {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Delete in batch, don't delete unexpired\n            // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n            const request_ids = yield this.getRequestIds();\n            const { requestId } = this.getRequest();\n            for (const requestIdToDelete of request_ids) {\n                if (requestIdToDelete == requestId) {\n                    continue;\n                }\n                try {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId,\n                        actions: [functionCall('delete_request', { request_id: requestIdToDelete }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n                    });\n                }\n                catch (e) {\n                    utils_1.Logger.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n                }\n            }\n        });\n    }\n    // helpers\n    getRequestIds() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Read requests from state to allow filtering by expiration time\n            // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n            return this.viewFunction({\n                contractId: this.accountId,\n                methodName: 'list_request_ids',\n            });\n        });\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(constants_1.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[constants_1.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(constants_1.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[constants_1.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: constants_1.MULTISIG_ALLOWANCE.toString(),\n                method_names: constants_1.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_multisig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/connection.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/connection.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Connection = void 0;\nconst signers_1 = __webpack_require__(/*! @near-js/signers */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/index.js\");\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/index.js\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider(Object.assign({}, config.args));\n        case 'FailoverRpcProvider': {\n            const providers = ((config === null || config === void 0 ? void 0 : config.args) || []).map((arg) => new providers_1.JsonRpcProvider(arg));\n            return new providers_1.FailoverRpcProvider(providers);\n        }\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signers_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    constructor(networkId, provider, signer, jsvmAccountId) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n        this.jsvmAccountId = jsvmAccountId;\n    }\n    getConnection() {\n        return this;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer, config.jsvmAccountId);\n    }\n}\nexports.Connection = Connection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9jb25uZWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixrQkFBa0IsbUJBQU8sQ0FBQyxpSEFBa0I7QUFDNUMsb0JBQW9CLG1CQUFPLENBQUMscUhBQW9CO0FBQ2hEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVGQUF1RjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxZQUFZO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsWUFBWTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9saWIvY29ubmVjdGlvbi5qcz82M2I4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25uZWN0aW9uID0gdm9pZCAwO1xuY29uc3Qgc2lnbmVyc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3NpZ25lcnNcIik7XG5jb25zdCBwcm92aWRlcnNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9wcm92aWRlcnNcIik7XG4vKipcbiAqIEBwYXJhbSBjb25maWcgQ29udGFpbnMgY29ubmVjdGlvbiBpbmZvIGRldGFpbHNcbiAqIEByZXR1cm5zIHtQcm92aWRlcn1cbiAqL1xuZnVuY3Rpb24gZ2V0UHJvdmlkZXIoY29uZmlnKSB7XG4gICAgc3dpdGNoIChjb25maWcudHlwZSkge1xuICAgICAgICBjYXNlIHVuZGVmaW5lZDpcbiAgICAgICAgICAgIHJldHVybiBjb25maWc7XG4gICAgICAgIGNhc2UgJ0pzb25ScGNQcm92aWRlcic6IHJldHVybiBuZXcgcHJvdmlkZXJzXzEuSnNvblJwY1Byb3ZpZGVyKE9iamVjdC5hc3NpZ24oe30sIGNvbmZpZy5hcmdzKSk7XG4gICAgICAgIGNhc2UgJ0ZhaWxvdmVyUnBjUHJvdmlkZXInOiB7XG4gICAgICAgICAgICBjb25zdCBwcm92aWRlcnMgPSAoKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5hcmdzKSB8fCBbXSkubWFwKChhcmcpID0+IG5ldyBwcm92aWRlcnNfMS5Kc29uUnBjUHJvdmlkZXIoYXJnKSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IHByb3ZpZGVyc18xLkZhaWxvdmVyUnBjUHJvdmlkZXIocHJvdmlkZXJzKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gcHJvdmlkZXIgdHlwZSAke2NvbmZpZy50eXBlfWApO1xuICAgIH1cbn1cbi8qKlxuICogQHBhcmFtIGNvbmZpZyBDb250YWlucyBjb25uZWN0aW9uIGluZm8gZGV0YWlsc1xuICogQHJldHVybnMge1NpZ25lcn1cbiAqL1xuZnVuY3Rpb24gZ2V0U2lnbmVyKGNvbmZpZykge1xuICAgIHN3aXRjaCAoY29uZmlnLnR5cGUpIHtcbiAgICAgICAgY2FzZSB1bmRlZmluZWQ6XG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICBjYXNlICdJbk1lbW9yeVNpZ25lcic6IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgc2lnbmVyc18xLkluTWVtb3J5U2lnbmVyKGNvbmZpZy5rZXlTdG9yZSk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDogdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHNpZ25lciB0eXBlICR7Y29uZmlnLnR5cGV9YCk7XG4gICAgfVxufVxuLyoqXG4gKiBDb25uZWN0cyBhbiBhY2NvdW50IHRvIGEgZ2l2ZW4gbmV0d29yayB2aWEgYSBnaXZlbiBwcm92aWRlclxuICovXG5jbGFzcyBDb25uZWN0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihuZXR3b3JrSWQsIHByb3ZpZGVyLCBzaWduZXIsIGpzdm1BY2NvdW50SWQpIHtcbiAgICAgICAgdGhpcy5uZXR3b3JrSWQgPSBuZXR3b3JrSWQ7XG4gICAgICAgIHRoaXMucHJvdmlkZXIgPSBwcm92aWRlcjtcbiAgICAgICAgdGhpcy5zaWduZXIgPSBzaWduZXI7XG4gICAgICAgIHRoaXMuanN2bUFjY291bnRJZCA9IGpzdm1BY2NvdW50SWQ7XG4gICAgfVxuICAgIGdldENvbm5lY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY29uZmlnIENvbnRhaW5zIGNvbm5lY3Rpb24gaW5mbyBkZXRhaWxzXG4gICAgICovXG4gICAgc3RhdGljIGZyb21Db25maWcoY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gZ2V0UHJvdmlkZXIoY29uZmlnLnByb3ZpZGVyKTtcbiAgICAgICAgY29uc3Qgc2lnbmVyID0gZ2V0U2lnbmVyKGNvbmZpZy5zaWduZXIpO1xuICAgICAgICByZXR1cm4gbmV3IENvbm5lY3Rpb24oY29uZmlnLm5ldHdvcmtJZCwgcHJvdmlkZXIsIHNpZ25lciwgY29uZmlnLmpzdm1BY2NvdW50SWQpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29ubmVjdGlvbiA9IENvbm5lY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/connection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/constants.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/constants.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = BigInt((0, utils_1.parseNearAmount)('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = BigInt('100000000000000');\nexports.MULTISIG_DEPOSIT = BigInt('0');\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDLEdBQUcsK0JBQStCLEdBQUcsd0JBQXdCLEdBQUcsb0JBQW9CLEdBQUcsMEJBQTBCLEdBQUcsNEJBQTRCO0FBQ2hMLGdCQUFnQixtQkFBTyxDQUFDLDZHQUFnQjtBQUN4Qyw0QkFBNEI7QUFDNUIsMEJBQTBCO0FBQzFCO0FBQ0Esb0JBQW9CO0FBQ3BCLHdCQUF3QjtBQUN4QiwrQkFBK0I7QUFDL0IsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbnN0YW50cy5qcz8yOGRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NVUxUSVNJR19DT05GSVJNX01FVEhPRFMgPSBleHBvcnRzLk1VTFRJU0lHX0NIQU5HRV9NRVRIT0RTID0gZXhwb3J0cy5NVUxUSVNJR19ERVBPU0lUID0gZXhwb3J0cy5NVUxUSVNJR19HQVMgPSBleHBvcnRzLk1VTFRJU0lHX0FMTE9XQU5DRSA9IGV4cG9ydHMuTVVMVElTSUdfU1RPUkFHRV9LRVkgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3V0aWxzXCIpO1xuZXhwb3J0cy5NVUxUSVNJR19TVE9SQUdFX0tFWSA9ICdfX211bHRpc2lnUmVxdWVzdCc7XG5leHBvcnRzLk1VTFRJU0lHX0FMTE9XQU5DRSA9IEJpZ0ludCgoMCwgdXRpbHNfMS5wYXJzZU5lYXJBbW91bnQpKCcxJykpO1xuLy8gVE9ETzogRGlmZmVyZW50IGdhcyB2YWx1ZSBmb3IgZGlmZmVyZW50IHJlcXVlc3RzIChjYW4gcmVkdWNlIGdhcyB1c2FnZSBkcmFtYXRpY2FsbHkpXG5leHBvcnRzLk1VTFRJU0lHX0dBUyA9IEJpZ0ludCgnMTAwMDAwMDAwMDAwMDAwJyk7XG5leHBvcnRzLk1VTFRJU0lHX0RFUE9TSVQgPSBCaWdJbnQoJzAnKTtcbmV4cG9ydHMuTVVMVElTSUdfQ0hBTkdFX01FVEhPRFMgPSBbJ2FkZF9yZXF1ZXN0JywgJ2FkZF9yZXF1ZXN0X2FuZF9jb25maXJtJywgJ2RlbGV0ZV9yZXF1ZXN0JywgJ2NvbmZpcm0nXTtcbmV4cG9ydHMuTVVMVElTSUdfQ09ORklSTV9NRVRIT0RTID0gWydjb25maXJtJ107XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/contract.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/contract.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Contract = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst local_view_execution_1 = __webpack_require__(/*! ./local-view-execution */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/index.js\");\nconst is_my_json_valid_1 = __importDefault(__webpack_require__(/*! is-my-json-valid */ \"(ssr)/./node_modules/is-my-json-valid/index.js\"));\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"(ssr)/./node_modules/depd/index.js\"));\nconst near_abi_1 = __webpack_require__(/*! near-abi */ \"(ssr)/./node_modules/near-abi/lib/index.js\");\nconst account_1 = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/errors.js\");\nconst utils_2 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/utils.js\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        },\n    }[name];\n}\nfunction validateArguments(args, abiFunction, abiRoot) {\n    var _a;\n    if (!isObject(args))\n        return;\n    if (abiFunction.params &&\n        abiFunction.params.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.params.serialization_type);\n    }\n    if (abiFunction.result &&\n        abiFunction.result.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.result.serialization_type);\n    }\n    const params = ((_a = abiFunction.params) === null || _a === void 0 ? void 0 : _a.args) || [];\n    for (const p of params) {\n        const arg = args[p.name];\n        const typeSchema = p.type_schema;\n        typeSchema.definitions = abiRoot.body.root_schema.definitions;\n        const validate = (0, is_my_json_valid_1.default)(typeSchema);\n        const valid = validate(arg);\n        if (!valid) {\n            throw new errors_1.ArgumentSchemaError(p.name, validate.errors);\n        }\n    }\n    // Check there are no extra unknown arguments passed\n    for (const argName of Object.keys(args)) {\n        const param = params.find((p) => p.name === argName);\n        if (!param) {\n            throw new errors_1.UnknownArgumentError(argName, params.map((p) => p.name));\n        }\n    }\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === \"[object Object]\";\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#contract](https://docs.near.org/tools/near-api-js/quick-reference#contract)\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(connection, contractId, options) {\n        this.connection = connection.getConnection();\n        if (connection instanceof account_1.Account) {\n            const deprecate = (0, depd_1.default)(\"new Contract(account, contractId, options)\");\n            deprecate(\"use `new Contract(connection, contractId, options)` instead\");\n            this.account = connection;\n        }\n        this.contractId = contractId;\n        this.lve = new local_view_execution_1.LocalViewExecution(connection);\n        const { viewMethods = [], changeMethods = [], abi: abiRoot, useLocalViewExecution, } = options;\n        let viewMethodsWithAbi = viewMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        let changeMethodsWithAbi = changeMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        if (abiRoot) {\n            if (viewMethodsWithAbi.length > 0 ||\n                changeMethodsWithAbi.length > 0) {\n                throw new errors_1.ConflictingOptions();\n            }\n            viewMethodsWithAbi = abiRoot.body.functions\n                .filter((m) => m.kind === near_abi_1.AbiFunctionKind.View)\n                .map((m) => ({ name: m.name, abi: m }));\n            changeMethodsWithAbi = abiRoot.body.functions\n                .filter((methodAbi) => methodAbi.kind === near_abi_1.AbiFunctionKind.Call)\n                .map((methodAbi) => ({ name: methodAbi.name, abi: methodAbi }));\n        }\n        viewMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (args = {}, options = {}, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length ||\n                        !(isObject(args) || isUint8Array(args)) ||\n                        !isObject(options)) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (abi) {\n                        validateArguments(args, abi, abiRoot);\n                    }\n                    if (useLocalViewExecution) {\n                        try {\n                            return yield this.lve.viewFunction(Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                        }\n                        catch (error) {\n                            utils_1.Logger.warn(`Local view execution failed with: \"${error.message}\"`);\n                            utils_1.Logger.warn(`Fallback to normal RPC call`);\n                        }\n                    }\n                    if (this.account) {\n                        return this.account.viewFunction(Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                    }\n                    return (0, utils_2.viewFunction)(this.connection, Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                })),\n            });\n        });\n        changeMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (...args) => __awaiter(this, void 0, void 0, function* () {\n                    if (args.length &&\n                        (args.length > 3 ||\n                            !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = (0, depd_1.default)(\"contract.methodName(args, gas, amount)\");\n                        deprecate(\"use `contract.methodName({ signerAccount, args, gas?, amount?, callbackUrl?, meta? })` instead\");\n                        args[0] = {\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2],\n                        };\n                    }\n                    if (abi) {\n                        validateArguments(args[0].args, abi, abiRoot);\n                    }\n                    return this._changeMethod(Object.assign({ methodName: name }, args[0]));\n                })),\n            });\n        });\n    }\n    _changeMethod({ signerAccount, args, methodName, gas, amount, meta, callbackUrl, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateBNLike({ gas, amount });\n            const account = this.account || signerAccount;\n            if (!account)\n                throw new Error(`signerAccount must be specified`);\n            const rawResult = yield account.functionCall({\n                contractId: this.contractId,\n                methodName,\n                args,\n                gas,\n                attachedDeposit: amount,\n                walletMeta: meta,\n                walletCallbackUrl: callbackUrl,\n            });\n            return (0, utils_1.getTransactionLastResult)(rawResult);\n        });\n    }\n}\nexports.Contract = Contract;\n/**\n * Throws if an argument is not in BigInt format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = \"number, decimal string or BigInt\";\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && typeof argValue !== \"bigint\" && isNaN(argValue)) {\n            throw new types_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/contract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/errors.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/errors.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConflictingOptions = exports.ArgumentSchemaError = exports.UnknownArgumentError = exports.UnsupportedSerializationError = void 0;\nclass UnsupportedSerializationError extends Error {\n    constructor(methodName, serializationType) {\n        super(`Contract method '${methodName}' is using an unsupported serialization type ${serializationType}`);\n    }\n}\nexports.UnsupportedSerializationError = UnsupportedSerializationError;\nclass UnknownArgumentError extends Error {\n    constructor(actualArgName, expectedArgNames) {\n        super(`Unrecognized argument '${actualArgName}', expected '${JSON.stringify(expectedArgNames)}'`);\n    }\n}\nexports.UnknownArgumentError = UnknownArgumentError;\nclass ArgumentSchemaError extends Error {\n    constructor(argName, errors) {\n        super(`Argument '${argName}' does not conform to the specified ABI schema: '${JSON.stringify(errors)}'`);\n    }\n}\nexports.ArgumentSchemaError = ArgumentSchemaError;\nclass ConflictingOptions extends Error {\n    constructor() {\n        super('Conflicting contract method options have been passed. You can either specify ABI or a list of view/call methods.');\n    }\n}\nexports.ConflictingOptions = ConflictingOptions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsMkJBQTJCLEdBQUcsNEJBQTRCLEdBQUcscUNBQXFDO0FBQy9IO0FBQ0E7QUFDQSxrQ0FBa0MsV0FBVywrQ0FBK0Msa0JBQWtCO0FBQzlHO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLHdDQUF3QyxjQUFjLGVBQWUsaUNBQWlDO0FBQ3RHO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLDJCQUEyQixRQUFRLG1EQUFtRCx1QkFBdUI7QUFDN0c7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2Vycm9ycy5qcz84ZDFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25mbGljdGluZ09wdGlvbnMgPSBleHBvcnRzLkFyZ3VtZW50U2NoZW1hRXJyb3IgPSBleHBvcnRzLlVua25vd25Bcmd1bWVudEVycm9yID0gZXhwb3J0cy5VbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvciA9IHZvaWQgMDtcbmNsYXNzIFVuc3VwcG9ydGVkU2VyaWFsaXphdGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1ldGhvZE5hbWUsIHNlcmlhbGl6YXRpb25UeXBlKSB7XG4gICAgICAgIHN1cGVyKGBDb250cmFjdCBtZXRob2QgJyR7bWV0aG9kTmFtZX0nIGlzIHVzaW5nIGFuIHVuc3VwcG9ydGVkIHNlcmlhbGl6YXRpb24gdHlwZSAke3NlcmlhbGl6YXRpb25UeXBlfWApO1xuICAgIH1cbn1cbmV4cG9ydHMuVW5zdXBwb3J0ZWRTZXJpYWxpemF0aW9uRXJyb3IgPSBVbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvcjtcbmNsYXNzIFVua25vd25Bcmd1bWVudEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGFjdHVhbEFyZ05hbWUsIGV4cGVjdGVkQXJnTmFtZXMpIHtcbiAgICAgICAgc3VwZXIoYFVucmVjb2duaXplZCBhcmd1bWVudCAnJHthY3R1YWxBcmdOYW1lfScsIGV4cGVjdGVkICcke0pTT04uc3RyaW5naWZ5KGV4cGVjdGVkQXJnTmFtZXMpfSdgKTtcbiAgICB9XG59XG5leHBvcnRzLlVua25vd25Bcmd1bWVudEVycm9yID0gVW5rbm93bkFyZ3VtZW50RXJyb3I7XG5jbGFzcyBBcmd1bWVudFNjaGVtYUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGFyZ05hbWUsIGVycm9ycykge1xuICAgICAgICBzdXBlcihgQXJndW1lbnQgJyR7YXJnTmFtZX0nIGRvZXMgbm90IGNvbmZvcm0gdG8gdGhlIHNwZWNpZmllZCBBQkkgc2NoZW1hOiAnJHtKU09OLnN0cmluZ2lmeShlcnJvcnMpfSdgKTtcbiAgICB9XG59XG5leHBvcnRzLkFyZ3VtZW50U2NoZW1hRXJyb3IgPSBBcmd1bWVudFNjaGVtYUVycm9yO1xuY2xhc3MgQ29uZmxpY3RpbmdPcHRpb25zIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignQ29uZmxpY3RpbmcgY29udHJhY3QgbWV0aG9kIG9wdGlvbnMgaGF2ZSBiZWVuIHBhc3NlZC4gWW91IGNhbiBlaXRoZXIgc3BlY2lmeSBBQkkgb3IgYSBsaXN0IG9mIHZpZXcvY2FsbCBtZXRob2RzLicpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29uZmxpY3RpbmdPcHRpb25zID0gQ29uZmxpY3RpbmdPcHRpb25zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = exports.UnsupportedSerializationError = exports.UnknownArgumentError = exports.ConflictingOptions = exports.ArgumentSchemaError = exports.Contract = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = exports.Connection = exports.AccountMultisig = exports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = exports.Account2FA = exports.Account = void 0;\nvar account_1 = __webpack_require__(/*! ./account */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account.js\");\nObject.defineProperty(exports, \"Account\", ({ enumerable: true, get: function () { return account_1.Account; } }));\nvar account_2fa_1 = __webpack_require__(/*! ./account_2fa */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_2fa.js\");\nObject.defineProperty(exports, \"Account2FA\", ({ enumerable: true, get: function () { return account_2fa_1.Account2FA; } }));\nvar account_creator_1 = __webpack_require__(/*! ./account_creator */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_creator.js\");\nObject.defineProperty(exports, \"AccountCreator\", ({ enumerable: true, get: function () { return account_creator_1.AccountCreator; } }));\nObject.defineProperty(exports, \"LocalAccountCreator\", ({ enumerable: true, get: function () { return account_creator_1.LocalAccountCreator; } }));\nObject.defineProperty(exports, \"UrlAccountCreator\", ({ enumerable: true, get: function () { return account_creator_1.UrlAccountCreator; } }));\nvar account_multisig_1 = __webpack_require__(/*! ./account_multisig */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/account_multisig.js\");\nObject.defineProperty(exports, \"AccountMultisig\", ({ enumerable: true, get: function () { return account_multisig_1.AccountMultisig; } }));\nvar connection_1 = __webpack_require__(/*! ./connection */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/connection.js\");\nObject.defineProperty(exports, \"Connection\", ({ enumerable: true, get: function () { return connection_1.Connection; } }));\nvar constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/constants.js\");\nObject.defineProperty(exports, \"MULTISIG_STORAGE_KEY\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_STORAGE_KEY; } }));\nObject.defineProperty(exports, \"MULTISIG_ALLOWANCE\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_ALLOWANCE; } }));\nObject.defineProperty(exports, \"MULTISIG_GAS\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_GAS; } }));\nObject.defineProperty(exports, \"MULTISIG_DEPOSIT\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_DEPOSIT; } }));\nObject.defineProperty(exports, \"MULTISIG_CHANGE_METHODS\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_CHANGE_METHODS; } }));\nObject.defineProperty(exports, \"MULTISIG_CONFIRM_METHODS\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_CONFIRM_METHODS; } }));\nvar contract_1 = __webpack_require__(/*! ./contract */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/contract.js\");\nObject.defineProperty(exports, \"Contract\", ({ enumerable: true, get: function () { return contract_1.Contract; } }));\nvar errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/errors.js\");\nObject.defineProperty(exports, \"ArgumentSchemaError\", ({ enumerable: true, get: function () { return errors_1.ArgumentSchemaError; } }));\nObject.defineProperty(exports, \"ConflictingOptions\", ({ enumerable: true, get: function () { return errors_1.ConflictingOptions; } }));\nObject.defineProperty(exports, \"UnknownArgumentError\", ({ enumerable: true, get: function () { return errors_1.UnknownArgumentError; } }));\nObject.defineProperty(exports, \"UnsupportedSerializationError\", ({ enumerable: true, get: function () { return errors_1.UnsupportedSerializationError; } }));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/types.js\");\nObject.defineProperty(exports, \"MultisigDeleteRequestRejectionError\", ({ enumerable: true, get: function () { return types_1.MultisigDeleteRequestRejectionError; } }));\nObject.defineProperty(exports, \"MultisigStateStatus\", ({ enumerable: true, get: function () { return types_1.MultisigStateStatus; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQ0FBMkMsR0FBRyxxQ0FBcUMsR0FBRyw0QkFBNEIsR0FBRywwQkFBMEIsR0FBRywyQkFBMkIsR0FBRyxnQkFBZ0IsR0FBRyxnQ0FBZ0MsR0FBRywrQkFBK0IsR0FBRyx3QkFBd0IsR0FBRyxvQkFBb0IsR0FBRywwQkFBMEIsR0FBRyw0QkFBNEIsR0FBRyxrQkFBa0IsR0FBRyx1QkFBdUIsR0FBRyx5QkFBeUIsR0FBRywyQkFBMkIsR0FBRyxzQkFBc0IsR0FBRyxrQkFBa0IsR0FBRyxlQUFlO0FBQzFqQixnQkFBZ0IsbUJBQU8sQ0FBQyw2R0FBVztBQUNuQywyQ0FBMEMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDL0csb0JBQW9CLG1CQUFPLENBQUMscUhBQWU7QUFDM0MsOENBQTZDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQ3pILHdCQUF3QixtQkFBTyxDQUFDLDZIQUFtQjtBQUNuRCxrREFBaUQsRUFBRSxxQ0FBcUMsNENBQTRDLEVBQUM7QUFDckksdURBQXNELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQy9JLHFEQUFvRCxFQUFFLHFDQUFxQywrQ0FBK0MsRUFBQztBQUMzSSx5QkFBeUIsbUJBQU8sQ0FBQywrSEFBb0I7QUFDckQsbURBQWtELEVBQUUscUNBQXFDLDhDQUE4QyxFQUFDO0FBQ3hJLG1CQUFtQixtQkFBTyxDQUFDLG1IQUFjO0FBQ3pDLDhDQUE2QyxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUN4SCxrQkFBa0IsbUJBQU8sQ0FBQyxpSEFBYTtBQUN2Qyx3REFBdUQsRUFBRSxxQ0FBcUMsNENBQTRDLEVBQUM7QUFDM0ksc0RBQXFELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3ZJLGdEQUErQyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMzSCxvREFBbUQsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDbkksMkRBQTBELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQ2pKLDREQUEyRCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQztBQUNuSixpQkFBaUIsbUJBQU8sQ0FBQywrR0FBWTtBQUNyQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDbEgsZUFBZSxtQkFBTyxDQUFDLDJHQUFVO0FBQ2pDLHVEQUFzRCxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUN0SSxzREFBcUQsRUFBRSxxQ0FBcUMsdUNBQXVDLEVBQUM7QUFDcEksd0RBQXVELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3hJLGlFQUFnRSxFQUFFLHFDQUFxQyxrREFBa0QsRUFBQztBQUMxSixjQUFjLG1CQUFPLENBQUMseUdBQVM7QUFDL0IsdUVBQXNFLEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQ3JLLHVEQUFzRCxFQUFFLHFDQUFxQyx1Q0FBdUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9pbmRleC5qcz83NGFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aXNpZ1N0YXRlU3RhdHVzID0gZXhwb3J0cy5NdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvciA9IGV4cG9ydHMuVW5zdXBwb3J0ZWRTZXJpYWxpemF0aW9uRXJyb3IgPSBleHBvcnRzLlVua25vd25Bcmd1bWVudEVycm9yID0gZXhwb3J0cy5Db25mbGljdGluZ09wdGlvbnMgPSBleHBvcnRzLkFyZ3VtZW50U2NoZW1hRXJyb3IgPSBleHBvcnRzLkNvbnRyYWN0ID0gZXhwb3J0cy5NVUxUSVNJR19DT05GSVJNX01FVEhPRFMgPSBleHBvcnRzLk1VTFRJU0lHX0NIQU5HRV9NRVRIT0RTID0gZXhwb3J0cy5NVUxUSVNJR19ERVBPU0lUID0gZXhwb3J0cy5NVUxUSVNJR19HQVMgPSBleHBvcnRzLk1VTFRJU0lHX0FMTE9XQU5DRSA9IGV4cG9ydHMuTVVMVElTSUdfU1RPUkFHRV9LRVkgPSBleHBvcnRzLkNvbm5lY3Rpb24gPSBleHBvcnRzLkFjY291bnRNdWx0aXNpZyA9IGV4cG9ydHMuVXJsQWNjb3VudENyZWF0b3IgPSBleHBvcnRzLkxvY2FsQWNjb3VudENyZWF0b3IgPSBleHBvcnRzLkFjY291bnRDcmVhdG9yID0gZXhwb3J0cy5BY2NvdW50MkZBID0gZXhwb3J0cy5BY2NvdW50ID0gdm9pZCAwO1xudmFyIGFjY291bnRfMSA9IHJlcXVpcmUoXCIuL2FjY291bnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBY2NvdW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50XzEuQWNjb3VudDsgfSB9KTtcbnZhciBhY2NvdW50XzJmYV8xID0gcmVxdWlyZShcIi4vYWNjb3VudF8yZmFcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBY2NvdW50MkZBXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50XzJmYV8xLkFjY291bnQyRkE7IH0gfSk7XG52YXIgYWNjb3VudF9jcmVhdG9yXzEgPSByZXF1aXJlKFwiLi9hY2NvdW50X2NyZWF0b3JcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBY2NvdW50Q3JlYXRvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudF9jcmVhdG9yXzEuQWNjb3VudENyZWF0b3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJMb2NhbEFjY291bnRDcmVhdG9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50X2NyZWF0b3JfMS5Mb2NhbEFjY291bnRDcmVhdG9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVXJsQWNjb3VudENyZWF0b3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRfY3JlYXRvcl8xLlVybEFjY291bnRDcmVhdG9yOyB9IH0pO1xudmFyIGFjY291bnRfbXVsdGlzaWdfMSA9IHJlcXVpcmUoXCIuL2FjY291bnRfbXVsdGlzaWdcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBY2NvdW50TXVsdGlzaWdcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRfbXVsdGlzaWdfMS5BY2NvdW50TXVsdGlzaWc7IH0gfSk7XG52YXIgY29ubmVjdGlvbl8xID0gcmVxdWlyZShcIi4vY29ubmVjdGlvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbm5lY3Rpb25fMS5Db25uZWN0aW9uOyB9IH0pO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTVVMVElTSUdfU1RPUkFHRV9LRVlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLk1VTFRJU0lHX1NUT1JBR0VfS0VZOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTVVMVElTSUdfQUxMT1dBTkNFXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25zdGFudHNfMS5NVUxUSVNJR19BTExPV0FOQ0U7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNVUxUSVNJR19HQVNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLk1VTFRJU0lHX0dBUzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1VTFRJU0lHX0RFUE9TSVRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLk1VTFRJU0lHX0RFUE9TSVQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNVUxUSVNJR19DSEFOR0VfTUVUSE9EU1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuTVVMVElTSUdfQ0hBTkdFX01FVEhPRFM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNVUxUSVNJR19DT05GSVJNX01FVEhPRFNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLk1VTFRJU0lHX0NPTkZJUk1fTUVUSE9EUzsgfSB9KTtcbnZhciBjb250cmFjdF8xID0gcmVxdWlyZShcIi4vY29udHJhY3RcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb250cmFjdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29udHJhY3RfMS5Db250cmFjdDsgfSB9KTtcbnZhciBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFyZ3VtZW50U2NoZW1hRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLkFyZ3VtZW50U2NoZW1hRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb25mbGljdGluZ09wdGlvbnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLkNvbmZsaWN0aW5nT3B0aW9uczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVua25vd25Bcmd1bWVudEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5Vbmtub3duQXJndW1lbnRFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVuc3VwcG9ydGVkU2VyaWFsaXphdGlvbkVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5VbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvcjsgfSB9KTtcbnZhciB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZXNfMS5NdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bHRpc2lnU3RhdGVTdGF0dXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVzXzEuTXVsdGlzaWdTdGF0ZVN0YXR1czsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/index.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/index.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LocalViewExecution = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst storage_1 = __webpack_require__(/*! ./storage */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/storage.js\");\nconst runtime_1 = __webpack_require__(/*! ./runtime */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/runtime.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/utils.js\");\nclass LocalViewExecution {\n    constructor(connection) {\n        this.connection = connection.getConnection();\n        this.storage = new storage_1.Storage();\n    }\n    fetchContractCode(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.connection.provider.query(Object.assign({ request_type: 'view_code', account_id: contractId }, blockQuery));\n            return result.code_base64;\n        });\n    }\n    fetchContractState(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (0, utils_2.viewState)(this.connection, contractId, '', blockQuery);\n        });\n    }\n    fetch(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const block = yield this.connection.provider.block(blockQuery);\n            const blockHash = block.header.hash;\n            const blockHeight = block.header.height;\n            const blockTimestamp = block.header.timestamp;\n            const contractCode = yield this.fetchContractCode(contractId, blockQuery);\n            const contractState = yield this.fetchContractState(contractId, blockQuery);\n            return {\n                blockHash,\n                blockHeight,\n                blockTimestamp,\n                contractCode,\n                contractState,\n            };\n        });\n    }\n    loadOrFetch(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = this.storage.load(blockQuery);\n            if (stored) {\n                return stored;\n            }\n            const _a = yield this.fetch(contractId, blockQuery), { blockHash } = _a, fetched = __rest(_a, [\"blockHash\"]);\n            this.storage.save(blockHash, fetched);\n            return fetched;\n        });\n    }\n    /**\n     * Calls a view function on a contract, fetching the contract code and state if needed.\n     * @param options Options for calling the view function.\n     * @param options.contractId The contract account ID.\n     * @param options.methodName The name of the view function to call.\n     * @param options.args The arguments to pass to the view function.\n     * @param options.blockQuery The block query options.\n     * @returns {Promise<any>} - A promise that resolves to the result of the view function.\n     */\n    viewFunction(_a) {\n        var { contractId, methodName, args = {}, blockQuery = { finality: 'optimistic' } } = _a, ignored = __rest(_a, [\"contractId\", \"methodName\", \"args\", \"blockQuery\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const methodArgs = JSON.stringify(args);\n            const { contractCode, contractState, blockHeight, blockTimestamp } = yield this.loadOrFetch(contractId, blockQuery);\n            const runtime = new runtime_1.Runtime({ contractId, contractCode, contractState, blockHeight, blockTimestamp, methodArgs });\n            const { result, logs } = yield runtime.execute(methodName);\n            if (logs) {\n                (0, utils_1.printTxOutcomeLogs)({ contractId, logs });\n            }\n            return JSON.parse(Buffer.from(result).toString());\n        });\n    }\n}\nexports.LocalViewExecution = LocalViewExecution;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/runtime.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/runtime.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Runtime = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst notImplemented = (name) => () => {\n    throw new Error('method not implemented: ' + name);\n};\nconst prohibitedInView = (name) => () => {\n    throw new Error('method not available for view calls: ' + name);\n};\nclass Runtime {\n    constructor(_a) {\n        var { contractCode } = _a, context = __rest(_a, [\"contractCode\"]);\n        this.context = context;\n        this.wasm = this.prepareWASM(Buffer.from(contractCode, 'base64'));\n        this.memory = new WebAssembly.Memory({ initial: 1024, maximum: 2048 });\n        this.registers = {};\n        this.logs = [];\n        this.result = Buffer.from([]);\n    }\n    readUTF16CStr(ptr) {\n        const arr = [];\n        const mem = new Uint16Array(this.memory.buffer);\n        let key = Number(ptr) / 2;\n        while (mem[key] != 0) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(Uint16Array.from(arr).buffer).toString('ucs2');\n    }\n    readUTF8CStr(len, ptr) {\n        const arr = [];\n        const mem = new Uint8Array(this.memory.buffer);\n        let key = Number(ptr);\n        for (let i = 0; i < len && mem[key] != 0; i++) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(arr).toString('utf8');\n    }\n    storageRead(keyLen, keyPtr) {\n        const storageKey = Buffer.from(new Uint8Array(this.memory.buffer, Number(keyPtr), Number(keyLen)));\n        const stateVal = this.context.contractState.filter((obj) => Buffer.compare(obj.key, storageKey) === 0).map((obj) => obj.value);\n        if (stateVal.length === 0)\n            return null;\n        return stateVal.length > 1 ? stateVal : stateVal[0];\n    }\n    prepareWASM(input) {\n        const parts = [];\n        const magic = input.subarray(0, 4);\n        if (magic.toString('utf8') !== '\\0asm') {\n            throw new Error('Invalid magic number');\n        }\n        const version = input.readUInt32LE(4);\n        if (version != 1) {\n            throw new Error('Invalid version: ' + version);\n        }\n        let offset = 8;\n        parts.push(input.subarray(0, offset));\n        function decodeLEB128() {\n            let result = 0;\n            let shift = 0;\n            let byte;\n            do {\n                byte = input[offset++];\n                result |= (byte & 0x7f) << shift;\n                shift += 7;\n            } while (byte & 0x80);\n            return result;\n        }\n        function decodeLimits() {\n            const flags = input[offset++];\n            const hasMax = flags & 0x1;\n            const initial = decodeLEB128();\n            const max = hasMax ? decodeLEB128() : null;\n            return { initial, max };\n        }\n        function decodeString() {\n            const length = decodeLEB128();\n            const result = input.subarray(offset, offset + length);\n            offset += length;\n            return result.toString('utf8');\n        }\n        function encodeLEB128(value) {\n            const result = [];\n            do {\n                let byte = value & 0x7f;\n                value >>= 7;\n                if (value !== 0) {\n                    byte |= 0x80;\n                }\n                result.push(byte);\n            } while (value !== 0);\n            return Buffer.from(result);\n        }\n        function encodeString(value) {\n            const result = Buffer.from(value, 'utf8');\n            return Buffer.concat([encodeLEB128(result.length), result]);\n        }\n        do {\n            const sectionStart = offset;\n            const sectionId = input.readUInt8(offset);\n            offset++;\n            const sectionSize = decodeLEB128();\n            const sectionEnd = offset + sectionSize;\n            if (sectionId == 5) {\n                // Memory section\n                // Make sure it's empty and only imported memory is used\n                parts.push(Buffer.from([5, 1, 0]));\n            }\n            else if (sectionId == 2) {\n                // Import section\n                const sectionParts = [];\n                const numImports = decodeLEB128();\n                for (let i = 0; i < numImports; i++) {\n                    const importStart = offset;\n                    decodeString();\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    let skipImport = false;\n                    switch (kind) {\n                        case 0:\n                            // Function import\n                            decodeLEB128(); // index\n                            break;\n                        case 1:\n                            // Table import\n                            offset++; // type\n                            decodeLimits();\n                            break;\n                        case 2:\n                            // Memory import\n                            decodeLimits();\n                            // NOTE: existing memory import is removed (so no need to add it to sectionParts)\n                            skipImport = true;\n                            break;\n                        case 3:\n                            // Global import\n                            offset++; // type\n                            offset++; // mutability\n                            break;\n                        default:\n                            throw new Error('Invalid import kind: ' + kind);\n                    }\n                    if (!skipImport) {\n                        sectionParts.push(input.subarray(importStart, offset));\n                    }\n                }\n                const importMemory = Buffer.concat([\n                    encodeString('env'),\n                    encodeString('memory'),\n                    Buffer.from([2]),\n                    Buffer.from([0]),\n                    encodeLEB128(1),\n                ]);\n                sectionParts.push(importMemory);\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([2]),\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else if (sectionId == 7) {\n                // Export section\n                const sectionParts = [];\n                const numExports = decodeLEB128();\n                for (let i = 0; i < numExports; i++) {\n                    const exportStart = offset;\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    decodeLEB128();\n                    if (kind !== 2) {\n                        // Pass through all exports except memory\n                        sectionParts.push(input.subarray(exportStart, offset));\n                    }\n                }\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([7]),\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else {\n                parts.push(input.subarray(sectionStart, sectionEnd));\n            }\n            offset = sectionEnd;\n        } while (offset < input.length);\n        return Buffer.concat(parts);\n    }\n    // Host functions\n    getRegisterLength(registerId) {\n        return BigInt(this.registers[registerId.toString()] ? this.registers[registerId.toString()].length : Number.MAX_SAFE_INTEGER);\n    }\n    readFromRegister(registerId, ptr) {\n        const mem = new Uint8Array(this.memory.buffer);\n        mem.set(this.registers[registerId.toString()] || Buffer.from([]), Number(ptr));\n    }\n    getCurrentAccountId(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.contractId);\n    }\n    inputMethodArgs(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.methodArgs);\n    }\n    getBlockHeight() {\n        return BigInt(this.context.blockHeight);\n    }\n    getBlockTimestamp() {\n        return BigInt(this.context.blockTimestamp);\n    }\n    sha256(valueLen, valuePtr, registerId) {\n        const value = new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen));\n        const hash = (0, crypto_1.createHash)('sha256');\n        hash.update(value);\n        this.registers[registerId.toString()] = hash.digest();\n    }\n    returnValue(valueLen, valuePtr) {\n        this.result = Buffer.from(new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen)));\n    }\n    panic(message) {\n        throw new Error('panic: ' + message);\n    }\n    abort(msg_ptr, filename_ptr, line, col) {\n        const msg = this.readUTF16CStr(msg_ptr);\n        const filename = this.readUTF16CStr(filename_ptr);\n        const message = `${msg} ${filename}:${line}:${col}`;\n        if (!msg || !filename) {\n            throw new Error('abort: ' + 'String encoding is bad UTF-16 sequence.');\n        }\n        throw new Error('abort: ' + message);\n    }\n    appendToLog(len, ptr) {\n        this.logs.push(this.readUTF8CStr(len, ptr));\n    }\n    readStorage(key_len, key_ptr, register_id) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return BigInt(0);\n        }\n        this.registers[register_id] = result;\n        return BigInt(1);\n    }\n    hasStorageKey(key_len, key_ptr) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return BigInt(0);\n        }\n        return BigInt(1);\n    }\n    getHostImports() {\n        return {\n            register_len: this.getRegisterLength.bind(this),\n            read_register: this.readFromRegister.bind(this),\n            current_account_id: this.getCurrentAccountId.bind(this),\n            input: this.inputMethodArgs.bind(this),\n            block_index: this.getBlockHeight.bind(this),\n            block_timestamp: this.getBlockTimestamp.bind(this),\n            sha256: this.sha256.bind(this),\n            value_return: this.returnValue.bind(this),\n            abort: this.abort.bind(this),\n            log_utf8: this.appendToLog.bind(this),\n            log_utf16: this.appendToLog.bind(this),\n            storage_read: this.readStorage.bind(this),\n            storage_has_key: this.hasStorageKey.bind(this),\n            panic: () => this.panic('explicit guest panic'),\n            panic_utf8: (len, ptr) => this.panic(this.readUTF8CStr(len, ptr)),\n            // Not implemented\n            epoch_height: notImplemented('epoch_height'),\n            storage_usage: notImplemented('storage_usage'),\n            account_balance: notImplemented('account_balance'),\n            account_locked_balance: notImplemented('account_locked_balance'),\n            random_seed: notImplemented('random_seed'),\n            ripemd160: notImplemented('ripemd160'),\n            keccak256: notImplemented('keccak256'),\n            keccak512: notImplemented('keccak512'),\n            ecrecover: notImplemented('ecrecover'),\n            validator_stake: notImplemented('validator_stake'),\n            validator_total_stake: notImplemented('validator_total_stake'),\n            // Prohibited\n            write_register: prohibitedInView('write_register'),\n            signer_account_id: prohibitedInView('signer_account_id'),\n            signer_account_pk: prohibitedInView('signer_account_pk'),\n            predecessor_account_id: prohibitedInView('predecessor_account_id'),\n            attached_deposit: prohibitedInView('attached_deposit'),\n            prepaid_gas: prohibitedInView('prepaid_gas'),\n            used_gas: prohibitedInView('used_gas'),\n            promise_create: prohibitedInView('promise_create'),\n            promise_then: prohibitedInView('promise_then'),\n            promise_and: prohibitedInView('promise_and'),\n            promise_batch_create: prohibitedInView('promise_batch_create'),\n            promise_batch_then: prohibitedInView('promise_batch_then'),\n            promise_batch_action_create_account: prohibitedInView('promise_batch_action_create_account'),\n            promise_batch_action_deploy_contract: prohibitedInView('promise_batch_action_deploy_contract'),\n            promise_batch_action_function_call: prohibitedInView('promise_batch_action_function_call'),\n            promise_batch_action_function_call_weight: prohibitedInView('promise_batch_action_function_call_weight'),\n            promise_batch_action_transfer: prohibitedInView('promise_batch_action_transfer'),\n            promise_batch_action_stake: prohibitedInView('promise_batch_action_stake'),\n            promise_batch_action_add_key_with_full_access: prohibitedInView('promise_batch_action_add_key_with_full_access'),\n            promise_batch_action_add_key_with_function_call: prohibitedInView('promise_batch_action_add_key_with_function_call'),\n            promise_batch_action_delete_key: prohibitedInView('promise_batch_action_delete_key'),\n            promise_batch_action_delete_account: prohibitedInView('promise_batch_action_delete_account'),\n            promise_results_count: prohibitedInView('promise_results_count'),\n            promise_result: prohibitedInView('promise_result'),\n            promise_return: prohibitedInView('promise_return'),\n            storage_write: prohibitedInView('storage_write'),\n            storage_remove: prohibitedInView('storage_remove'),\n        };\n    }\n    execute(methodName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const module = yield WebAssembly.compile(this.wasm);\n            const instance = yield WebAssembly.instantiate(module, { env: Object.assign(Object.assign({}, this.getHostImports()), { memory: this.memory }) });\n            const callMethod = instance.exports[methodName];\n            if (callMethod == undefined) {\n                throw new Error(`Contract method '${methodName}' does not exists in contract ${this.context.contractId} for block id ${this.context.blockHeight}`);\n            }\n            callMethod();\n            return {\n                result: this.result,\n                logs: this.logs\n            };\n        });\n    }\n}\nexports.Runtime = Runtime;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/runtime.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/storage.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/storage.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Storage = void 0;\nconst lru_map_1 = __webpack_require__(/*! lru_map */ \"(ssr)/./node_modules/lru_map/dist/lru.js\");\nclass Storage {\n    constructor(options = { max: Storage.MAX_ELEMENTS }) {\n        this.cache = new lru_map_1.LRUMap(options.max);\n        this.blockHeights = new Map();\n    }\n    load(blockRef) {\n        const noBlockId = !('blockId' in blockRef);\n        if (noBlockId)\n            return undefined;\n        let blockId = blockRef.blockId;\n        // block hash is passed, so get its corresponding block height\n        if (blockId.toString().length == 44) {\n            blockId = this.blockHeights.get(blockId.toString());\n        }\n        // get cached values for the given block height\n        return this.cache.get(blockId);\n    }\n    save(blockHash, { blockHeight, blockTimestamp, contractCode, contractState }) {\n        this.blockHeights.set(blockHash, blockHeight);\n        this.cache.set(blockHeight, { blockHeight, blockTimestamp, contractCode, contractState });\n    }\n}\nexports.Storage = Storage;\nStorage.MAX_ELEMENTS = 100;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9sb2NhbC12aWV3LWV4ZWN1dGlvbi9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixrQkFBa0IsbUJBQU8sQ0FBQyx5REFBUztBQUNuQztBQUNBLDRCQUE0QiwyQkFBMkI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDBEQUEwRDtBQUNoRjtBQUNBLHNDQUFzQywwREFBMEQ7QUFDaEc7QUFDQTtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9sb2NhbC12aWV3LWV4ZWN1dGlvbi9zdG9yYWdlLmpzP2U0NTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN0b3JhZ2UgPSB2b2lkIDA7XG5jb25zdCBscnVfbWFwXzEgPSByZXF1aXJlKFwibHJ1X21hcFwiKTtcbmNsYXNzIFN0b3JhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7IG1heDogU3RvcmFnZS5NQVhfRUxFTUVOVFMgfSkge1xuICAgICAgICB0aGlzLmNhY2hlID0gbmV3IGxydV9tYXBfMS5MUlVNYXAob3B0aW9ucy5tYXgpO1xuICAgICAgICB0aGlzLmJsb2NrSGVpZ2h0cyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgbG9hZChibG9ja1JlZikge1xuICAgICAgICBjb25zdCBub0Jsb2NrSWQgPSAhKCdibG9ja0lkJyBpbiBibG9ja1JlZik7XG4gICAgICAgIGlmIChub0Jsb2NrSWQpXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgYmxvY2tJZCA9IGJsb2NrUmVmLmJsb2NrSWQ7XG4gICAgICAgIC8vIGJsb2NrIGhhc2ggaXMgcGFzc2VkLCBzbyBnZXQgaXRzIGNvcnJlc3BvbmRpbmcgYmxvY2sgaGVpZ2h0XG4gICAgICAgIGlmIChibG9ja0lkLnRvU3RyaW5nKCkubGVuZ3RoID09IDQ0KSB7XG4gICAgICAgICAgICBibG9ja0lkID0gdGhpcy5ibG9ja0hlaWdodHMuZ2V0KGJsb2NrSWQudG9TdHJpbmcoKSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZ2V0IGNhY2hlZCB2YWx1ZXMgZm9yIHRoZSBnaXZlbiBibG9jayBoZWlnaHRcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUuZ2V0KGJsb2NrSWQpO1xuICAgIH1cbiAgICBzYXZlKGJsb2NrSGFzaCwgeyBibG9ja0hlaWdodCwgYmxvY2tUaW1lc3RhbXAsIGNvbnRyYWN0Q29kZSwgY29udHJhY3RTdGF0ZSB9KSB7XG4gICAgICAgIHRoaXMuYmxvY2tIZWlnaHRzLnNldChibG9ja0hhc2gsIGJsb2NrSGVpZ2h0KTtcbiAgICAgICAgdGhpcy5jYWNoZS5zZXQoYmxvY2tIZWlnaHQsIHsgYmxvY2tIZWlnaHQsIGJsb2NrVGltZXN0YW1wLCBjb250cmFjdENvZGUsIGNvbnRyYWN0U3RhdGUgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TdG9yYWdlID0gU3RvcmFnZTtcblN0b3JhZ2UuTUFYX0VMRU1FTlRTID0gMTAwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/local-view-execution/storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/types.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/types.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = void 0;\nvar MultisigDeleteRequestRejectionError;\n(function (MultisigDeleteRequestRejectionError) {\n    MultisigDeleteRequestRejectionError[\"CANNOT_DESERIALIZE_STATE\"] = \"Cannot deserialize the contract state\";\n    MultisigDeleteRequestRejectionError[\"MULTISIG_NOT_INITIALIZED\"] = \"Smart contract panicked: Multisig contract should be initialized before usage\";\n    MultisigDeleteRequestRejectionError[\"NO_SUCH_REQUEST\"] = \"Smart contract panicked: panicked at 'No such request: either wrong number or already confirmed'\";\n    MultisigDeleteRequestRejectionError[\"REQUEST_COOLDOWN_ERROR\"] = \"Request cannot be deleted immediately after creation.\";\n    MultisigDeleteRequestRejectionError[\"METHOD_NOT_FOUND\"] = \"Contract method is not found\";\n})(MultisigDeleteRequestRejectionError = exports.MultisigDeleteRequestRejectionError || (exports.MultisigDeleteRequestRejectionError = {}));\nvar MultisigStateStatus;\n(function (MultisigStateStatus) {\n    MultisigStateStatus[MultisigStateStatus[\"INVALID_STATE\"] = 0] = \"INVALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"STATE_NOT_INITIALIZED\"] = 1] = \"STATE_NOT_INITIALIZED\";\n    MultisigStateStatus[MultisigStateStatus[\"VALID_STATE\"] = 2] = \"VALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"UNKNOWN_STATE\"] = 3] = \"UNKNOWN_STATE\";\n})(MultisigStateStatus = exports.MultisigStateStatus || (exports.MultisigStateStatus = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQ0FBMkM7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdGQUF3RiwyQ0FBMkMsS0FBSztBQUN6STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdEQUF3RCwyQkFBMkIsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi90eXBlcy5qcz8xZGNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aXNpZ1N0YXRlU3RhdHVzID0gZXhwb3J0cy5NdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvciA9IHZvaWQgMDtcbnZhciBNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvcjtcbihmdW5jdGlvbiAoTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IpIHtcbiAgICBNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvcltcIkNBTk5PVF9ERVNFUklBTElaRV9TVEFURVwiXSA9IFwiQ2Fubm90IGRlc2VyaWFsaXplIHRoZSBjb250cmFjdCBzdGF0ZVwiO1xuICAgIE11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yW1wiTVVMVElTSUdfTk9UX0lOSVRJQUxJWkVEXCJdID0gXCJTbWFydCBjb250cmFjdCBwYW5pY2tlZDogTXVsdGlzaWcgY29udHJhY3Qgc2hvdWxkIGJlIGluaXRpYWxpemVkIGJlZm9yZSB1c2FnZVwiO1xuICAgIE11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yW1wiTk9fU1VDSF9SRVFVRVNUXCJdID0gXCJTbWFydCBjb250cmFjdCBwYW5pY2tlZDogcGFuaWNrZWQgYXQgJ05vIHN1Y2ggcmVxdWVzdDogZWl0aGVyIHdyb25nIG51bWJlciBvciBhbHJlYWR5IGNvbmZpcm1lZCdcIjtcbiAgICBNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvcltcIlJFUVVFU1RfQ09PTERPV05fRVJST1JcIl0gPSBcIlJlcXVlc3QgY2Fubm90IGJlIGRlbGV0ZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgY3JlYXRpb24uXCI7XG4gICAgTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3JbXCJNRVRIT0RfTk9UX0ZPVU5EXCJdID0gXCJDb250cmFjdCBtZXRob2QgaXMgbm90IGZvdW5kXCI7XG59KShNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvciA9IGV4cG9ydHMuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IgfHwgKGV4cG9ydHMuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IgPSB7fSkpO1xudmFyIE11bHRpc2lnU3RhdGVTdGF0dXM7XG4oZnVuY3Rpb24gKE11bHRpc2lnU3RhdGVTdGF0dXMpIHtcbiAgICBNdWx0aXNpZ1N0YXRlU3RhdHVzW011bHRpc2lnU3RhdGVTdGF0dXNbXCJJTlZBTElEX1NUQVRFXCJdID0gMF0gPSBcIklOVkFMSURfU1RBVEVcIjtcbiAgICBNdWx0aXNpZ1N0YXRlU3RhdHVzW011bHRpc2lnU3RhdGVTdGF0dXNbXCJTVEFURV9OT1RfSU5JVElBTElaRURcIl0gPSAxXSA9IFwiU1RBVEVfTk9UX0lOSVRJQUxJWkVEXCI7XG4gICAgTXVsdGlzaWdTdGF0ZVN0YXR1c1tNdWx0aXNpZ1N0YXRlU3RhdHVzW1wiVkFMSURfU1RBVEVcIl0gPSAyXSA9IFwiVkFMSURfU1RBVEVcIjtcbiAgICBNdWx0aXNpZ1N0YXRlU3RhdHVzW011bHRpc2lnU3RhdGVTdGF0dXNbXCJVTktOT1dOX1NUQVRFXCJdID0gM10gPSBcIlVOS05PV05fU1RBVEVcIjtcbn0pKE11bHRpc2lnU3RhdGVTdGF0dXMgPSBleHBvcnRzLk11bHRpc2lnU3RhdGVTdGF0dXMgfHwgKGV4cG9ydHMuTXVsdGlzaWdTdGF0ZVN0YXR1cyA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/utils.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/utils.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.viewFunction = exports.viewState = exports.encodeJSContractArgs = exports.validateArgs = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\nfunction bytesJsonStringify(input) {\n    return Buffer.from(JSON.stringify(input));\n}\nfunction validateArgs(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    if (isUint8Array) {\n        return;\n    }\n    if (Array.isArray(args) || typeof args !== 'object') {\n        throw new types_1.PositionalArgsError();\n    }\n}\nexports.validateArgs = validateArgs;\nfunction encodeJSContractArgs(contractId, method, args) {\n    return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n}\nexports.encodeJSContractArgs = encodeJSContractArgs;\n/**\n * Returns the state (key value pairs) of account's contract based on the key prefix.\n * Pass an empty string for prefix if you would like to return the entire state.\n * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n *\n * @param connection connection to query state from\n * @param accountId account whose state is viewed\n * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n */\nfunction viewState(connection, accountId, prefix, blockQuery = { finality: 'optimistic' }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { values } = yield connection.provider.query(Object.assign(Object.assign({ request_type: 'view_state' }, blockQuery), { account_id: accountId, prefix_base64: Buffer.from(prefix).toString('base64') }));\n        return values.map(({ key, value }) => ({\n            key: Buffer.from(key, 'base64'),\n            value: Buffer.from(value, 'base64')\n        }));\n    });\n}\nexports.viewState = viewState;\n/**\n * Invoke a contract view function using the RPC API.\n * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n *\n * @param options Function call options.\n * @param options.contractId NEAR account where the contract is deployed\n * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n * @param options.args Any arguments to the view contract method, wrapped in JSON\n * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n * @returns {Promise<any>}\n */\nfunction viewFunction(connection, { contractId, methodName, args = {}, parse = parseJsonFromRawResponse, stringify = bytesJsonStringify, jsContract = false, blockQuery = { finality: 'optimistic' } }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let encodedArgs;\n        validateArgs(args);\n        if (jsContract) {\n            encodedArgs = encodeJSContractArgs(contractId, methodName, Object.keys(args).length > 0 ? JSON.stringify(args) : '');\n        }\n        else {\n            encodedArgs = stringify(args);\n        }\n        const result = yield connection.provider.query(Object.assign(Object.assign({ request_type: 'call_function' }, blockQuery), { account_id: jsContract ? connection.jsvmAccountId : contractId, method_name: jsContract ? 'view_js_contract' : methodName, args_base64: encodedArgs.toString('base64') }));\n        if (result.logs) {\n            (0, utils_1.printTxOutcomeLogs)({ contractId, logs: result.logs });\n        }\n        return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n    });\n}\nexports.viewFunction = viewFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/accounts/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeySize = exports.KeyType = void 0;\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n    KeyType[KeyType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nvar KeySize;\n(function (KeySize) {\n    KeySize[KeySize[\"SECRET_KEY\"] = 32] = \"SECRET_KEY\";\n    KeySize[KeySize[\"ED25519_PUBLIC_KEY\"] = 32] = \"ED25519_PUBLIC_KEY\";\n    KeySize[KeySize[\"SECP256k1_PUBLIC_KEY\"] = 64] = \"SECP256k1_PUBLIC_KEY\";\n})(KeySize = exports.KeySize || (exports.KeySize = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyxlQUFlLEtBQUs7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDLGVBQWUsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzPzgwMDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVNpemUgPSBleHBvcnRzLktleVR5cGUgPSB2b2lkIDA7XG4vKiogQWxsIHN1cHBvcnRlZCBrZXkgdHlwZXMgKi9cbnZhciBLZXlUeXBlO1xuKGZ1bmN0aW9uIChLZXlUeXBlKSB7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiRUQyNTUxOVwiXSA9IDBdID0gXCJFRDI1NTE5XCI7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiU0VDUDI1NksxXCJdID0gMV0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoS2V5VHlwZSA9IGV4cG9ydHMuS2V5VHlwZSB8fCAoZXhwb3J0cy5LZXlUeXBlID0ge30pKTtcbnZhciBLZXlTaXplO1xuKGZ1bmN0aW9uIChLZXlTaXplKSB7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUkVUX0tFWVwiXSA9IDMyXSA9IFwiU0VDUkVUX0tFWVwiO1xuICAgIEtleVNpemVbS2V5U2l6ZVtcIkVEMjU1MTlfUFVCTElDX0tFWVwiXSA9IDMyXSA9IFwiRUQyNTUxOV9QVUJMSUNfS0VZXCI7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUDI1NmsxX1BVQkxJQ19LRVlcIl0gPSA2NF0gPSBcIlNFQ1AyNTZrMV9QVUJMSUNfS0VZXCI7XG59KShLZXlTaXplID0gZXhwb3J0cy5LZXlTaXplIHx8IChleHBvcnRzLktleVNpemUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.KeyPairSecp256k1 = exports.KeyPairEd25519 = exports.KeyPair = exports.KeyType = void 0;\nvar constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\");\nObject.defineProperty(exports, \"KeyType\", ({ enumerable: true, get: function () { return constants_1.KeyType; } }));\nvar key_pair_1 = __webpack_require__(/*! ./key_pair */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair.js\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nvar key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return key_pair_ed25519_1.KeyPairEd25519; } }));\nvar key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nObject.defineProperty(exports, \"KeyPairSecp256k1\", ({ enumerable: true, get: function () { return key_pair_secp256k1_1.KeyPairSecp256k1; } }));\nvar public_key_1 = __webpack_require__(/*! ./public_key */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js\");\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return public_key_1.PublicKey; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsZUFBZSxHQUFHLGVBQWU7QUFDekcsa0JBQWtCLG1CQUFPLENBQUMsK0dBQWE7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2pILGlCQUFpQixtQkFBTyxDQUFDLDZHQUFZO0FBQ3JDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCx5QkFBeUIsbUJBQU8sQ0FBQyw2SEFBb0I7QUFDckQsa0RBQWlELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3RJLDJCQUEyQixtQkFBTyxDQUFDLGlJQUFzQjtBQUN6RCxvREFBbUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDNUksbUJBQW1CLG1CQUFPLENBQUMsaUhBQWM7QUFDekMsNkNBQTRDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9pbmRleC5qcz9hMDE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QdWJsaWNLZXkgPSBleHBvcnRzLktleVBhaXJTZWNwMjU2azEgPSBleHBvcnRzLktleVBhaXJFZDI1NTE5ID0gZXhwb3J0cy5LZXlQYWlyID0gZXhwb3J0cy5LZXlUeXBlID0gdm9pZCAwO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuS2V5VHlwZTsgfSB9KTtcbnZhciBrZXlfcGFpcl8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl8xLktleVBhaXI7IH0gfSk7XG52YXIga2V5X3BhaXJfZWQyNTUxOV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfZWQyNTUxOVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJFZDI1NTE5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9lZDI1NTE5XzEuS2V5UGFpckVkMjU1MTk7IH0gfSk7XG52YXIga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyU2VjcDI1NmsxXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxOyB9IH0pO1xudmFyIHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdWJsaWNLZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmxpY19rZXlfMS5QdWJsaWNLZXk7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPair = void 0;\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nconst key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nclass KeyPair extends key_pair_base_1.KeyPairBase {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return key_pair_ed25519_1.KeyPairEd25519.fromRandom();\n            case 'SECP256K1': return key_pair_secp256k1_1.KeyPairSecp256k1.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    /**\n     * Creates a key pair from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {KeyPair} The key pair created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new key_pair_ed25519_1.KeyPairEd25519(parts[1]);\n                case 'SECP256K1': return new key_pair_secp256k1_1.KeyPairSecp256k1(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHdCQUF3QixtQkFBTyxDQUFDLHVIQUFpQjtBQUNqRCwyQkFBMkIsbUJBQU8sQ0FBQyw2SEFBb0I7QUFDdkQsNkJBQTZCLG1CQUFPLENBQUMsaUlBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxTQUFTO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanM/MDQxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpciA9IHZvaWQgMDtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBrZXlfcGFpcl9lZDI1NTE5XzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9lZDI1NTE5XCIpO1xuY29uc3Qga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5jbGFzcyBLZXlQYWlyIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY3VydmUgTmFtZSBvZiBlbGxpcHRpY2FsIGN1cnZlLCBjYXNlLWluc2Vuc2l0aXZlXG4gICAgICogQHJldHVybnMgUmFuZG9tIEtleVBhaXIgYmFzZWQgb24gdGhlIGN1cnZlXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oY3VydmUpIHtcbiAgICAgICAgc3dpdGNoIChjdXJ2ZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICAgICAgICBjYXNlICdFRDI1NTE5JzogcmV0dXJuIGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBjYXNlICdTRUNQMjU2SzEnOiByZXR1cm4ga2V5X3BhaXJfc2VjcDI1NmsxXzEuS2V5UGFpclNlY3AyNTZrMS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmUgJHtjdXJ2ZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEga2V5IHBhaXIgZnJvbSBhbiBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHBhcmFtIGVuY29kZWRLZXkgVGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKiBAcmV0dXJucyB7S2V5UGFpcn0gVGhlIGtleSBwYWlyIGNyZWF0ZWQgZnJvbSB0aGUgZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGVuY29kZWRLZXkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBlbmNvZGVkS2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocGFydHNbMF0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0VEMjU1MTknOiByZXR1cm4gbmV3IGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOShwYXJ0c1sxXSk7XG4gICAgICAgICAgICAgICAgY2FzZSAnU0VDUDI1NksxJzogcmV0dXJuIG5ldyBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxKHBhcnRzWzFdKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmU6ICR7cGFydHNbMF19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jb2RlZCBrZXkgZm9ybWF0LCBtdXN0IGJlIDxjdXJ2ZT46PGVuY29kZWQga2V5PicpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyID0gS2V5UGFpcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairBase = void 0;\nclass KeyPairBase {\n}\nexports.KeyPairBase = KeyPairBase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcz85YmU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlQYWlyQmFzZSA9IHZvaWQgMDtcbmNsYXNzIEtleVBhaXJCYXNlIHtcbn1cbmV4cG9ydHMuS2V5UGFpckJhc2UgPSBLZXlQYWlyQmFzZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairEd25519 = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"(ssr)/./node_modules/@noble/curves/ed25519.js\");\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js\");\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        this.publicKey = new public_key_1.PublicKey({ keyType: constants_1.KeyType.ED25519, data: publicKey });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairEd25519((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    /**\n     * Signs a message using the key pair's secret key.\n     * @param message The message to be signed.\n     * @returns {Signature} The signature object containing the signature and the public key.\n     */\n    sign(message) {\n        const signature = ed25519_1.ed25519.sign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    /**\n     * Verifies the signature of a message using the key pair's public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    /**\n     * Returns a string representation of the key pair in the format 'ed25519:[extendedSecretKey]'.\n     * @returns {string} The string representation of the key pair.\n     */\n    toString() {\n        return `ed25519:${this.extendedSecretKey}`;\n    }\n    /**\n     * Retrieves the public key associated with the key pair.\n     * @returns {PublicKey} The public key.\n     */\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfZWQyNTUxOS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQyw2R0FBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsNEVBQXVCO0FBQ2pELHNDQUFzQyxtQkFBTyxDQUFDLDhEQUFhO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLCtHQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLHVIQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyxpSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsdURBQXVEO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EsMEJBQTBCLHVCQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9lZDI1NTE5LmpzP2ZhNTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGVkMjU1MTlfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2VkMjU1MTlcIik7XG5jb25zdCByYW5kb21ieXRlc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyYW5kb21ieXRlc1wiKSk7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBwdWJsaWNfa2V5XzEgPSByZXF1aXJlKFwiLi9wdWJsaWNfa2V5XCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHByb3ZpZGVzIGtleSBwYWlyIGZ1bmN0aW9uYWxpdHkgZm9yIEVkMjU1MTkgY3VydmU6XG4gKiBnZW5lcmF0aW5nIGtleSBwYWlycywgZW5jb2Rpbmcga2V5IHBhaXJzLCBzaWduaW5nIGFuZCB2ZXJpZnlpbmcuXG4gKi9cbmNsYXNzIEtleVBhaXJFZDI1NTE5IGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3QgcHVibGljS2V5ID0gZWQyNTUxOV8xLmVkMjU1MTkuZ2V0UHVibGljS2V5KG5ldyBVaW50OEFycmF5KHNlY3JldEtleSkpO1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IG5ldyBwdWJsaWNfa2V5XzEuUHVibGljS2V5KHsga2V5VHlwZTogY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5LCBkYXRhOiBwdWJsaWNLZXkgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9ICgwLCByYW5kb21ieXRlc18xLmRlZmF1bHQpKGNvbnN0YW50c18xLktleVNpemUuU0VDUkVUX0tFWSk7XG4gICAgICAgIGNvbnN0IHB1YmxpY0tleSA9IGVkMjU1MTlfMS5lZDI1NTE5LmdldFB1YmxpY0tleShuZXcgVWludDhBcnJheShzZWNyZXRLZXkpKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyRWQyNTUxOSgoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKShleHRlbmRlZFNlY3JldEtleSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3Mgc2VjcmV0IGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSBzaWduZWQuXG4gICAgICogQHJldHVybnMge1NpZ25hdHVyZX0gVGhlIHNpZ25hdHVyZSBvYmplY3QgY29udGFpbmluZyB0aGUgc2lnbmF0dXJlIGFuZCB0aGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBzaWduKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gZWQyNTUxOV8xLmVkMjU1MTkuc2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmUsIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmVyaWZpZXMgdGhlIHNpZ25hdHVyZSBvZiBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3MgcHVibGljIGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSB2ZXJpZmllZC5cbiAgICAgKiBAcGFyYW0gc2lnbmF0dXJlIFRoZSBzaWduYXR1cmUgdG8gYmUgdmVyaWZpZWQuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgc2lnbmF0dXJlIGlzIHZhbGlkLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICB2ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleS52ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5IHBhaXIgaW4gdGhlIGZvcm1hdCAnZWQyNTUxOTpbZXh0ZW5kZWRTZWNyZXRLZXldJy5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXkgcGFpci5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBlZDI1NTE5OiR7dGhpcy5leHRlbmRlZFNlY3JldEtleX1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHB1YmxpYyBrZXkgYXNzb2NpYXRlZCB3aXRoIHRoZSBrZXkgcGFpci5cbiAgICAgKiBAcmV0dXJucyB7UHVibGljS2V5fSBUaGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleTtcbiAgICB9XG59XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gS2V5UGFpckVkMjU1MTk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairSecp256k1 = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"(ssr)/./node_modules/secp256k1/index.js\"));\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\n/**\n * This class provides key pair functionality for secp256k1 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n * nearcore expects secp256k1 public keys to be 64 bytes at all times,\n * even when string encoded the secp256k1 library returns 65 byte keys\n * (including a 1 byte header that indicates how the pubkey was encoded).\n * We'll force the secp256k1 library to always encode uncompressed\n * keys with the corresponding 0x04 header byte, then manually\n * insert/remove that byte as needed.\n */\nclass KeyPairSecp256k1 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const data = withHeader.subarray(1, withHeader.length); // remove the 0x04 header byte\n        this.publicKey = new public_key_1.PublicKey({\n            keyType: constants_1.KeyType.SECP256K1,\n            data\n        });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        // TODO: find better way to generate PK\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const publicKey = withHeader.subarray(1, withHeader.length);\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairSecp256k1((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    sign(message) {\n        // nearcore expects 65 byte signatures formed by appending the recovery id to the 64 byte signature\n        const { signature, recid } = secp256k1_1.default.ecdsaSign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature: new Uint8Array([...signature, recid]), publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `secp256k1:${this.extendedSecretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairSecp256k1 = KeyPairSecp256k1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfc2VjcDI1NmsxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG9CQUFvQixtQkFBTyxDQUFDLCtHQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLHVIQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyxpSEFBYztBQUMzQyxvQ0FBb0MsbUJBQU8sQ0FBQywwREFBVztBQUN2RCxzQ0FBc0MsbUJBQU8sQ0FBQyw4REFBYTtBQUMzRCxnQkFBZ0IsbUJBQU8sQ0FBQyw2R0FBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9zZWNwMjU2azEuanM/MjI5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpclNlY3AyNTZrMSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3Qga2V5X3BhaXJfYmFzZV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfYmFzZVwiKTtcbmNvbnN0IHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5jb25zdCBzZWNwMjU2azFfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2VjcDI1NmsxXCIpKTtcbmNvbnN0IHJhbmRvbWJ5dGVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcHJvdmlkZXMga2V5IHBhaXIgZnVuY3Rpb25hbGl0eSBmb3Igc2VjcDI1NmsxIGN1cnZlOlxuICogZ2VuZXJhdGluZyBrZXkgcGFpcnMsIGVuY29kaW5nIGtleSBwYWlycywgc2lnbmluZyBhbmQgdmVyaWZ5aW5nLlxuICogbmVhcmNvcmUgZXhwZWN0cyBzZWNwMjU2azEgcHVibGljIGtleXMgdG8gYmUgNjQgYnl0ZXMgYXQgYWxsIHRpbWVzLFxuICogZXZlbiB3aGVuIHN0cmluZyBlbmNvZGVkIHRoZSBzZWNwMjU2azEgbGlicmFyeSByZXR1cm5zIDY1IGJ5dGUga2V5c1xuICogKGluY2x1ZGluZyBhIDEgYnl0ZSBoZWFkZXIgdGhhdCBpbmRpY2F0ZXMgaG93IHRoZSBwdWJrZXkgd2FzIGVuY29kZWQpLlxuICogV2UnbGwgZm9yY2UgdGhlIHNlY3AyNTZrMSBsaWJyYXJ5IHRvIGFsd2F5cyBlbmNvZGUgdW5jb21wcmVzc2VkXG4gKiBrZXlzIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgMHgwNCBoZWFkZXIgYnl0ZSwgdGhlbiBtYW51YWxseVxuICogaW5zZXJ0L3JlbW92ZSB0aGF0IGJ5dGUgYXMgbmVlZGVkLlxuICovXG5jbGFzcyBLZXlQYWlyU2VjcDI1NmsxIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3Qgd2l0aEhlYWRlciA9IHNlY3AyNTZrMV8xLmRlZmF1bHQucHVibGljS2V5Q3JlYXRlKG5ldyBVaW50OEFycmF5KHNlY3JldEtleSksIGZhbHNlKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHdpdGhIZWFkZXIuc3ViYXJyYXkoMSwgd2l0aEhlYWRlci5sZW5ndGgpOyAvLyByZW1vdmUgdGhlIDB4MDQgaGVhZGVyIGJ5dGVcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBuZXcgcHVibGljX2tleV8xLlB1YmxpY0tleSh7XG4gICAgICAgICAgICBrZXlUeXBlOiBjb25zdGFudHNfMS5LZXlUeXBlLlNFQ1AyNTZLMSxcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIC8vIFRPRE86IGZpbmQgYmV0dGVyIHdheSB0byBnZW5lcmF0ZSBQS1xuICAgICAgICBjb25zdCBzZWNyZXRLZXkgPSAoMCwgcmFuZG9tYnl0ZXNfMS5kZWZhdWx0KShjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpO1xuICAgICAgICBjb25zdCB3aXRoSGVhZGVyID0gc2VjcDI1NmsxXzEuZGVmYXVsdC5wdWJsaWNLZXlDcmVhdGUobmV3IFVpbnQ4QXJyYXkoc2VjcmV0S2V5KSwgZmFsc2UpO1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB3aXRoSGVhZGVyLnN1YmFycmF5KDEsIHdpdGhIZWFkZXIubGVuZ3RoKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyU2VjcDI1NmsxKCgwLCB1dGlsc18xLmJhc2VFbmNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KSk7XG4gICAgfVxuICAgIHNpZ24obWVzc2FnZSkge1xuICAgICAgICAvLyBuZWFyY29yZSBleHBlY3RzIDY1IGJ5dGUgc2lnbmF0dXJlcyBmb3JtZWQgYnkgYXBwZW5kaW5nIHRoZSByZWNvdmVyeSBpZCB0byB0aGUgNjQgYnl0ZSBzaWduYXR1cmVcbiAgICAgICAgY29uc3QgeyBzaWduYXR1cmUsIHJlY2lkIH0gPSBzZWNwMjU2azFfMS5kZWZhdWx0LmVjZHNhU2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmU6IG5ldyBVaW50OEFycmF5KFsuLi5zaWduYXR1cmUsIHJlY2lkXSksIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgdmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXkudmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYHNlY3AyNTZrMToke3RoaXMuZXh0ZW5kZWRTZWNyZXRLZXl9YDtcbiAgICB9XG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyU2VjcDI1NmsxID0gS2V5UGFpclNlY3AyNTZrMTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"(ssr)/./node_modules/@noble/curves/ed25519.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"(ssr)/./node_modules/secp256k1/index.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: return 'ed25519';\n        case constants_1.KeyType.SECP256K1: return 'secp256k1';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return constants_1.KeyType.ED25519;\n        case 'secp256k1': return constants_1.KeyType.SECP256K1;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nclass ED25519PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.SECP256K1;\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === constants_1.KeyType.ED25519) {\n            this.ed25519Key = { keyType, data };\n        }\n        else if (keyType === constants_1.KeyType.SECP256K1) {\n            this.secp256k1Key = { keyType, data };\n        }\n    }\n    /**\n     * Creates a PublicKey instance from a string or an existing PublicKey instance.\n     * @param value The string or PublicKey instance to create a PublicKey from.\n     * @returns {PublicKey} The PublicKey instance.\n     */\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    /**\n     * Creates a PublicKey instance from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {PublicKey} The PublicKey instance created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        let publicKey;\n        let keyType;\n        if (parts.length === 1) {\n            publicKey = parts[0];\n        }\n        else if (parts.length === 2) {\n            publicKey = parts[1];\n            keyType = str_to_key_type(parts[0]);\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n        const decodedPublicKey = (0, utils_1.baseDecode)(publicKey);\n        if (!keyType) {\n            keyType = decodedPublicKey.length === constants_1.KeySize.SECP256k1_PUBLIC_KEY ? constants_1.KeyType.SECP256K1 : constants_1.KeyType.ED25519;\n        }\n        const keySize = keyType === constants_1.KeyType.ED25519 ? constants_1.KeySize.ED25519_PUBLIC_KEY : constants_1.KeySize.SECP256k1_PUBLIC_KEY;\n        if (decodedPublicKey.length !== keySize) {\n            throw new Error(`Invalid public key size (${decodedPublicKey.length}), must be ${keySize}`);\n        }\n        return new PublicKey({ keyType, data: decodedPublicKey });\n    }\n    /**\n     * Returns a string representation of the public key.\n     * @returns {string} The string representation of the public key.\n     */\n    toString() {\n        const encodedKey = (0, utils_1.baseEncode)(this.data);\n        return `${key_type_to_str(this.keyType)}:${encodedKey}`;\n    }\n    /**\n     * Verifies a message signature using the public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        const keyType = this.keyType;\n        const data = this.data;\n        switch (keyType) {\n            case constants_1.KeyType.ED25519:\n                return ed25519_1.ed25519.verify(signature, message, data);\n            case constants_1.KeyType.SECP256K1:\n                return secp256k1_1.default.ecdsaVerify(signature.subarray(0, 64), message, new Uint8Array([0x04, ...data]));\n            default:\n                throw new Error(`Unknown key type: ${keyType}`);\n        }\n    }\n    get keyPair() {\n        return this.ed25519Key || this.secp256k1Key;\n    }\n    get keyType() {\n        return this.keyPair.keyType;\n    }\n    get data() {\n        return this.keyPair.data;\n    }\n}\nexports.PublicKey = PublicKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/in_memory_key_store.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/in_memory_key_store.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemoryKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/keystore.js\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@link KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.keys[`${accountId}:${networkId}`];\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            delete this.keys[`${accountId}:${networkId}`];\n        });\n    }\n    /**\n     * Removes all {@link KeyPair} from in-memory storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys = {};\n        });\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                result.add(parts[1]);\n            });\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                if (parts[parts.length - 1] === networkId) {\n                    result.push(parts.slice(0, parts.length - 1).join(':'));\n                }\n            });\n            return result;\n        });\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5fbWVtb3J5X2tleV9zdG9yZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGlCQUFpQixtQkFBTyxDQUFDLCtHQUFpQjtBQUMxQyxtQkFBbUIsbUJBQU8sQ0FBQyxnSEFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDRCQUE0QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGVBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFVBQVUsR0FBRyxVQUFVO0FBQ2hELFNBQVM7QUFDVDtBQUNBO0FBQ0EsZUFBZSxlQUFlO0FBQzlCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFVBQVUsR0FBRyxVQUFVO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsR0FBRyxVQUFVO0FBQ3ZELFNBQVM7QUFDVDtBQUNBO0FBQ0Esb0JBQW9CLGVBQWU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5fbWVtb3J5X2tleV9zdG9yZS5qcz9jOTZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkluTWVtb3J5S2V5U3RvcmUgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9jcnlwdG9cIik7XG5jb25zdCBrZXlzdG9yZV8xID0gcmVxdWlyZShcIi4va2V5c3RvcmVcIik7XG4vKipcbiAqIFNpbXBsZSBpbi1tZW1vcnkga2V5c3RvcmUgZm9yIG1haW5seSBmb3IgdGVzdGluZyBwdXJwb3Nlcy5cbiAqXG4gKiBAc2VlIFtodHRwczovL2RvY3MubmVhci5vcmcvZG9jcy9kZXZlbG9wL2Zyb250LWVuZC9uYWotcXVpY2stcmVmZXJlbmNlI2tleS1zdG9yZV0oaHR0cHM6Ly9kb2NzLm5lYXIub3JnL2RvY3MvZGV2ZWxvcC9mcm9udC1lbmQvbmFqLXF1aWNrLXJlZmVyZW5jZSNrZXktc3RvcmUpXG4gKiBAZXhhbXBsZVxuICogYGBganNcbiAqIGltcG9ydCB7IGNvbm5lY3QsIGtleVN0b3JlcywgdXRpbHMgfSBmcm9tICduZWFyLWFwaS1qcyc7XG4gKlxuICogY29uc3QgcHJpdmF0ZUtleSA9ICcuLi4uLi4uJztcbiAqIGNvbnN0IGtleVBhaXIgPSB1dGlscy5LZXlQYWlyLmZyb21TdHJpbmcocHJpdmF0ZUtleSk7XG4gKlxuICogY29uc3Qga2V5U3RvcmUgPSBuZXcga2V5U3RvcmVzLkluTWVtb3J5S2V5U3RvcmUoKTtcbiAqIGtleVN0b3JlLnNldEtleSgndGVzdG5ldCcsICdleGFtcGxlLWFjY291bnQudGVzdG5ldCcsIGtleVBhaXIpO1xuICpcbiAqIGNvbnN0IGNvbmZpZyA9IHtcbiAqICAga2V5U3RvcmUsIC8vIGluc3RhbmNlIG9mIEluTWVtb3J5S2V5U3RvcmVcbiAqICAgbmV0d29ya0lkOiAndGVzdG5ldCcsXG4gKiAgIG5vZGVVcmw6ICdodHRwczovL3JwYy50ZXN0bmV0Lm5lYXIub3JnJyxcbiAqICAgd2FsbGV0VXJsOiAnaHR0cHM6Ly93YWxsZXQudGVzdG5ldC5uZWFyLm9yZycsXG4gKiAgIGhlbHBlclVybDogJ2h0dHBzOi8vaGVscGVyLnRlc3RuZXQubmVhci5vcmcnLFxuICogICBleHBsb3JlclVybDogJ2h0dHBzOi8vZXhwbG9yZXIudGVzdG5ldC5uZWFyLm9yZydcbiAqIH07XG4gKlxuICogLy8gaW5zaWRlIGFuIGFzeW5jIGZ1bmN0aW9uXG4gKiBjb25zdCBuZWFyID0gYXdhaXQgY29ubmVjdChjb25maWcpXG4gKiBgYGBcbiAqL1xuY2xhc3MgSW5NZW1vcnlLZXlTdG9yZSBleHRlbmRzIGtleXN0b3JlXzEuS2V5U3RvcmUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmtleXMgPSB7fTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3RvcmVzIGEge0BsaW5rIEtleVBhaXJ9IGluIGluLW1lbW9yeSBzdG9yYWdlIGl0ZW1cbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5IHBhaXIgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIHNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdGhpcy5rZXlzW2Ake2FjY291bnRJZH06JHtuZXR3b3JrSWR9YF0gPSBrZXlQYWlyLnRvU3RyaW5nKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIGEge0BsaW5rIEtleVBhaXJ9IGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxLZXlQYWlyPn1cbiAgICAgKi9cbiAgICBnZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5rZXlzW2Ake2FjY291bnRJZH06JHtuZXR3b3JrSWR9YF07XG4gICAgICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvXzEuS2V5UGFpci5mcm9tU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSBpbi1tZW1vcnkgc3RvcmFnZVxuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqL1xuICAgIHJlbW92ZUtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMua2V5c1tgJHthY2NvdW50SWR9OiR7bmV0d29ya0lkfWBdO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhbGwge0BsaW5rIEtleVBhaXJ9IGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRoaXMua2V5cyA9IHt9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBPYmplY3Qua2V5cyh0aGlzLmtleXMpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcnRzID0ga2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmFkZChwYXJ0c1sxXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBBcnJheS5mcm9tKHJlc3VsdC52YWx1ZXMoKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBhY2NvdW50KHMpIGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKi9cbiAgICBnZXRBY2NvdW50cyhuZXR3b3JrSWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBBcnJheSgpO1xuICAgICAgICAgICAgT2JqZWN0LmtleXModGhpcy5rZXlzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJ0cyA9IGtleS5zcGxpdCgnOicpO1xuICAgICAgICAgICAgICAgIGlmIChwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXSA9PT0gbmV0d29ya0lkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHBhcnRzLnNsaWNlKDAsIHBhcnRzLmxlbmd0aCAtIDEpLmpvaW4oJzonKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuICdJbk1lbW9yeUtleVN0b3JlJztcbiAgICB9XG59XG5leHBvcnRzLkluTWVtb3J5S2V5U3RvcmUgPSBJbk1lbW9yeUtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/in_memory_key_store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = exports.MergeKeyStore = exports.KeyStore = exports.InMemoryKeyStore = void 0;\nvar in_memory_key_store_1 = __webpack_require__(/*! ./in_memory_key_store */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/in_memory_key_store.js\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", ({ enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } }));\nvar keystore_1 = __webpack_require__(/*! ./keystore */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/keystore.js\");\nObject.defineProperty(exports, \"KeyStore\", ({ enumerable: true, get: function () { return keystore_1.KeyStore; } }));\nvar merge_key_store_1 = __webpack_require__(/*! ./merge_key_store */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/merge_key_store.js\");\nObject.defineProperty(exports, \"MergeKeyStore\", ({ enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } }));\nvar multi_contract_keystore_1 = __webpack_require__(/*! ./multi_contract_keystore */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\");\nObject.defineProperty(exports, \"MultiContractKeyStore\", ({ enumerable: true, get: function () { return multi_contract_keystore_1.MultiContractKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcscUJBQXFCLEdBQUcsZ0JBQWdCLEdBQUcsd0JBQXdCO0FBQ25HLDRCQUE0QixtQkFBTyxDQUFDLHNJQUF1QjtBQUMzRCxvREFBbUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDN0ksaUJBQWlCLG1CQUFPLENBQUMsZ0hBQVk7QUFDckMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILHdCQUF3QixtQkFBTyxDQUFDLDhIQUFtQjtBQUNuRCxpREFBZ0QsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUM7QUFDbkksZ0NBQWdDLG1CQUFPLENBQUMsOElBQTJCO0FBQ25FLHlEQUF3RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanM/MjI3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlDb250cmFjdEtleVN0b3JlID0gZXhwb3J0cy5NZXJnZUtleVN0b3JlID0gZXhwb3J0cy5LZXlTdG9yZSA9IGV4cG9ydHMuSW5NZW1vcnlLZXlTdG9yZSA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfa2V5X3N0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW5NZW1vcnlLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5fbWVtb3J5X2tleV9zdG9yZV8xLkluTWVtb3J5S2V5U3RvcmU7IH0gfSk7XG52YXIga2V5c3RvcmVfMSA9IHJlcXVpcmUoXCIuL2tleXN0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleXN0b3JlXzEuS2V5U3RvcmU7IH0gfSk7XG52YXIgbWVyZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tZXJnZV9rZXlfc3RvcmVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZXJnZUtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtZXJnZV9rZXlfc3RvcmVfMS5NZXJnZUtleVN0b3JlOyB9IH0pO1xudmFyIG11bHRpX2NvbnRyYWN0X2tleXN0b3JlXzEgPSByZXF1aXJlKFwiLi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bHRpQ29udHJhY3RLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbXVsdGlfY29udHJhY3Rfa2V5c3RvcmVfMS5NdWx0aUNvbnRyYWN0S2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/keystore.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/keystore.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link \"@near-js/wallet-account\".near.Near | Near} via {@link \"@near-js/wallet-account\".near.NearConfig | NearConfig}\n * and are used by the {@link \"@near-js/signers\".in_memory_signer.InMemorySigner | InMemorySigner} to sign transactions.\n *\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIva2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0EsNEJBQTRCLGtEQUFrRCxLQUFLO0FBQ25GLHdCQUF3QiwyRUFBMkU7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL2tleXN0b3JlLmpzPzgyMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVN0b3JlID0gdm9pZCAwO1xuLyoqXG4gKiBLZXlTdG9yZXMgYXJlIHBhc3NlZCB0byB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhciB8IE5lYXJ9IHZpYSB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhckNvbmZpZyB8IE5lYXJDb25maWd9XG4gKiBhbmQgYXJlIHVzZWQgYnkgdGhlIHtAbGluayBcIkBuZWFyLWpzL3NpZ25lcnNcIi5pbl9tZW1vcnlfc2lnbmVyLkluTWVtb3J5U2lnbmVyIHwgSW5NZW1vcnlTaWduZXJ9IHRvIHNpZ24gdHJhbnNhY3Rpb25zLlxuICpcbiAqL1xuY2xhc3MgS2V5U3RvcmUge1xufVxuZXhwb3J0cy5LZXlTdG9yZSA9IEtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/keystore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/merge_key_store.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/merge_key_store.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MergeKeyStore = void 0;\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/keystore.js\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options KeyStore options\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPair} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                const keyPair = yield keyStore.getKey(networkId, accountId);\n                if (keyPair) {\n                    return keyPair;\n                }\n            }\n            return null;\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.removeKey(networkId, accountId);\n            }\n        });\n    }\n    /**\n     * Removes all items from each key store\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.clear();\n            }\n        });\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const network of yield keyStore.getNetworks()) {\n                    result.add(network);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const account of yield keyStore.getAccounts(networkId)) {\n                    result.add(account);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbWVyZ2Vfa2V5X3N0b3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsbUJBQW1CLG1CQUFPLENBQUMsZ0hBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVCQUF1QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMEJBQTBCO0FBQzFEO0FBQ0E7QUFDQSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL21lcmdlX2tleV9zdG9yZS5qcz85OWVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSB2b2lkIDA7XG5jb25zdCBrZXlzdG9yZV8xID0gcmVxdWlyZShcIi4va2V5c3RvcmVcIik7XG5jbGFzcyBNZXJnZUtleVN0b3JlIGV4dGVuZHMga2V5c3RvcmVfMS5LZXlTdG9yZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGtleVN0b3JlcyByZWFkIGNhbGxzIGFyZSBhdHRlbXB0ZWQgZnJvbSBzdGFydCB0byBlbmQgb2YgYXJyYXlcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBLZXlTdG9yZSBvcHRpb25zXG4gICAgICogQHBhcmFtIG9wdGlvbnMud3JpdGVLZXlTdG9yZUluZGV4IHRoZSBrZXlzdG9yZSBpbmRleCB0aGF0IHdpbGwgcmVjZWl2ZSBhbGwgd3JpdGUgY2FsbHNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihrZXlTdG9yZXMsIG9wdGlvbnMgPSB7IHdyaXRlS2V5U3RvcmVJbmRleDogMCB9KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMua2V5U3RvcmVzID0ga2V5U3RvcmVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdG9yZSBhIHtAbGluayBLZXlQYWlyfSB0byB0aGUgZmlyc3QgaW5kZXggb2YgYSBrZXkgc3RvcmUgYXJyYXlcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5IHBhaXIgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIHNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgdGhpcy5rZXlTdG9yZXNbdGhpcy5vcHRpb25zLndyaXRlS2V5U3RvcmVJbmRleF0uc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSB0aGUgYXJyYXkgb2Yga2V5IHN0b3Jlc1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEtleVBhaXI+fVxuICAgICAqL1xuICAgIGdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXlTdG9yZSBvZiB0aGlzLmtleVN0b3Jlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCBrZXlTdG9yZS5nZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpO1xuICAgICAgICAgICAgICAgIGlmIChrZXlQYWlyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBrZXlQYWlyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIHtAbGluayBLZXlQYWlyfSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICovXG4gICAgcmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQga2V5U3RvcmUucmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYWxsIGl0ZW1zIGZyb20gZWFjaCBrZXkgc3RvcmVcbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5U3RvcmUgb2YgdGhpcy5rZXlTdG9yZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBrZXlTdG9yZS5jbGVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gdGhlIGFycmF5IG9mIGtleSBzdG9yZXNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBuZXR3b3JrIG9mIHlpZWxkIGtleVN0b3JlLmdldE5ldHdvcmtzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChuZXR3b3JrKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYWNjb3VudChzKSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICovXG4gICAgZ2V0QWNjb3VudHMobmV0d29ya0lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhY2NvdW50IG9mIHlpZWxkIGtleVN0b3JlLmdldEFjY291bnRzKG5ldHdvcmtJZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChhY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBNZXJnZUtleVN0b3JlKCR7dGhpcy5rZXlTdG9yZXMuam9pbignLCAnKX0pYDtcbiAgICB9XG59XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSBNZXJnZUtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/merge_key_store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/multi_contract_keystore.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/multi_contract_keystore.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = void 0;\n/**\n * KeyStores are passed to {@link near!Near} via {@link near!NearConfig}\n * and are used by the {@link signer!InMemorySigner} to sign transactions.\n *\n * @see {@link connect}\n */\nclass MultiContractKeyStore {\n}\nexports.MultiContractKeyStore = MultiContractKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbXVsdGlfY29udHJhY3Rfa2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCO0FBQ0EsNEJBQTRCLGlCQUFpQixLQUFLO0FBQ2xELHdCQUF3Qiw2QkFBNkI7QUFDckQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZS5qcz9kNzMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSB2b2lkIDA7XG4vKipcbiAqIEtleVN0b3JlcyBhcmUgcGFzc2VkIHRvIHtAbGluayBuZWFyIU5lYXJ9IHZpYSB7QGxpbmsgbmVhciFOZWFyQ29uZmlnfVxuICogYW5kIGFyZSB1c2VkIGJ5IHRoZSB7QGxpbmsgc2lnbmVyIUluTWVtb3J5U2lnbmVyfSB0byBzaWduIHRyYW5zYWN0aW9ucy5cbiAqXG4gKiBAc2VlIHtAbGluayBjb25uZWN0fVxuICovXG5jbGFzcyBNdWx0aUNvbnRyYWN0S2V5U3RvcmUge1xufVxuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSBNdWx0aUNvbnRyYWN0S2V5U3RvcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/exponential-backoff.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/exponential-backoff.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.exponentialBackoff = void 0;\nfunction exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: jitter?\n        let waitTime = startWaitTime;\n        for (let i = 0; i < retryNumber; i++) {\n            const result = yield getResult();\n            if (result) {\n                return result;\n            }\n            yield sleep(waitTime);\n            waitTime *= waitBackoff;\n        }\n        return null;\n    });\n}\nexports.exponentialBackoff = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvZXhwb25lbnRpYWwtYmFja29mZi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9leHBvbmVudGlhbC1iYWNrb2ZmLmpzP2VhYWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gdm9pZCAwO1xuZnVuY3Rpb24gZXhwb25lbnRpYWxCYWNrb2ZmKHN0YXJ0V2FpdFRpbWUsIHJldHJ5TnVtYmVyLCB3YWl0QmFja29mZiwgZ2V0UmVzdWx0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgLy8gVE9ETzogaml0dGVyP1xuICAgICAgICBsZXQgd2FpdFRpbWUgPSBzdGFydFdhaXRUaW1lO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJldHJ5TnVtYmVyOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHlpZWxkIGdldFJlc3VsdCgpO1xuICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5aWVsZCBzbGVlcCh3YWl0VGltZSk7XG4gICAgICAgICAgICB3YWl0VGltZSAqPSB3YWl0QmFja29mZjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9KTtcbn1cbmV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gZXhwb25lbnRpYWxCYWNrb2ZmO1xuLy8gU2xlZXAgZ2l2ZW4gbnVtYmVyIG9mIG1pbGxpcy5cbmZ1bmN0aW9uIHNsZWVwKG1pbGxpcykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbWlsbGlzKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/exponential-backoff.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/failover-rpc-provider.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/failover-rpc-provider.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FailoverRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link FailoverRpcProvider} client class\n * which can be used to interact with multiple [NEAR RPC APIs](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst provider_1 = __webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/provider.js\");\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass FailoverRpcProvider extends provider_1.Provider {\n    /**\n     * @param providers list of providers\n     */\n    constructor(providers) {\n        super();\n        if (providers.length === 0) {\n            throw new Error('At least one provider must be specified');\n        }\n        this.providers = providers;\n        this.currentProviderIndex = 0;\n    }\n    switchToNextProvider() {\n        if (this.providers.length === 1)\n            return;\n        if (this.providers.length - 1 <= this.currentProviderIndex) {\n            this.currentProviderIndex = 0;\n        }\n        else {\n            this.currentProviderIndex += 1;\n        }\n        utils_1.Logger.debug(`Switched to provider at the index ${this.currentProviderIndex}`);\n    }\n    get currentProvider() {\n        const provider = this.providers[this.currentProviderIndex];\n        if (!provider)\n            throw new Error(`Provider wasn't found at index ${this.currentProviderIndex}`);\n        return provider;\n    }\n    withBackoff(getResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let i = 0; i < this.providers.length; i++) {\n                try {\n                    // each provider implements own retry logic\n                    const result = yield getResult(this.currentProvider);\n                    if (result)\n                        return result;\n                }\n                catch (_a) {\n                    this.switchToNextProvider();\n                }\n            }\n            throw new types_1.TypedError(`Exceeded ${this.providers.length} providers to execute request`, 'RetriesExceeded');\n        });\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.status());\n        });\n    }\n    sendTransactionUntil(signedTransaction, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.sendTransactionUntil(signedTransaction, waitUntil));\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.sendTransaction(signedTransaction));\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendTransactionAsync(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.sendTransactionAsync(signedTransaction));\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    txStatus(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.txStatus(txHash, accountId, waitUntil));\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    txStatusReceipts(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.txStatusReceipts(txHash, accountId, waitUntil));\n        });\n    }\n    query(paramsOrPath, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (data) {\n                return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath, data));\n            }\n            return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath));\n        });\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    block(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.block(blockQuery));\n        });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    blockChanges(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.blockChanges(blockQuery));\n        });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    chunk(chunkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.chunk(chunkId));\n        });\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    validators(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.validators(blockId));\n        });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    experimental_protocolConfig(blockReference) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.experimental_protocolConfig(blockReference));\n        });\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.lightClientProof(request));\n        });\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    nextLightClientBlock(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.nextLightClientBlock(request));\n        });\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    accessKeyChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.accessKeyChanges(accountIdArray, blockQuery));\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.singleAccessKeyChanges(accessKeyArray, blockQuery));\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    accountChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.accountChanges(accountIdArray, blockQuery));\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.contractStateChanges(accountIdArray, blockQuery, keyPrefix));\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractCodeChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.contractCodeChanges(accountIdArray, blockQuery));\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    gasPrice(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.gasPrice(blockId));\n        });\n    }\n}\nexports.FailoverRpcProvider = FailoverRpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/failover-rpc-provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/fetch.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/fetch.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst node_fetch_1 = __importDefault(__webpack_require__(/*! node-fetch */ \"(ssr)/./node_modules/node-fetch/lib/index.mjs\"));\nconst http_1 = __importDefault(__webpack_require__(/*! http */ \"http\"));\nconst https_1 = __importDefault(__webpack_require__(/*! https */ \"https\"));\nconst httpAgent = new http_1.default.Agent({ keepAlive: true });\nconst httpsAgent = new https_1.default.Agent({ keepAlive: true });\nfunction agent(_parsedURL) {\n    if (_parsedURL.protocol === 'http:') {\n        return httpAgent;\n    }\n    else {\n        return httpsAgent;\n    }\n}\nfunction default_1(resource, init) {\n    return (0, node_fetch_1.default)(resource, Object.assign({ agent: agent(new URL(resource.toString())) }, init));\n}\nexports[\"default\"] = default_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvZmV0Y2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQ0FBcUMsbUJBQU8sQ0FBQyxpRUFBWTtBQUN6RCwrQkFBK0IsbUJBQU8sQ0FBQyxrQkFBTTtBQUM3QyxnQ0FBZ0MsbUJBQU8sQ0FBQyxvQkFBTztBQUMvQyw2Q0FBNkMsaUJBQWlCO0FBQzlELCtDQUErQyxpQkFBaUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELDRDQUE0QztBQUMzRztBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9mZXRjaC5qcz83MTZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgbm9kZV9mZXRjaF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJub2RlLWZldGNoXCIpKTtcbmNvbnN0IGh0dHBfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiaHR0cFwiKSk7XG5jb25zdCBodHRwc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJodHRwc1wiKSk7XG5jb25zdCBodHRwQWdlbnQgPSBuZXcgaHR0cF8xLmRlZmF1bHQuQWdlbnQoeyBrZWVwQWxpdmU6IHRydWUgfSk7XG5jb25zdCBodHRwc0FnZW50ID0gbmV3IGh0dHBzXzEuZGVmYXVsdC5BZ2VudCh7IGtlZXBBbGl2ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIGFnZW50KF9wYXJzZWRVUkwpIHtcbiAgICBpZiAoX3BhcnNlZFVSTC5wcm90b2NvbCA9PT0gJ2h0dHA6Jykge1xuICAgICAgICByZXR1cm4gaHR0cEFnZW50O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGh0dHBzQWdlbnQ7XG4gICAgfVxufVxuZnVuY3Rpb24gZGVmYXVsdF8xKHJlc291cmNlLCBpbml0KSB7XG4gICAgcmV0dXJuICgwLCBub2RlX2ZldGNoXzEuZGVmYXVsdCkocmVzb3VyY2UsIE9iamVjdC5hc3NpZ24oeyBhZ2VudDogYWdlbnQobmV3IFVSTChyZXNvdXJjZS50b1N0cmluZygpKSkgfSwgaW5pdCkpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZGVmYXVsdF8xO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/fetch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/fetch_json.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/fetch_json.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchJson = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst http_errors_1 = __importDefault(__webpack_require__(/*! http-errors */ \"(ssr)/./node_modules/http-errors/index.js\"));\nconst exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/exponential-backoff.js\");\nconst START_WAIT_TIME_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.5;\nconst RETRY_NUMBER = 10;\n/**\n * Performs an HTTP request to a specified URL or connection and returns the parsed JSON response.\n * @param connectionInfoOrUrl The connection information or URL for the HTTP request.\n * @param json The JSON payload to be included in the request body for POST requests.\n * @returns A Promise that resolves to the parsed JSON response from the HTTP request.\n */\nfunction fetchJson(connectionInfoOrUrl, json) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let connectionInfo = { url: null };\n        if (typeof (connectionInfoOrUrl) === 'string') {\n            connectionInfo.url = connectionInfoOrUrl;\n        }\n        else {\n            connectionInfo = connectionInfoOrUrl;\n        }\n        const response = yield (0, exponential_backoff_1.exponentialBackoff)(START_WAIT_TIME_MS, RETRY_NUMBER, BACKOFF_MULTIPLIER, () => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                const response = yield ((_a = global.fetch) !== null && _a !== void 0 ? _a : (yield Promise.resolve().then(() => __importStar(__webpack_require__(/*! ./fetch */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/fetch.js\")))).default)(connectionInfo.url, {\n                    method: json ? 'POST' : 'GET',\n                    body: json ? json : undefined,\n                    headers: Object.assign(Object.assign({}, connectionInfo.headers), { 'Content-Type': 'application/json' })\n                });\n                if (!response.ok) {\n                    if (response.status === 503) {\n                        utils_1.Logger.warn(`Retrying HTTP request for ${connectionInfo.url} as it's not available now`);\n                        return null;\n                    }\n                    else if (response.status === 408) {\n                        utils_1.Logger.warn(`Retrying HTTP request for ${connectionInfo.url} as the previous connection was unused for some time`);\n                        return null;\n                    }\n                    throw (0, http_errors_1.default)(response.status, yield response.text());\n                }\n                return response;\n            }\n            catch (error) {\n                if (error.toString().includes('FetchError') || error.toString().includes('Failed to fetch')) {\n                    utils_1.Logger.warn(`Retrying HTTP request for ${connectionInfo.url} because of error: ${error}`);\n                    return null;\n                }\n                throw error;\n            }\n        }));\n        if (!response) {\n            throw new types_1.TypedError(`Exceeded ${RETRY_NUMBER} attempts for ${connectionInfo.url}.`, 'RetriesExceeded');\n        }\n        return yield response.json();\n    });\n}\nexports.fetchJson = fetchJson;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/fetch_json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchJson = exports.Provider = exports.FailoverRpcProvider = exports.JsonRpcProvider = exports.exponentialBackoff = void 0;\nvar exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/exponential-backoff.js\");\nObject.defineProperty(exports, \"exponentialBackoff\", ({ enumerable: true, get: function () { return exponential_backoff_1.exponentialBackoff; } }));\nvar json_rpc_provider_1 = __webpack_require__(/*! ./json-rpc-provider */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/json-rpc-provider.js\");\nObject.defineProperty(exports, \"JsonRpcProvider\", ({ enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } }));\nvar failover_rpc_provider_1 = __webpack_require__(/*! ./failover-rpc-provider */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/failover-rpc-provider.js\");\nObject.defineProperty(exports, \"FailoverRpcProvider\", ({ enumerable: true, get: function () { return failover_rpc_provider_1.FailoverRpcProvider; } }));\nvar provider_1 = __webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/provider.js\");\nObject.defineProperty(exports, \"Provider\", ({ enumerable: true, get: function () { return provider_1.Provider; } }));\nvar fetch_json_1 = __webpack_require__(/*! ./fetch_json */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/fetch_json.js\");\nObject.defineProperty(exports, \"fetchJson\", ({ enumerable: true, get: function () { return fetch_json_1.fetchJson; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsZ0JBQWdCLEdBQUcsMkJBQTJCLEdBQUcsdUJBQXVCLEdBQUcsMEJBQTBCO0FBQ3pILDRCQUE0QixtQkFBTyxDQUFDLHNJQUF1QjtBQUMzRCxzREFBcUQsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDakosMEJBQTBCLG1CQUFPLENBQUMsa0lBQXFCO0FBQ3ZELG1EQUFrRCxFQUFFLHFDQUFxQywrQ0FBK0MsRUFBQztBQUN6SSw4QkFBOEIsbUJBQU8sQ0FBQywwSUFBeUI7QUFDL0QsdURBQXNELEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQ3JKLGlCQUFpQixtQkFBTyxDQUFDLGdIQUFZO0FBQ3JDLDRDQUEyQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNsSCxtQkFBbUIsbUJBQU8sQ0FBQyxvSEFBYztBQUN6Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy9wcm92aWRlcnMvbGliL2luZGV4LmpzPzJmYTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZldGNoSnNvbiA9IGV4cG9ydHMuUHJvdmlkZXIgPSBleHBvcnRzLkZhaWxvdmVyUnBjUHJvdmlkZXIgPSBleHBvcnRzLkpzb25ScGNQcm92aWRlciA9IGV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gdm9pZCAwO1xudmFyIGV4cG9uZW50aWFsX2JhY2tvZmZfMSA9IHJlcXVpcmUoXCIuL2V4cG9uZW50aWFsLWJhY2tvZmZcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJleHBvbmVudGlhbEJhY2tvZmZcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGV4cG9uZW50aWFsX2JhY2tvZmZfMS5leHBvbmVudGlhbEJhY2tvZmY7IH0gfSk7XG52YXIganNvbl9ycGNfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2pzb24tcnBjLXByb3ZpZGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSnNvblJwY1Byb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBqc29uX3JwY19wcm92aWRlcl8xLkpzb25ScGNQcm92aWRlcjsgfSB9KTtcbnZhciBmYWlsb3Zlcl9ycGNfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2ZhaWxvdmVyLXJwYy1wcm92aWRlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZhaWxvdmVyUnBjUHJvdmlkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZhaWxvdmVyX3JwY19wcm92aWRlcl8xLkZhaWxvdmVyUnBjUHJvdmlkZXI7IH0gfSk7XG52YXIgcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL3Byb3ZpZGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHJvdmlkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb3ZpZGVyXzEuUHJvdmlkZXI7IH0gfSk7XG52YXIgZmV0Y2hfanNvbl8xID0gcmVxdWlyZShcIi4vZmV0Y2hfanNvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZldGNoSnNvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZmV0Y2hfanNvbl8xLmZldGNoSnNvbjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/json-rpc-provider.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/json-rpc-provider.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JsonRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js\");\nconst exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/exponential-backoff.js\");\nconst provider_1 = __webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/provider.js\");\nconst fetch_json_1 = __webpack_require__(/*! ./fetch_json */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/fetch_json.js\");\n/** @hidden */\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /**\n     * @param connectionInfo Connection info\n     */\n    constructor(connectionInfo, options) {\n        super();\n        this.connection = connectionInfo || { url: '' };\n        const defaultOptions = {\n            retries: REQUEST_RETRY_NUMBER,\n            wait: REQUEST_RETRY_WAIT,\n            backoff: REQUEST_RETRY_WAIT_BACKOFF\n        };\n        this.options = Object.assign({}, defaultOptions, options);\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('status', []);\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     *\n     * @param signedTransaction The signed transaction being sent\n     * @param waitUntil\n     */\n    sendTransactionUntil(signedTransaction, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bytes = (0, transactions_1.encodeTransaction)(signedTransaction);\n            return this.sendJsonRpc('send_tx', { signed_tx_base64: Buffer.from(bytes).toString('base64'), wait_until: waitUntil });\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendTransactionUntil(signedTransaction, 'EXECUTED_OPTIMISTIC');\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendTransactionAsync(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendTransactionUntil(signedTransaction, 'NONE');\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     */\n    txStatus(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof txHash === 'string') {\n                return this.txStatusString(txHash, accountId, waitUntil);\n            }\n            else {\n                return this.txStatusUint8Array(txHash, accountId, waitUntil);\n            }\n        });\n    }\n    txStatusUint8Array(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('tx', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n        });\n    }\n    txStatusString(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('tx', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    txStatusReceipts(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof txHash === 'string') {\n                return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n            }\n            else {\n                return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n            }\n        });\n    }\n    /**\n     * Query the RPC by passing an {@link \"@near-js/types\".provider/request.RpcQueryRequest | RpcQueryRequest }\n     * @see [https://docs.near.org/api/rpc/contracts](https://docs.near.org/api/rpc/contracts)\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    query(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let result;\n            if (args.length === 1) {\n                const _a = args[0], { block_id, blockId } = _a, otherParams = __rest(_a, [\"block_id\", \"blockId\"]);\n                result = yield this.sendJsonRpc('query', Object.assign(Object.assign({}, otherParams), { block_id: block_id || blockId }));\n            }\n            else {\n                const [path, data] = args;\n                result = yield this.sendJsonRpc('query', [path, data]);\n            }\n            if (result && result.error) {\n                throw new types_1.TypedError(`Querying failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, (0, utils_1.getErrorTypeFromErrorMessage)(result.error, result.error.name));\n            }\n            return result;\n        });\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    block(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('block', { block_id: blockId, finality });\n        });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    blockChanges(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n        });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    chunk(chunkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('chunk', [chunkId]);\n        });\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    validators(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('validators', [blockId]);\n        });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    experimental_protocolConfig(blockReference) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _a = blockReference, { blockId } = _a, otherParams = __rest(_a, [\"blockId\"]);\n            return yield this.sendJsonRpc('EXPERIMENTAL_protocol_config', Object.assign(Object.assign({}, otherParams), { block_id: blockId }));\n        });\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n        });\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    nextLightClientBlock(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('next_light_client_block', request);\n        });\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    accessKeyChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'all_access_key_changes',\n                account_ids: accountIdArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'single_access_key_changes',\n                keys: accessKeyArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    accountChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'account_changes',\n                account_ids: accountIdArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'data_changes',\n                account_ids: accountIdArray,\n                key_prefix_base64: keyPrefix,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractCodeChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'contract_code_changes',\n                account_ids: accountIdArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    gasPrice(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('gas_price', [blockId]);\n        });\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    sendJsonRpc(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield (0, exponential_backoff_1.exponentialBackoff)(this.options.wait, this.options.retries, this.options.backoff, () => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                try {\n                    const request = {\n                        method,\n                        params,\n                        id: (_nextId++),\n                        jsonrpc: '2.0'\n                    };\n                    const response = yield (0, fetch_json_1.fetchJson)(this.connection, JSON.stringify(request));\n                    if (response.error) {\n                        if (typeof response.error.data === 'object') {\n                            if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                                // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                                throw new types_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                            }\n                            throw (0, utils_1.parseRpcError)(response.error.data);\n                        }\n                        else {\n                            const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                            // NOTE: All this hackery is happening because structured errors not implemented\n                            // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                            if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')\n                                || errorMessage.includes('query has timed out')) {\n                                throw new types_1.TypedError(errorMessage, 'TimeoutError');\n                            }\n                            const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.error.data, '');\n                            if (errorType) {\n                                throw new types_1.TypedError((0, utils_1.formatError)(errorType, params), errorType);\n                            }\n                            throw new types_1.TypedError(errorMessage, response.error.name);\n                        }\n                    }\n                    else if (typeof ((_a = response.result) === null || _a === void 0 ? void 0 : _a.error) === 'string') {\n                        const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.result.error, '');\n                        if (errorType) {\n                            throw new utils_1.ServerError((0, utils_1.formatError)(errorType, params), errorType);\n                        }\n                    }\n                    // Success when response.error is not exist\n                    return response;\n                }\n                catch (error) {\n                    if (error.type === 'TimeoutError') {\n                        utils_1.Logger.warn(`Retrying request to ${method} as it has timed out`, params);\n                        return null;\n                    }\n                    throw error;\n                }\n            }));\n            const { result } = response;\n            // From jsonrpc spec:\n            // result\n            //   This member is REQUIRED on success.\n            //   This member MUST NOT exist if there was an error invoking the method.\n            if (typeof result === 'undefined') {\n                throw new types_1.TypedError(`Exceeded ${this.options.retries} attempts for request to ${method}.`, 'RetriesExceeded');\n            }\n            return result;\n        });\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/json-rpc-provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/provider.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/provider.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Provider = void 0;\n/** @hidden */\nclass Provider {\n}\nexports.Provider = Provider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9wcm92aWRlci5qcz82MjRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBORUFSIFJQQyBBUEkgcmVxdWVzdCB0eXBlcyBhbmQgcmVzcG9uc2VzXG4gKiBAbW9kdWxlXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvdmlkZXIgPSB2b2lkIDA7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgUHJvdmlkZXIge1xufVxuZXhwb3J0cy5Qcm92aWRlciA9IFByb3ZpZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/providers/lib/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/in_memory_signer.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/in_memory_signer.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemorySigner = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/keystores/lib/index.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst signer_1 = __webpack_require__(/*! ./signer */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/signer.js\");\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends signer_1.Signer {\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static fromKeyPair(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyStore = new keystores_1.InMemoryKeyStore();\n            yield keyStore.setKey(networkId, accountId, keyPair);\n            return new InMemorySigner(keyStore);\n        });\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    createKey(accountId, networkId, keyType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = keyType === crypto_1.KeyType.SECP256K1 ? crypto_1.KeyPair.fromRandom('secp256k1') : crypto_1.KeyPair.fromRandom('ed25519');\n            yield this.keyStore.setKey(networkId, accountId, keyPair);\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    getPublicKey(accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                return null;\n            }\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    signMessage(message, accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const hash = new Uint8Array((0, sha256_1.sha256)(message));\n            if (!accountId) {\n                throw new Error('InMemorySigner requires provided account id');\n            }\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                throw new Error(`Key for ${accountId} not found in ${networkId}`);\n            }\n            return keyPair.sign(hash);\n        });\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL2luX21lbW9yeV9zaWduZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixpQkFBaUIsbUJBQU8sQ0FBQywrR0FBaUI7QUFDMUMsb0JBQW9CLG1CQUFPLENBQUMscUhBQW9CO0FBQ2hELGlCQUFpQixtQkFBTyxDQUFDLDBFQUFzQjtBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQywwR0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG9CQUFvQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFdBQVcsZUFBZSxVQUFVO0FBQy9FO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQSxzQkFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy9zaWduZXJzL2xpYi9pbl9tZW1vcnlfc2lnbmVyLmpzPzg5ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW5NZW1vcnlTaWduZXIgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9jcnlwdG9cIik7XG5jb25zdCBrZXlzdG9yZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9rZXlzdG9yZXNcIik7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiKTtcbmNvbnN0IHNpZ25lcl8xID0gcmVxdWlyZShcIi4vc2lnbmVyXCIpO1xuLyoqXG4gKiBTaWducyB1c2luZyBpbiBtZW1vcnkga2V5IHN0b3JlLlxuICovXG5jbGFzcyBJbk1lbW9yeVNpZ25lciBleHRlbmRzIHNpZ25lcl8xLlNpZ25lciB7XG4gICAgY29uc3RydWN0b3Ioa2V5U3RvcmUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5rZXlTdG9yZSA9IGtleVN0b3JlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgc2luZ2xlIGFjY291bnQgU2lnbmVyIGluc3RhbmNlIHdpdGggYWNjb3VudCwgbmV0d29yayBhbmQga2V5UGFpciBwcm92aWRlZC5cbiAgICAgKlxuICAgICAqIEludGVuZGVkIHRvIGJlIHVzZWZ1bCBmb3IgdGVtcG9yYXJ5IGtleXMgKGUuZy4gY2xhaW1pbmcgYSBMaW5rZHJvcCkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdG8gYXNzaWduIHRoZSBrZXkgcGFpciB0b1xuICAgICAqIEBwYXJhbSBrZXlQYWlyIFRoZSBrZXlQYWlyIHRvIHVzZSBmb3Igc2lnbmluZ1xuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tS2V5UGFpcihuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3Qga2V5U3RvcmUgPSBuZXcga2V5c3RvcmVzXzEuSW5NZW1vcnlLZXlTdG9yZSgpO1xuICAgICAgICAgICAgeWllbGQga2V5U3RvcmUuc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgSW5NZW1vcnlTaWduZXIoa2V5U3RvcmUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHB1YmxpYyBrZXkgZm9yIHRoZSBhY2NvdW50IGdpdmVuXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRvIGFzc2lnbiBhIHB1YmxpYyBrZXkgdG9cbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxQdWJsaWNLZXk+fVxuICAgICAqL1xuICAgIGNyZWF0ZUtleShhY2NvdW50SWQsIG5ldHdvcmtJZCwga2V5VHlwZSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3Qga2V5UGFpciA9IGtleVR5cGUgPT09IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxID8gY3J5cHRvXzEuS2V5UGFpci5mcm9tUmFuZG9tKCdzZWNwMjU2azEnKSA6IGNyeXB0b18xLktleVBhaXIuZnJvbVJhbmRvbSgnZWQyNTUxOScpO1xuICAgICAgICAgICAgeWllbGQgdGhpcy5rZXlTdG9yZS5zZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQsIGtleVBhaXIpO1xuICAgICAgICAgICAgcmV0dXJuIGtleVBhaXIuZ2V0UHVibGljS2V5KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBleGlzdGluZyBwdWJsaWMga2V5IGZvciBhIGdpdmVuIGFjY291bnRcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdG8gYXNzaWduIGEgcHVibGljIGtleSB0b1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFB1YmxpY0tleT59IFJldHVybnMgdGhlIHB1YmxpYyBrZXkgb3IgbnVsbCBpZiBub3QgZm91bmRcbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoYWNjb3VudElkLCBuZXR3b3JrSWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCB0aGlzLmtleVN0b3JlLmdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCk7XG4gICAgICAgICAgICBpZiAoa2V5UGFpciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGtleVBhaXIuZ2V0UHVibGljS2V5KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBBIG1lc3NhZ2UgdG8gYmUgc2lnbmVkLCB0eXBpY2FsbHkgYSBzZXJpYWxpemVkIHRyYW5zYWN0aW9uXG4gICAgICogQHBhcmFtIGFjY291bnRJZCB0aGUgTkVBUiBhY2NvdW50IHNpZ25pbmcgdGhlIG1lc3NhZ2VcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxTaWduYXR1cmU+fVxuICAgICAqL1xuICAgIHNpZ25NZXNzYWdlKG1lc3NhZ2UsIGFjY291bnRJZCwgbmV0d29ya0lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBoYXNoID0gbmV3IFVpbnQ4QXJyYXkoKDAsIHNoYTI1Nl8xLnNoYTI1NikobWVzc2FnZSkpO1xuICAgICAgICAgICAgaWYgKCFhY2NvdW50SWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luTWVtb3J5U2lnbmVyIHJlcXVpcmVzIHByb3ZpZGVkIGFjY291bnQgaWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCB0aGlzLmtleVN0b3JlLmdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCk7XG4gICAgICAgICAgICBpZiAoa2V5UGFpciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgS2V5IGZvciAke2FjY291bnRJZH0gbm90IGZvdW5kIGluICR7bmV0d29ya0lkfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGtleVBhaXIuc2lnbihoYXNoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYEluTWVtb3J5U2lnbmVyKCR7dGhpcy5rZXlTdG9yZX0pYDtcbiAgICB9XG59XG5leHBvcnRzLkluTWVtb3J5U2lnbmVyID0gSW5NZW1vcnlTaWduZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/in_memory_signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = exports.InMemorySigner = void 0;\nvar in_memory_signer_1 = __webpack_require__(/*! ./in_memory_signer */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/in_memory_signer.js\");\nObject.defineProperty(exports, \"InMemorySigner\", ({ enumerable: true, get: function () { return in_memory_signer_1.InMemorySigner; } }));\nvar signer_1 = __webpack_require__(/*! ./signer */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/signer.js\");\nObject.defineProperty(exports, \"Signer\", ({ enumerable: true, get: function () { return signer_1.Signer; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxzQkFBc0I7QUFDdkMseUJBQXlCLG1CQUFPLENBQUMsOEhBQW9CO0FBQ3JELGtEQUFpRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUN0SSxlQUFlLG1CQUFPLENBQUMsMEdBQVU7QUFDakMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvaW5kZXguanM/MTFmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmVyID0gZXhwb3J0cy5Jbk1lbW9yeVNpZ25lciA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfc2lnbmVyXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfc2lnbmVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW5NZW1vcnlTaWduZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGluX21lbW9yeV9zaWduZXJfMS5Jbk1lbW9yeVNpZ25lcjsgfSB9KTtcbnZhciBzaWduZXJfMSA9IHJlcXVpcmUoXCIuL3NpZ25lclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNpZ25lclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmVyXzEuU2lnbmVyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/signer.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/signer.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = void 0;\n/**\n * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.\n */\nclass Signer {\n}\nexports.Signer = Signer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL3NpZ25lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy9zaWduZXJzL2xpYi9zaWduZXIuanM/YTM5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmVyID0gdm9pZCAwO1xuLyoqXG4gKiBHZW5lcmFsIHNpZ25pbmcgaW50ZXJmYWNlLCBjYW4gYmUgdXNlZCBmb3IgaW4gbWVtb3J5IHNpZ25pbmcsIFJQQyBzaW5naW5nLCBleHRlcm5hbCB3YWxsZXQsIEhTTSwgZXRjLlxuICovXG5jbGFzcyBTaWduZXIge1xufVxuZXhwb3J0cy5TaWduZXIgPSBTaWduZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/signers/lib/signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.actionCreators = exports.stringifyJsonOrBytes = void 0;\nconst actions_1 = __webpack_require__(/*! ./actions */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js\");\n/**\n * Creates a full access key with full access permissions.\n * @returns A new full access key.\n */\nfunction fullAccessKey() {\n    return new actions_1.AccessKey({\n        nonce: 0,\n        permission: new actions_1.AccessKeyPermission({\n            fullAccess: new actions_1.FullAccessPermission({}),\n        }),\n    });\n}\n/**\n * Creates an access key with function call permission for a specific receiver and method names.\n * @param receiverId The NEAR account ID of the function call receiver.\n * @param methodNames An array of method names allowed for function calls.\n * @param allowance An optional allowance (maximum amount) for the function call. Default: Unlimited.\n * @returns A new access key with function call permission.\n */\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new actions_1.AccessKey({\n        nonce: 0,\n        permission: new actions_1.AccessKeyPermission({\n            functionCall: new actions_1.FunctionCallPermission({\n                receiverId,\n                allowance,\n                methodNames,\n            }),\n        }),\n    });\n}\n/**\n * Creates a new action for creating a new NEAR account.\n * @returns A new action for creating a new account.\n */\nfunction createAccount() {\n    return new actions_1.Action({ createAccount: new actions_1.CreateAccount({}) });\n}\n/**\n * Creates a new action for deploying a contract with the provided code.\n * @param code The Uint8Array representing the code of the contract.\n * @returns A new action for deploying a contract.\n */\nfunction deployContract(code) {\n    return new actions_1.Action({ deployContract: new actions_1.DeployContract({ code }) });\n}\n/**\n * Converts an input argument to a Buffer, handling cases for both JSON and Uint8Array.\n * @param args The input argument, either JSON object or Uint8Array.\n * @returns A Buffer representation of the input argument.\n */\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    return isUint8Array ? args : Buffer.from(JSON.stringify(args));\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n * @param jsContract  Is contract from JS SDK, skips stringification of arguments.\n */\nfunction functionCall(methodName, args, gas = BigInt(0), deposit = BigInt(0), stringify = stringifyJsonOrBytes, jsContract = false) {\n    if (jsContract) {\n        return new actions_1.Action({\n            functionCall: new actions_1.FunctionCall({ methodName, args, gas, deposit }),\n        });\n    }\n    return new actions_1.Action({\n        functionCall: new actions_1.FunctionCall({\n            methodName,\n            args: stringify(args),\n            gas,\n            deposit,\n        }),\n    });\n}\n/**\n * Creates a new action for transferring funds, optionally specifying a deposit amount.\n * @param deposit The amount to be deposited along with the transfer. Default: 0.\n * @returns A new action for transferring funds.\n */\nfunction transfer(deposit = BigInt(0)) {\n    return new actions_1.Action({ transfer: new actions_1.Transfer({ deposit }) });\n}\n/**\n * Creates a new action for staking tokens, specifying the stake amount and public key.\n * @param stake The amount to be staked. Default: 0.\n * @param publicKey The public key associated with the staking action.\n * @returns A new action for staking tokens.\n */\nfunction stake(stake = BigInt(0), publicKey) {\n    return new actions_1.Action({ stake: new actions_1.Stake({ stake, publicKey }) });\n}\n/**\n * Creates a new action for adding a public key with a specified access key.\n * @param publicKey The public key to be added.\n * @param accessKey The access key associated with the added public key.\n * @returns A new action for adding a public key.\n */\nfunction addKey(publicKey, accessKey) {\n    return new actions_1.Action({ addKey: new actions_1.AddKey({ publicKey, accessKey }) });\n}\n/**\n * Creates a new action for deleting a public key.\n * @param publicKey The public key to be deleted.\n * @returns A new action for deleting a public key.\n */\nfunction deleteKey(publicKey) {\n    return new actions_1.Action({ deleteKey: new actions_1.DeleteKey({ publicKey }) });\n}\n/**\n * Creates a new action for deleting an account with the specified beneficiary ID.\n * @param beneficiaryId The NEAR account ID of the beneficiary.\n * @returns A new action for deleting an account.\n */\nfunction deleteAccount(beneficiaryId) {\n    return new actions_1.Action({ deleteAccount: new actions_1.DeleteAccount({ beneficiaryId }) });\n}\n/**\n * Creates a new action for a signed delegation, specifying the delegate action and signature.\n * @param delegateAction The delegate action to be performed.\n * @param signature The signature associated with the delegate action.\n * @returns A new action for a signed delegation.\n */\nfunction signedDelegate({ delegateAction, signature, }) {\n    return new actions_1.Action({\n        signedDelegate: new actions_1.SignedDelegate({ delegateAction, signature }),\n    });\n}\nexports.actionCreators = {\n    addKey,\n    createAccount,\n    deleteAccount,\n    deleteKey,\n    deployContract,\n    fullAccessKey,\n    functionCall,\n    functionCallAccessKey,\n    signedDelegate,\n    stake,\n    transfer,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Action = exports.SignedDelegate = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nclass FunctionCallPermission extends types_1.Assignable {\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends types_1.Assignable {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends Enum {\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends types_1.Assignable {\n}\nexports.AccessKey = AccessKey;\nclass IAction extends types_1.Assignable {\n}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {\n}\nexports.Transfer = Transfer;\nclass Stake extends IAction {\n}\nexports.Stake = Stake;\nclass AddKey extends IAction {\n}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {\n}\nexports.DeleteAccount = DeleteAccount;\nclass SignedDelegate extends IAction {\n}\nexports.SignedDelegate = SignedDelegate;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends Enum {\n}\nexports.Action = Action;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsc0JBQXNCLEdBQUcscUJBQXFCLEdBQUcsaUJBQWlCLEdBQUcsY0FBYyxHQUFHLGFBQWEsR0FBRyxnQkFBZ0IsR0FBRyxvQkFBb0IsR0FBRyxzQkFBc0IsR0FBRyxxQkFBcUIsR0FBRyxlQUFlLEdBQUcsaUJBQWlCLEdBQUcsMkJBQTJCLEdBQUcsNEJBQTRCLEdBQUcsOEJBQThCO0FBQ25WLGdCQUFnQixtQkFBTyxDQUFDLDZHQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9hY3Rpb25zLmpzPzI5N2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFjdGlvbiA9IGV4cG9ydHMuU2lnbmVkRGVsZWdhdGUgPSBleHBvcnRzLkRlbGV0ZUFjY291bnQgPSBleHBvcnRzLkRlbGV0ZUtleSA9IGV4cG9ydHMuQWRkS2V5ID0gZXhwb3J0cy5TdGFrZSA9IGV4cG9ydHMuVHJhbnNmZXIgPSBleHBvcnRzLkZ1bmN0aW9uQ2FsbCA9IGV4cG9ydHMuRGVwbG95Q29udHJhY3QgPSBleHBvcnRzLkNyZWF0ZUFjY291bnQgPSBleHBvcnRzLklBY3Rpb24gPSBleHBvcnRzLkFjY2Vzc0tleSA9IGV4cG9ydHMuQWNjZXNzS2V5UGVybWlzc2lvbiA9IGV4cG9ydHMuRnVsbEFjY2Vzc1Blcm1pc3Npb24gPSBleHBvcnRzLkZ1bmN0aW9uQ2FsbFBlcm1pc3Npb24gPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuY2xhc3MgRW51bSB7XG4gICAgY29uc3RydWN0b3IocHJvcGVydGllcykge1xuICAgICAgICBpZiAoT2JqZWN0LmtleXMocHJvcGVydGllcykubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VudW0gY2FuIG9ubHkgdGFrZSBzaW5nbGUgdmFsdWUnKTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyhwcm9wZXJ0aWVzKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgdGhpc1trZXldID0gcHJvcGVydGllc1trZXldO1xuICAgICAgICAgICAgdGhpcy5lbnVtID0ga2V5O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5jbGFzcyBGdW5jdGlvbkNhbGxQZXJtaXNzaW9uIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuRnVuY3Rpb25DYWxsUGVybWlzc2lvbiA9IEZ1bmN0aW9uQ2FsbFBlcm1pc3Npb247XG5jbGFzcyBGdWxsQWNjZXNzUGVybWlzc2lvbiBleHRlbmRzIHR5cGVzXzEuQXNzaWduYWJsZSB7XG59XG5leHBvcnRzLkZ1bGxBY2Nlc3NQZXJtaXNzaW9uID0gRnVsbEFjY2Vzc1Blcm1pc3Npb247XG5jbGFzcyBBY2Nlc3NLZXlQZXJtaXNzaW9uIGV4dGVuZHMgRW51bSB7XG59XG5leHBvcnRzLkFjY2Vzc0tleVBlcm1pc3Npb24gPSBBY2Nlc3NLZXlQZXJtaXNzaW9uO1xuY2xhc3MgQWNjZXNzS2V5IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuQWNjZXNzS2V5ID0gQWNjZXNzS2V5O1xuY2xhc3MgSUFjdGlvbiBleHRlbmRzIHR5cGVzXzEuQXNzaWduYWJsZSB7XG59XG5leHBvcnRzLklBY3Rpb24gPSBJQWN0aW9uO1xuY2xhc3MgQ3JlYXRlQWNjb3VudCBleHRlbmRzIElBY3Rpb24ge1xufVxuZXhwb3J0cy5DcmVhdGVBY2NvdW50ID0gQ3JlYXRlQWNjb3VudDtcbmNsYXNzIERlcGxveUNvbnRyYWN0IGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLkRlcGxveUNvbnRyYWN0ID0gRGVwbG95Q29udHJhY3Q7XG5jbGFzcyBGdW5jdGlvbkNhbGwgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuRnVuY3Rpb25DYWxsID0gRnVuY3Rpb25DYWxsO1xuY2xhc3MgVHJhbnNmZXIgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuVHJhbnNmZXIgPSBUcmFuc2ZlcjtcbmNsYXNzIFN0YWtlIGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLlN0YWtlID0gU3Rha2U7XG5jbGFzcyBBZGRLZXkgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuQWRkS2V5ID0gQWRkS2V5O1xuY2xhc3MgRGVsZXRlS2V5IGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLkRlbGV0ZUtleSA9IERlbGV0ZUtleTtcbmNsYXNzIERlbGV0ZUFjY291bnQgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuRGVsZXRlQWNjb3VudCA9IERlbGV0ZUFjY291bnQ7XG5jbGFzcyBTaWduZWREZWxlZ2F0ZSBleHRlbmRzIElBY3Rpb24ge1xufVxuZXhwb3J0cy5TaWduZWREZWxlZ2F0ZSA9IFNpZ25lZERlbGVnYXRlO1xuLyoqXG4gKiBDb250YWlucyBhIGxpc3Qgb2YgdGhlIHZhbGlkIHRyYW5zYWN0aW9uIEFjdGlvbnMgYXZhaWxhYmxlIHdpdGggdGhpcyBBUElcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vbm9taWNvbi5pby9SdW50aW1lU3BlYy9BY3Rpb25zLmh0bWwgfCBBY3Rpb25zIFNwZWN9XG4gKi9cbmNsYXNzIEFjdGlvbiBleHRlbmRzIEVudW0ge1xufVxuZXhwb3J0cy5BY3Rpb24gPSBBY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTransaction = void 0;\nconst schema_1 = __webpack_require__(/*! ./schema */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js\");\n/**\n * Creates a new transaction object with the provided parameters.\n * @param signerId The NEAR account ID of the transaction signer.\n * @param publicKey The public key associated with the signer.\n * @param receiverId The NEAR account ID of the transaction receiver.\n * @param nonce The nonce value for the transaction, represented as a BN, string, or number.\n * @param actions An array of transaction actions to be performed.\n * @param blockHash The hash of the block where the transaction will be included.\n * @returns A new transaction object initialized with the provided parameters.\n */\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    const txNonce = typeof nonce === 'bigint' ? nonce : BigInt(nonce);\n    return new schema_1.Transaction({\n        signerId,\n        publicKey,\n        nonce: txNonce,\n        receiverId,\n        actions,\n        blockHash,\n    });\n}\nexports.createTransaction = createTransaction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvY3JlYXRlX3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQywrR0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvY3JlYXRlX3RyYW5zYWN0aW9uLmpzPzE3ZDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVRyYW5zYWN0aW9uID0gdm9pZCAwO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWFcIik7XG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgdHJhbnNhY3Rpb24gb2JqZWN0IHdpdGggdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gc2lnbmVySWQgVGhlIE5FQVIgYWNjb3VudCBJRCBvZiB0aGUgdHJhbnNhY3Rpb24gc2lnbmVyLlxuICogQHBhcmFtIHB1YmxpY0tleSBUaGUgcHVibGljIGtleSBhc3NvY2lhdGVkIHdpdGggdGhlIHNpZ25lci5cbiAqIEBwYXJhbSByZWNlaXZlcklkIFRoZSBORUFSIGFjY291bnQgSUQgb2YgdGhlIHRyYW5zYWN0aW9uIHJlY2VpdmVyLlxuICogQHBhcmFtIG5vbmNlIFRoZSBub25jZSB2YWx1ZSBmb3IgdGhlIHRyYW5zYWN0aW9uLCByZXByZXNlbnRlZCBhcyBhIEJOLCBzdHJpbmcsIG9yIG51bWJlci5cbiAqIEBwYXJhbSBhY3Rpb25zIEFuIGFycmF5IG9mIHRyYW5zYWN0aW9uIGFjdGlvbnMgdG8gYmUgcGVyZm9ybWVkLlxuICogQHBhcmFtIGJsb2NrSGFzaCBUaGUgaGFzaCBvZiB0aGUgYmxvY2sgd2hlcmUgdGhlIHRyYW5zYWN0aW9uIHdpbGwgYmUgaW5jbHVkZWQuXG4gKiBAcmV0dXJucyBBIG5ldyB0cmFuc2FjdGlvbiBvYmplY3QgaW5pdGlhbGl6ZWQgd2l0aCB0aGUgcHJvdmlkZWQgcGFyYW1ldGVycy5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlVHJhbnNhY3Rpb24oc2lnbmVySWQsIHB1YmxpY0tleSwgcmVjZWl2ZXJJZCwgbm9uY2UsIGFjdGlvbnMsIGJsb2NrSGFzaCkge1xuICAgIGNvbnN0IHR4Tm9uY2UgPSB0eXBlb2Ygbm9uY2UgPT09ICdiaWdpbnQnID8gbm9uY2UgOiBCaWdJbnQobm9uY2UpO1xuICAgIHJldHVybiBuZXcgc2NoZW1hXzEuVHJhbnNhY3Rpb24oe1xuICAgICAgICBzaWduZXJJZCxcbiAgICAgICAgcHVibGljS2V5LFxuICAgICAgICBub25jZTogdHhOb25jZSxcbiAgICAgICAgcmVjZWl2ZXJJZCxcbiAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgYmxvY2tIYXNoLFxuICAgIH0pO1xufVxuZXhwb3J0cy5jcmVhdGVUcmFuc2FjdGlvbiA9IGNyZWF0ZVRyYW5zYWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/delegate.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/delegate.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildDelegateAction = exports.DelegateAction = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst action_creators_1 = __webpack_require__(/*! ./action_creators */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, functionCall, stake, transfer, } = action_creators_1.actionCreators;\nclass DelegateAction extends types_1.Assignable {\n}\nexports.DelegateAction = DelegateAction;\n/**\n * Compose a delegate action for inclusion with a meta transaction signed on the sender's behalf\n * @param actions The set of actions to be included in the meta transaction\n * @param maxBlockHeight The maximum block height for which this action can be executed as part of a transaction\n * @param nonce Current nonce on the access key used to sign the delegate action\n * @param publicKey Public key for the access key used to sign the delegate action\n * @param receiverId Account ID for the intended receiver of the meta transaction\n * @param senderId Account ID for the intended signer of the delegate action\n */\nfunction buildDelegateAction({ actions, maxBlockHeight, nonce, publicKey, receiverId, senderId, }) {\n    return new DelegateAction({\n        senderId,\n        receiverId,\n        actions: actions.map((a) => {\n            // @ts-expect-error type workaround\n            if (!a.type && !a.params) {\n                return a;\n            }\n            // @ts-expect-error type workaround\n            switch (a.type) {\n                case 'AddKey': {\n                    // @ts-expect-error type workaround\n                    const { publicKey, accessKey } = a.params;\n                    return addKey(publicKey, accessKey);\n                }\n                case 'CreateAccount': {\n                    // @ts-expect-error type workaround\n                    return createAccount(a.params.createAccount);\n                }\n                case 'DeleteAccount': {\n                    // @ts-expect-error type workaround\n                    return deleteAccount(a.params.deleteAccount);\n                }\n                case 'DeleteKey': {\n                    // @ts-expect-error type workaround\n                    return deleteKey(a.params.publicKey);\n                }\n                case 'DeployContract': {\n                    // @ts-expect-error type workaround\n                    return deployContract(a.params.code);\n                }\n                case 'FunctionCall': {\n                    // @ts-expect-error type workaround\n                    const { methodName, args, gas, deposit } = a.params;\n                    return functionCall(methodName, args, gas, deposit);\n                }\n                case 'Stake': {\n                    // @ts-expect-error type workaround\n                    return stake(a.params.stake, a.params.publicKey);\n                }\n                case 'Transfer': {\n                    // @ts-expect-error type workaround\n                    const { deposit } = a.params;\n                    return transfer(deposit);\n                }\n            }\n            throw new Error('Unrecognized action');\n        }),\n        nonce,\n        maxBlockHeight,\n        publicKey,\n    });\n}\nexports.buildDelegateAction = buildDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvZGVsZWdhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsc0JBQXNCO0FBQ3BELGdCQUFnQixtQkFBTyxDQUFDLDZHQUFnQjtBQUN4QywwQkFBMEIsbUJBQU8sQ0FBQyxpSUFBbUI7QUFDckQsUUFBUSxrR0FBa0c7QUFDMUc7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isa0VBQWtFO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1QkFBdUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQ0FBaUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvZGVsZWdhdGUuanM/MmYyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYnVpbGREZWxlZ2F0ZUFjdGlvbiA9IGV4cG9ydHMuRGVsZWdhdGVBY3Rpb24gPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuY29uc3QgYWN0aW9uX2NyZWF0b3JzXzEgPSByZXF1aXJlKFwiLi9hY3Rpb25fY3JlYXRvcnNcIik7XG5jb25zdCB7IGFkZEtleSwgY3JlYXRlQWNjb3VudCwgZGVsZXRlQWNjb3VudCwgZGVsZXRlS2V5LCBkZXBsb3lDb250cmFjdCwgZnVuY3Rpb25DYWxsLCBzdGFrZSwgdHJhbnNmZXIsIH0gPSBhY3Rpb25fY3JlYXRvcnNfMS5hY3Rpb25DcmVhdG9ycztcbmNsYXNzIERlbGVnYXRlQWN0aW9uIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuRGVsZWdhdGVBY3Rpb24gPSBEZWxlZ2F0ZUFjdGlvbjtcbi8qKlxuICogQ29tcG9zZSBhIGRlbGVnYXRlIGFjdGlvbiBmb3IgaW5jbHVzaW9uIHdpdGggYSBtZXRhIHRyYW5zYWN0aW9uIHNpZ25lZCBvbiB0aGUgc2VuZGVyJ3MgYmVoYWxmXG4gKiBAcGFyYW0gYWN0aW9ucyBUaGUgc2V0IG9mIGFjdGlvbnMgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIG1ldGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBtYXhCbG9ja0hlaWdodCBUaGUgbWF4aW11bSBibG9jayBoZWlnaHQgZm9yIHdoaWNoIHRoaXMgYWN0aW9uIGNhbiBiZSBleGVjdXRlZCBhcyBwYXJ0IG9mIGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBub25jZSBDdXJyZW50IG5vbmNlIG9uIHRoZSBhY2Nlc3Mga2V5IHVzZWQgdG8gc2lnbiB0aGUgZGVsZWdhdGUgYWN0aW9uXG4gKiBAcGFyYW0gcHVibGljS2V5IFB1YmxpYyBrZXkgZm9yIHRoZSBhY2Nlc3Mga2V5IHVzZWQgdG8gc2lnbiB0aGUgZGVsZWdhdGUgYWN0aW9uXG4gKiBAcGFyYW0gcmVjZWl2ZXJJZCBBY2NvdW50IElEIGZvciB0aGUgaW50ZW5kZWQgcmVjZWl2ZXIgb2YgdGhlIG1ldGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBzZW5kZXJJZCBBY2NvdW50IElEIGZvciB0aGUgaW50ZW5kZWQgc2lnbmVyIG9mIHRoZSBkZWxlZ2F0ZSBhY3Rpb25cbiAqL1xuZnVuY3Rpb24gYnVpbGREZWxlZ2F0ZUFjdGlvbih7IGFjdGlvbnMsIG1heEJsb2NrSGVpZ2h0LCBub25jZSwgcHVibGljS2V5LCByZWNlaXZlcklkLCBzZW5kZXJJZCwgfSkge1xuICAgIHJldHVybiBuZXcgRGVsZWdhdGVBY3Rpb24oe1xuICAgICAgICBzZW5kZXJJZCxcbiAgICAgICAgcmVjZWl2ZXJJZCxcbiAgICAgICAgYWN0aW9uczogYWN0aW9ucy5tYXAoKGEpID0+IHtcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICBpZiAoIWEudHlwZSAmJiAhYS5wYXJhbXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICBzd2l0Y2ggKGEudHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0FkZEtleSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwdWJsaWNLZXksIGFjY2Vzc0tleSB9ID0gYS5wYXJhbXM7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRLZXkocHVibGljS2V5LCBhY2Nlc3NLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdDcmVhdGVBY2NvdW50Jzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQWNjb3VudChhLnBhcmFtcy5jcmVhdGVBY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSAnRGVsZXRlQWNjb3VudCc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUFjY291bnQoYS5wYXJhbXMuZGVsZXRlQWNjb3VudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ0RlbGV0ZUtleSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUtleShhLnBhcmFtcy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdEZXBsb3lDb250cmFjdCc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlcGxveUNvbnRyYWN0KGEucGFyYW1zLmNvZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdGdW5jdGlvbkNhbGwnOiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgbWV0aG9kTmFtZSwgYXJncywgZ2FzLCBkZXBvc2l0IH0gPSBhLnBhcmFtcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uQ2FsbChtZXRob2ROYW1lLCBhcmdzLCBnYXMsIGRlcG9zaXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdTdGFrZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0YWtlKGEucGFyYW1zLnN0YWtlLCBhLnBhcmFtcy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdUcmFuc2Zlcic6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBkZXBvc2l0IH0gPSBhLnBhcmFtcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZmVyKGRlcG9zaXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5yZWNvZ25pemVkIGFjdGlvbicpO1xuICAgICAgICB9KSxcbiAgICAgICAgbm9uY2UsXG4gICAgICAgIG1heEJsb2NrSGVpZ2h0LFxuICAgICAgICBwdWJsaWNLZXksXG4gICAgfSk7XG59XG5leHBvcnRzLmJ1aWxkRGVsZWdhdGVBY3Rpb24gPSBidWlsZERlbGVnYXRlQWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/delegate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./action_creators */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./actions */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./create_transaction */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js\"), exports);\n__exportStar(__webpack_require__(/*! ./delegate */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/delegate.js\"), exports);\n__exportStar(__webpack_require__(/*! ./schema */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sign */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/sign.js\"), exports);\n__exportStar(__webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLGlJQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMsaUhBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLHVJQUFzQjtBQUMzQyxhQUFhLG1CQUFPLENBQUMsbUhBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLCtHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQywyR0FBUTtBQUM3QixhQUFhLG1CQUFPLENBQUMscUhBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL2luZGV4LmpzPzgyZGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY3Rpb25fY3JlYXRvcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FjdGlvbnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZV90cmFuc2FjdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGVsZWdhdGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NjaGVtYVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnbmF0dXJlXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/prefix.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/prefix.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DelegateActionPrefix = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst ACTIONABLE_MESSAGE_BASE = Math.pow(2, 30);\n// const NON_ACTIONABLE_MESSAGE_BASE = Math.pow(2, 31);\n/** The set of NEPs for which an [NEP-461](https://github.com/near/NEPs/pull/461) prefix is required on the message prior to hashing **/\nconst NEP = {\n    MetaTransactions: 366,\n};\n/** Base class for NEP message prefixes **/\nclass NEPPrefix extends types_1.Assignable {\n}\n/** Class for constructing prefixes on actionable (on-chain) messages **/\nclass ActionableMessagePrefix extends NEPPrefix {\n    /** Given the NEP number, set the prefix using 2^30 as the offset **/\n    constructor(prefix) {\n        super({ prefix: ACTIONABLE_MESSAGE_BASE + prefix });\n    }\n}\n/**\n * Class for constructing prefixes on non-actionable (off-chain) messages\n * @todo uncomment when off-chain messages are supported\n * **/\n// abstract class NonActionableMessagePrefix extends NEPPrefix {\n//     /** Given the NEP number, set the prefix using 2^31 as the offset **/\n//     protected constructor(prefix: number) {\n//         super({ prefix: NON_ACTIONABLE_MESSAGE_BASE + prefix });\n//     }\n// }\n/** Prefix for delegate actions whose signatures must always be distinguishable from valid transaction signatures **/\nclass DelegateActionPrefix extends ActionableMessagePrefix {\n    constructor() { super(NEP.MetaTransactions); }\n}\nexports.DelegateActionPrefix = DelegateActionPrefix;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvcHJlZml4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QixnQkFBZ0IsbUJBQU8sQ0FBQyw2R0FBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMENBQTBDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4Q0FBOEM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL3ByZWZpeC5qcz9iZmMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWxlZ2F0ZUFjdGlvblByZWZpeCA9IHZvaWQgMDtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdHlwZXNcIik7XG5jb25zdCBBQ1RJT05BQkxFX01FU1NBR0VfQkFTRSA9IE1hdGgucG93KDIsIDMwKTtcbi8vIGNvbnN0IE5PTl9BQ1RJT05BQkxFX01FU1NBR0VfQkFTRSA9IE1hdGgucG93KDIsIDMxKTtcbi8qKiBUaGUgc2V0IG9mIE5FUHMgZm9yIHdoaWNoIGFuIFtORVAtNDYxXShodHRwczovL2dpdGh1Yi5jb20vbmVhci9ORVBzL3B1bGwvNDYxKSBwcmVmaXggaXMgcmVxdWlyZWQgb24gdGhlIG1lc3NhZ2UgcHJpb3IgdG8gaGFzaGluZyAqKi9cbmNvbnN0IE5FUCA9IHtcbiAgICBNZXRhVHJhbnNhY3Rpb25zOiAzNjYsXG59O1xuLyoqIEJhc2UgY2xhc3MgZm9yIE5FUCBtZXNzYWdlIHByZWZpeGVzICoqL1xuY2xhc3MgTkVQUHJlZml4IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbi8qKiBDbGFzcyBmb3IgY29uc3RydWN0aW5nIHByZWZpeGVzIG9uIGFjdGlvbmFibGUgKG9uLWNoYWluKSBtZXNzYWdlcyAqKi9cbmNsYXNzIEFjdGlvbmFibGVNZXNzYWdlUHJlZml4IGV4dGVuZHMgTkVQUHJlZml4IHtcbiAgICAvKiogR2l2ZW4gdGhlIE5FUCBudW1iZXIsIHNldCB0aGUgcHJlZml4IHVzaW5nIDJeMzAgYXMgdGhlIG9mZnNldCAqKi9cbiAgICBjb25zdHJ1Y3RvcihwcmVmaXgpIHtcbiAgICAgICAgc3VwZXIoeyBwcmVmaXg6IEFDVElPTkFCTEVfTUVTU0FHRV9CQVNFICsgcHJlZml4IH0pO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgZm9yIGNvbnN0cnVjdGluZyBwcmVmaXhlcyBvbiBub24tYWN0aW9uYWJsZSAob2ZmLWNoYWluKSBtZXNzYWdlc1xuICogQHRvZG8gdW5jb21tZW50IHdoZW4gb2ZmLWNoYWluIG1lc3NhZ2VzIGFyZSBzdXBwb3J0ZWRcbiAqICoqL1xuLy8gYWJzdHJhY3QgY2xhc3MgTm9uQWN0aW9uYWJsZU1lc3NhZ2VQcmVmaXggZXh0ZW5kcyBORVBQcmVmaXgge1xuLy8gICAgIC8qKiBHaXZlbiB0aGUgTkVQIG51bWJlciwgc2V0IHRoZSBwcmVmaXggdXNpbmcgMl4zMSBhcyB0aGUgb2Zmc2V0ICoqL1xuLy8gICAgIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihwcmVmaXg6IG51bWJlcikge1xuLy8gICAgICAgICBzdXBlcih7IHByZWZpeDogTk9OX0FDVElPTkFCTEVfTUVTU0FHRV9CQVNFICsgcHJlZml4IH0pO1xuLy8gICAgIH1cbi8vIH1cbi8qKiBQcmVmaXggZm9yIGRlbGVnYXRlIGFjdGlvbnMgd2hvc2Ugc2lnbmF0dXJlcyBtdXN0IGFsd2F5cyBiZSBkaXN0aW5ndWlzaGFibGUgZnJvbSB2YWxpZCB0cmFuc2FjdGlvbiBzaWduYXR1cmVzICoqL1xuY2xhc3MgRGVsZWdhdGVBY3Rpb25QcmVmaXggZXh0ZW5kcyBBY3Rpb25hYmxlTWVzc2FnZVByZWZpeCB7XG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKE5FUC5NZXRhVHJhbnNhY3Rpb25zKTsgfVxufVxuZXhwb3J0cy5EZWxlZ2F0ZUFjdGlvblByZWZpeCA9IERlbGVnYXRlQWN0aW9uUHJlZml4O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/prefix.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SCHEMA = exports.SignedTransaction = exports.Transaction = exports.decodeSignedTransaction = exports.decodeTransaction = exports.encodeTransaction = exports.encodeSignedDelegate = exports.encodeDelegateAction = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst borsh_1 = __webpack_require__(/*! borsh */ \"(ssr)/./node_modules/borsh/lib/cjs/index.js\");\nconst prefix_1 = __webpack_require__(/*! ./prefix */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/prefix.js\");\n/**\n * Borsh-encode a delegate action for inclusion as an action within a meta transaction\n * NB per NEP-461 this requires a Borsh-serialized prefix specific to delegate actions, ensuring\n *  signed delegate actions may never be identical to signed transactions with the same fields\n * @param delegateAction Delegate action to be signed by the meta transaction sender\n */\nfunction encodeDelegateAction(delegateAction) {\n    return new Uint8Array([\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateActionPrefix, new prefix_1.DelegateActionPrefix()),\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateAction, delegateAction),\n    ]);\n}\nexports.encodeDelegateAction = encodeDelegateAction;\n/**\n * Borsh-encode a signed delegate for validation and execution by a relayer\n * @param signedDelegate Signed delegate to be executed in a meta transaction\n */\nfunction encodeSignedDelegate(signedDelegate) {\n    return (0, borsh_1.serialize)(exports.SCHEMA.SignedDelegate, signedDelegate);\n}\nexports.encodeSignedDelegate = encodeSignedDelegate;\n/**\n* Borsh-encode a transaction or signed transaction into a serialized form.\n* @param transaction The transaction or signed transaction object to be encoded.\n* @returns A serialized representation of the input transaction.\n*/\nfunction encodeTransaction(transaction) {\n    const schema = transaction instanceof SignedTransaction ? exports.SCHEMA.SignedTransaction : exports.SCHEMA.Transaction;\n    return (0, borsh_1.serialize)(schema, transaction);\n}\nexports.encodeTransaction = encodeTransaction;\n/**\n * Borsh-decode a Transaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeTransaction(bytes) {\n    return new Transaction((0, borsh_1.deserialize)(exports.SCHEMA.Transaction, bytes));\n}\nexports.decodeTransaction = decodeTransaction;\n/**\n * Borsh-decode a SignedTransaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeSignedTransaction(bytes) {\n    return new SignedTransaction((0, borsh_1.deserialize)(exports.SCHEMA.SignedTransaction, bytes));\n}\nexports.decodeSignedTransaction = decodeSignedTransaction;\nclass Transaction extends types_1.Assignable {\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeTransaction(bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends types_1.Assignable {\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeSignedTransaction(bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\nexports.SCHEMA = new class BorshSchema {\n    constructor() {\n        this.Ed25519Signature = {\n            struct: {\n                data: { array: { type: 'u8', len: 64 } },\n            }\n        };\n        this.Secp256k1Signature = {\n            struct: {\n                data: { array: { type: 'u8', len: 65 } },\n            }\n        };\n        this.Signature = {\n            enum: [\n                { struct: { ed25519Signature: this.Ed25519Signature } },\n                { struct: { secp256k1Signature: this.Secp256k1Signature } },\n            ]\n        };\n        this.Ed25519Data = {\n            struct: {\n                data: { array: { type: 'u8', len: 32 } },\n            }\n        };\n        this.Secp256k1Data = {\n            struct: {\n                data: { array: { type: 'u8', len: 64 } },\n            }\n        };\n        this.PublicKey = {\n            enum: [\n                { struct: { ed25519Key: this.Ed25519Data } },\n                { struct: { secp256k1Key: this.Secp256k1Data } },\n            ]\n        };\n        this.FunctionCallPermission = {\n            struct: {\n                allowance: { option: 'u128' },\n                receiverId: 'string',\n                methodNames: { array: { type: 'string' } },\n            }\n        };\n        this.FullAccessPermission = {\n            struct: {}\n        };\n        this.AccessKeyPermission = {\n            enum: [\n                { struct: { functionCall: this.FunctionCallPermission } },\n                { struct: { fullAccess: this.FullAccessPermission } },\n            ]\n        };\n        this.AccessKey = {\n            struct: {\n                nonce: 'u64',\n                permission: this.AccessKeyPermission,\n            }\n        };\n        this.CreateAccount = {\n            struct: {}\n        };\n        this.DeployContract = {\n            struct: {\n                code: { array: { type: 'u8' } },\n            }\n        };\n        this.FunctionCall = {\n            struct: {\n                methodName: 'string',\n                args: { array: { type: 'u8' } },\n                gas: 'u64',\n                deposit: 'u128',\n            }\n        };\n        this.Transfer = {\n            struct: {\n                deposit: 'u128',\n            }\n        };\n        this.Stake = {\n            struct: {\n                stake: 'u128',\n                publicKey: this.PublicKey,\n            }\n        };\n        this.AddKey = {\n            struct: {\n                publicKey: this.PublicKey,\n                accessKey: this.AccessKey,\n            }\n        };\n        this.DeleteKey = {\n            struct: {\n                publicKey: this.PublicKey,\n            }\n        };\n        this.DeleteAccount = {\n            struct: {\n                beneficiaryId: 'string',\n            }\n        };\n        this.DelegateActionPrefix = {\n            struct: {\n                prefix: 'u32',\n            }\n        };\n        this.ClassicActions = {\n            enum: [\n                { struct: { createAccount: this.CreateAccount } },\n                { struct: { deployContract: this.DeployContract } },\n                { struct: { functionCall: this.FunctionCall } },\n                { struct: { transfer: this.Transfer } },\n                { struct: { stake: this.Stake } },\n                { struct: { addKey: this.AddKey } },\n                { struct: { deleteKey: this.DeleteKey } },\n                { struct: { deleteAccount: this.DeleteAccount } },\n            ]\n        };\n        this.DelegateAction = {\n            struct: {\n                senderId: 'string',\n                receiverId: 'string',\n                actions: { array: { type: this.ClassicActions } },\n                nonce: 'u64',\n                maxBlockHeight: 'u64',\n                publicKey: this.PublicKey,\n            }\n        };\n        this.SignedDelegate = {\n            struct: {\n                delegateAction: this.DelegateAction,\n                signature: this.Signature,\n            }\n        };\n        this.Action = {\n            enum: [\n                { struct: { createAccount: this.CreateAccount } },\n                { struct: { deployContract: this.DeployContract } },\n                { struct: { functionCall: this.FunctionCall } },\n                { struct: { transfer: this.Transfer } },\n                { struct: { stake: this.Stake } },\n                { struct: { addKey: this.AddKey } },\n                { struct: { deleteKey: this.DeleteKey } },\n                { struct: { deleteAccount: this.DeleteAccount } },\n                { struct: { signedDelegate: this.SignedDelegate } },\n            ]\n        };\n        this.Transaction = {\n            struct: {\n                signerId: 'string',\n                publicKey: this.PublicKey,\n                nonce: 'u64',\n                receiverId: 'string',\n                blockHash: { array: { type: 'u8', len: 32 } },\n                actions: { array: { type: this.Action } },\n            }\n        };\n        this.SignedTransaction = {\n            struct: {\n                transaction: this.Transaction,\n                signature: this.Signature,\n            }\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/sign.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/sign.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.signDelegateAction = exports.signTransaction = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst actions_1 = __webpack_require__(/*! ./actions */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js\");\nconst create_transaction_1 = __webpack_require__(/*! ./create_transaction */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js\");\nconst schema_1 = __webpack_require__(/*! ./schema */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js\");\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etc…)\n */\nfunction signTransactionObject(transaction, signer, accountId, networkId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const message = (0, schema_1.encodeTransaction)(transaction);\n        const hash = new Uint8Array((0, sha256_1.sha256)(message));\n        const signature = yield signer.signMessage(message, accountId, networkId);\n        const keyType = transaction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n        const signedTx = new schema_1.SignedTransaction({\n            transaction,\n            signature: new signature_1.Signature({ keyType, data: signature.signature })\n        });\n        return [hash, signedTx];\n    });\n}\nfunction signTransaction(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (args[0].constructor === schema_1.Transaction) {\n            const [transaction, signer, accountId, networkId] = args;\n            return signTransactionObject(transaction, signer, accountId, networkId);\n        }\n        else {\n            const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n            const publicKey = yield signer.getPublicKey(accountId, networkId);\n            const transaction = (0, create_transaction_1.createTransaction)(accountId, publicKey, receiverId, nonce, actions, blockHash);\n            return signTransactionObject(transaction, signer, accountId, networkId);\n        }\n    });\n}\nexports.signTransaction = signTransaction;\n/**\n * Sign a delegate action\n * @options SignDelegate options\n * @param options.delegateAction Delegate action to be signed by the meta transaction sender\n * @param options.signer Signer instance for the meta transaction sender\n */\nfunction signDelegateAction({ delegateAction, signer }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const message = (0, schema_1.encodeDelegateAction)(delegateAction);\n        const signature = yield signer.sign(message);\n        const keyType = delegateAction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n        const signedDelegateAction = new actions_1.SignedDelegate({\n            delegateAction,\n            signature: new signature_1.Signature({\n                keyType,\n                data: signature,\n            }),\n        });\n        return {\n            hash: new Uint8Array((0, sha256_1.sha256)(message)),\n            signedDelegateAction,\n        };\n    });\n}\nexports.signDelegateAction = signDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvc2lnbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsdUJBQXVCO0FBQ3BELGlCQUFpQixtQkFBTyxDQUFDLDBFQUFzQjtBQUMvQyxrQkFBa0IsbUJBQU8sQ0FBQyxpSEFBVztBQUNyQyw2QkFBNkIsbUJBQU8sQ0FBQyx1SUFBc0I7QUFDM0QsaUJBQWlCLG1CQUFPLENBQUMsK0dBQVU7QUFDbkMsb0JBQW9CLG1CQUFPLENBQUMscUhBQWE7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMsK0dBQWlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixRQUFRO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsb0NBQW9DO0FBQ3ZGLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsd0JBQXdCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL3NpZ24uanM/Mzg4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zaWduRGVsZWdhdGVBY3Rpb24gPSBleHBvcnRzLnNpZ25UcmFuc2FjdGlvbiA9IHZvaWQgMDtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3QgYWN0aW9uc18xID0gcmVxdWlyZShcIi4vYWN0aW9uc1wiKTtcbmNvbnN0IGNyZWF0ZV90cmFuc2FjdGlvbl8xID0gcmVxdWlyZShcIi4vY3JlYXRlX3RyYW5zYWN0aW9uXCIpO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWFcIik7XG5jb25zdCBzaWduYXR1cmVfMSA9IHJlcXVpcmUoXCIuL3NpZ25hdHVyZVwiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2NyeXB0b1wiKTtcbi8qKlxuICogU2lnbnMgYSBnaXZlbiB0cmFuc2FjdGlvbiBmcm9tIGFuIGFjY291bnQgd2l0aCBnaXZlbiBrZXlzLCBhcHBsaWVkIHRvIHRoZSBnaXZlbiBuZXR3b3JrXG4gKiBAcGFyYW0gdHJhbnNhY3Rpb24gVGhlIFRyYW5zYWN0aW9uIG9iamVjdCB0byBzaWduXG4gKiBAcGFyYW0gc2lnbmVyIFRoZSB7U2lnbmVyfSBvYmplY3QgdGhhdCBhc3Npc3RzIHdpdGggc2lnbmluZyBrZXlzXG4gKiBAcGFyYW0gYWNjb3VudElkIFRoZSBodW1hbi1yZWFkYWJsZSBORUFSIGFjY291bnQgbmFtZVxuICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gKi9cbmZ1bmN0aW9uIHNpZ25UcmFuc2FjdGlvbk9iamVjdCh0cmFuc2FjdGlvbiwgc2lnbmVyLCBhY2NvdW50SWQsIG5ldHdvcmtJZCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgc2NoZW1hXzEuZW5jb2RlVHJhbnNhY3Rpb24pKHRyYW5zYWN0aW9uKTtcbiAgICAgICAgY29uc3QgaGFzaCA9IG5ldyBVaW50OEFycmF5KCgwLCBzaGEyNTZfMS5zaGEyNTYpKG1lc3NhZ2UpKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0geWllbGQgc2lnbmVyLnNpZ25NZXNzYWdlKG1lc3NhZ2UsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgY29uc3Qga2V5VHlwZSA9IHRyYW5zYWN0aW9uLnB1YmxpY0tleS5lZDI1NTE5S2V5ID8gY3J5cHRvXzEuS2V5VHlwZS5FRDI1NTE5IDogY3J5cHRvXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgICAgIGNvbnN0IHNpZ25lZFR4ID0gbmV3IHNjaGVtYV8xLlNpZ25lZFRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiBuZXcgc2lnbmF0dXJlXzEuU2lnbmF0dXJlKHsga2V5VHlwZSwgZGF0YTogc2lnbmF0dXJlLnNpZ25hdHVyZSB9KVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFtoYXNoLCBzaWduZWRUeF07XG4gICAgfSk7XG59XG5mdW5jdGlvbiBzaWduVHJhbnNhY3Rpb24oLi4uYXJncykge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGlmIChhcmdzWzBdLmNvbnN0cnVjdG9yID09PSBzY2hlbWFfMS5UcmFuc2FjdGlvbikge1xuICAgICAgICAgICAgY29uc3QgW3RyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkXSA9IGFyZ3M7XG4gICAgICAgICAgICByZXR1cm4gc2lnblRyYW5zYWN0aW9uT2JqZWN0KHRyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IFtyZWNlaXZlcklkLCBub25jZSwgYWN0aW9ucywgYmxvY2tIYXNoLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkXSA9IGFyZ3M7XG4gICAgICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB5aWVsZCBzaWduZXIuZ2V0UHVibGljS2V5KGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gKDAsIGNyZWF0ZV90cmFuc2FjdGlvbl8xLmNyZWF0ZVRyYW5zYWN0aW9uKShhY2NvdW50SWQsIHB1YmxpY0tleSwgcmVjZWl2ZXJJZCwgbm9uY2UsIGFjdGlvbnMsIGJsb2NrSGFzaCk7XG4gICAgICAgICAgICByZXR1cm4gc2lnblRyYW5zYWN0aW9uT2JqZWN0KHRyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5zaWduVHJhbnNhY3Rpb24gPSBzaWduVHJhbnNhY3Rpb247XG4vKipcbiAqIFNpZ24gYSBkZWxlZ2F0ZSBhY3Rpb25cbiAqIEBvcHRpb25zIFNpZ25EZWxlZ2F0ZSBvcHRpb25zXG4gKiBAcGFyYW0gb3B0aW9ucy5kZWxlZ2F0ZUFjdGlvbiBEZWxlZ2F0ZSBhY3Rpb24gdG8gYmUgc2lnbmVkIGJ5IHRoZSBtZXRhIHRyYW5zYWN0aW9uIHNlbmRlclxuICogQHBhcmFtIG9wdGlvbnMuc2lnbmVyIFNpZ25lciBpbnN0YW5jZSBmb3IgdGhlIG1ldGEgdHJhbnNhY3Rpb24gc2VuZGVyXG4gKi9cbmZ1bmN0aW9uIHNpZ25EZWxlZ2F0ZUFjdGlvbih7IGRlbGVnYXRlQWN0aW9uLCBzaWduZXIgfSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgc2NoZW1hXzEuZW5jb2RlRGVsZWdhdGVBY3Rpb24pKGRlbGVnYXRlQWN0aW9uKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0geWllbGQgc2lnbmVyLnNpZ24obWVzc2FnZSk7XG4gICAgICAgIGNvbnN0IGtleVR5cGUgPSBkZWxlZ2F0ZUFjdGlvbi5wdWJsaWNLZXkuZWQyNTUxOUtleSA/IGNyeXB0b18xLktleVR5cGUuRUQyNTUxOSA6IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxO1xuICAgICAgICBjb25zdCBzaWduZWREZWxlZ2F0ZUFjdGlvbiA9IG5ldyBhY3Rpb25zXzEuU2lnbmVkRGVsZWdhdGUoe1xuICAgICAgICAgICAgZGVsZWdhdGVBY3Rpb24sXG4gICAgICAgICAgICBzaWduYXR1cmU6IG5ldyBzaWduYXR1cmVfMS5TaWduYXR1cmUoe1xuICAgICAgICAgICAgICAgIGtleVR5cGUsXG4gICAgICAgICAgICAgICAgZGF0YTogc2lnbmF0dXJlLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaGFzaDogbmV3IFVpbnQ4QXJyYXkoKDAsIHNoYTI1Nl8xLnNoYTI1NikobWVzc2FnZSkpLFxuICAgICAgICAgICAgc2lnbmVkRGVsZWdhdGVBY3Rpb24sXG4gICAgICAgIH07XG4gICAgfSk7XG59XG5leHBvcnRzLnNpZ25EZWxlZ2F0ZUFjdGlvbiA9IHNpZ25EZWxlZ2F0ZUFjdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/sign.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signature = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nclass ED25519Signature extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = crypto_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1Signature extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = crypto_1.KeyType.SECP256K1;\n    }\n}\nclass Signature extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === crypto_1.KeyType.ED25519) {\n            this.ed25519Signature = { keyType, data };\n        }\n        else if (keyType === crypto_1.KeyType.SECP256K1) {\n            this.secp256k1Signature = { keyType, data };\n        }\n    }\n    get signature() {\n        return this.ed25519Signature || this.secp256k1Signature;\n    }\n    get signatureType() {\n        return this.signature.keyType;\n    }\n    get data() {\n        return this.signature.data;\n    }\n}\nexports.Signature = Signature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvc2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQkFBaUIsbUJBQU8sQ0FBQywrR0FBaUI7QUFDMUMsZ0JBQWdCLG1CQUFPLENBQUMsNkdBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGVBQWU7QUFDakMsZ0JBQWdCO0FBQ2hCO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9zaWduYXR1cmUuanM/Y2YwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmF0dXJlID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQG5lYXItanMvY3J5cHRvXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmNsYXNzIEVEMjU1MTlTaWduYXR1cmUgZXh0ZW5kcyB0eXBlc18xLkFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmtleVR5cGUgPSBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTk7XG4gICAgfVxufVxuY2xhc3MgU0VDUDI1NksxU2lnbmF0dXJlIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5rZXlUeXBlID0gY3J5cHRvXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgfVxufVxuY2xhc3MgU2lnbmF0dXJlIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGtleVR5cGUsIGRhdGEgfSkge1xuICAgICAgICBzdXBlcih7fSk7XG4gICAgICAgIGlmIChrZXlUeXBlID09PSBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTkpIHtcbiAgICAgICAgICAgIHRoaXMuZWQyNTUxOVNpZ25hdHVyZSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleVR5cGUgPT09IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxKSB7XG4gICAgICAgICAgICB0aGlzLnNlY3AyNTZrMVNpZ25hdHVyZSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBzaWduYXR1cmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVkMjU1MTlTaWduYXR1cmUgfHwgdGhpcy5zZWNwMjU2azFTaWduYXR1cmU7XG4gICAgfVxuICAgIGdldCBzaWduYXR1cmVUeXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaWduYXR1cmUua2V5VHlwZTtcbiAgICB9XG4gICAgZ2V0IGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNpZ25hdHVyZS5kYXRhO1xuICAgIH1cbn1cbmV4cG9ydHMuU2lnbmF0dXJlID0gU2lnbmF0dXJlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/assignable.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/assignable.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Assignable = void 0;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9hc3NpZ25hYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2Fzc2lnbmFibGUuanM/NmQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXNzaWduYWJsZSA9IHZvaWQgMDtcbmNsYXNzIEFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKHByb3BlcnRpZXMpIHtcbiAgICAgICAgT2JqZWN0LmtleXMocHJvcGVydGllcykubWFwKChrZXkpID0+IHtcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IHByb3BlcnRpZXNba2V5XTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Bc3NpZ25hYmxlID0gQXNzaWduYWJsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/assignable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/errors.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/errors.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcsMkJBQTJCO0FBQ25HO0FBQ0E7QUFDQSxzRkFBc0YsMENBQTBDO0FBQ2hJO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLDBCQUEwQixTQUFTLE9BQU8sUUFBUSx1QkFBdUIseUJBQXlCO0FBQ2xHO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanM/MzU5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JDb250ZXh0ID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IGV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFBvc2l0aW9uYWxBcmdzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDb250cmFjdCBtZXRob2QgY2FsbHMgZXhwZWN0IG5hbWVkIGFyZ3VtZW50cyB3cmFwcGVkIGluIG9iamVjdCwgZS5nLiB7IGFyZ05hbWUxOiBhcmdWYWx1ZTEsIGFyZ05hbWUyOiBhcmdWYWx1ZTIgfScpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IFBvc2l0aW9uYWxBcmdzRXJyb3I7XG5jbGFzcyBBcmd1bWVudFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdOYW1lLCBhcmdUeXBlLCBhcmdWYWx1ZSkge1xuICAgICAgICBzdXBlcihgRXhwZWN0ZWQgJHthcmdUeXBlfSBmb3IgJyR7YXJnTmFtZX0nIGFyZ3VtZW50LCBidXQgZ290ICcke0pTT04uc3RyaW5naWZ5KGFyZ1ZhbHVlKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IEFyZ3VtZW50VHlwZUVycm9yO1xuY2xhc3MgVHlwZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB0eXBlLCBjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlIHx8ICdVbnR5cGVkRXJyb3InO1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgIH1cbn1cbmV4cG9ydHMuVHlwZWRFcnJvciA9IFR5cGVkRXJyb3I7XG5jbGFzcyBFcnJvckNvbnRleHQge1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zYWN0aW9uSGFzaCkge1xuICAgICAgICB0aGlzLnRyYW5zYWN0aW9uSGFzaCA9IHRyYW5zYWN0aW9uSGFzaDtcbiAgICB9XG59XG5leHBvcnRzLkVycm9yQ29udGV4dCA9IEVycm9yQ29udGV4dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./assignable */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/assignable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsZ0hBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLHdHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxrSEFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcz8wNTliIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXNzaWduYWJsZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = void 0;\nvar light_client_1 = __webpack_require__(/*! ./light_client */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/light_client.js\");\nObject.defineProperty(exports, \"IdType\", ({ enumerable: true, get: function () { return light_client_1.IdType; } }));\nvar response_1 = __webpack_require__(/*! ./response */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/response.js\");\nObject.defineProperty(exports, \"ExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.ExecutionStatusBasic; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.FinalExecutionStatusBasic; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEIsR0FBRyxjQUFjO0FBQ2pGLHFCQUFxQixtQkFBTyxDQUFDLDZIQUFnQjtBQUM3QywwQ0FBeUMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDbEgsaUJBQWlCLG1CQUFPLENBQUMscUhBQVk7QUFDckMsd0RBQXVELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzFJLDZEQUE0RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcz8yMDlkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuSWRUeXBlID0gdm9pZCAwO1xudmFyIGxpZ2h0X2NsaWVudF8xID0gcmVxdWlyZShcIi4vbGlnaHRfY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsaWdodF9jbGllbnRfMS5JZFR5cGU7IH0gfSk7XG52YXIgcmVzcG9uc2VfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXhlY3V0aW9uU3RhdHVzQmFzaWNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlXzEuRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZV8xLkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/light_client.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/light_client.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdType = void 0;\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9saWdodF9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QixjQUFjLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy90eXBlcy9saWIvcHJvdmlkZXIvbGlnaHRfY2xpZW50LmpzP2Q3MzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIE5FQVIgUlBDIEFQSSByZXF1ZXN0IHR5cGVzIGFuZCByZXNwb25zZXNcbiAqIEBtb2R1bGVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JZFR5cGUgPSB2b2lkIDA7XG52YXIgSWRUeXBlO1xuKGZ1bmN0aW9uIChJZFR5cGUpIHtcbiAgICBJZFR5cGVbXCJUcmFuc2FjdGlvblwiXSA9IFwidHJhbnNhY3Rpb25cIjtcbiAgICBJZFR5cGVbXCJSZWNlaXB0XCJdID0gXCJyZWNlaXB0XCI7XG59KShJZFR5cGUgPSBleHBvcnRzLklkVHlwZSB8fCAoZXhwb3J0cy5JZFR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/light_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/response.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/response.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBELDRCQUE0QixLQUFLO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9FQUFvRSxpQ0FBaUMsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcz9iZTUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHZvaWQgMDtcbnZhciBFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRXhlY3V0aW9uU3RhdHVzQmFzaWMpIHtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlVua25vd25cIl0gPSBcIlVua25vd25cIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlBlbmRpbmdcIl0gPSBcIlBlbmRpbmdcIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIkZhaWx1cmVcIl0gPSBcIkZhaWx1cmVcIjtcbn0pKEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHt9KSk7XG52YXIgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYykge1xuICAgIEZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJOb3RTdGFydGVkXCJdID0gXCJOb3RTdGFydGVkXCI7XG4gICAgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlN0YXJ0ZWRcIl0gPSBcIlN0YXJ0ZWRcIjtcbiAgICBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljW1wiRmFpbHVyZVwiXSA9IFwiRmFpbHVyZVwiO1xufSkoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/constants.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/constants.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = BigInt('30000000000000');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanM/OTc4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9GVU5DVElPTl9DQUxMX0dBUyA9IHZvaWQgMDtcbi8vIERlZmF1bHQgYW1vdW50IG9mIGdhcyB0byBiZSBzZW50IHdpdGggdGhlIGZ1bmN0aW9uIGNhbGxzLiBVc2VkIHRvIHBheSBmb3IgdGhlIGZlZXNcbi8vIGluY3VycmVkIHdoaWxlIHJ1bm5pbmcgdGhlIGNvbnRyYWN0IGV4ZWN1dGlvbi4gVGhlIHVudXNlZCBhbW91bnQgd2lsbCBiZSByZWZ1bmRlZCBiYWNrIHRvXG4vLyB0aGUgb3JpZ2luYXRvci5cbi8vIER1ZSB0byBwcm90b2NvbCBjaGFuZ2VzIHRoYXQgY2hhcmdlIHVwZnJvbnQgZm9yIHRoZSBtYXhpbXVtIHBvc3NpYmxlIGdhcyBwcmljZSBpbmZsYXRpb24gZHVlIHRvXG4vLyBmdWxsIGJsb2NrcywgdGhlIHByaWNlIG9mIG1heF9wcmVwYWlkX2dhcyBpcyBkZWNyZWFzZWQgdG8gYDMwMCAqIDEwKioxMmAuXG4vLyBGb3IgZGlzY3Vzc2lvbiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25lYXJwcm90b2NvbC9ORVBzL2lzc3Vlcy82N1xuZXhwb3J0cy5ERUZBVUxUX0ZVTkNUSU9OX0NBTExfR0FTID0gQmlnSW50KCczMDAwMDAwMDAwMDAwMCcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/errors.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/errors.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logWarning = void 0;\nconst logger_1 = __webpack_require__(/*! ../logger */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js\");\n/** @deprecated */\nfunction logWarning(...args) {\n    const [message, ...optionalParams] = args;\n    logger_1.Logger.warn(message, ...optionalParams);\n}\nexports.logWarning = logWarning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixpQkFBaUIsbUJBQU8sQ0FBQywrR0FBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2Vycm9ycy9lcnJvcnMuanM/YTBmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9nV2FybmluZyA9IHZvaWQgMDtcbmNvbnN0IGxvZ2dlcl8xID0gcmVxdWlyZShcIi4uL2xvZ2dlclwiKTtcbi8qKiBAZGVwcmVjYXRlZCAqL1xuZnVuY3Rpb24gbG9nV2FybmluZyguLi5hcmdzKSB7XG4gICAgY29uc3QgW21lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zXSA9IGFyZ3M7XG4gICAgbG9nZ2VyXzEuTG9nZ2VyLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xufVxuZXhwb3J0cy5sb2dXYXJuaW5nID0gbG9nV2FybmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseRpcError = exports.parseResultError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.ServerError = exports.logWarning = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/errors.js\");\nObject.defineProperty(exports, \"logWarning\", ({ enumerable: true, get: function () { return errors_1.logWarning; } }));\nvar rpc_errors_1 = __webpack_require__(/*! ./rpc_errors */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_errors.js\");\nObject.defineProperty(exports, \"ServerError\", ({ enumerable: true, get: function () { return rpc_errors_1.ServerError; } }));\nObject.defineProperty(exports, \"formatError\", ({ enumerable: true, get: function () { return rpc_errors_1.formatError; } }));\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", ({ enumerable: true, get: function () { return rpc_errors_1.getErrorTypeFromErrorMessage; } }));\nObject.defineProperty(exports, \"parseResultError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseResultError; } }));\nObject.defineProperty(exports, \"parseRpcError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseRpcError; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsd0JBQXdCLEdBQUcsb0NBQW9DLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsa0JBQWtCO0FBQ3hKLGVBQWUsbUJBQU8sQ0FBQywrR0FBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbUJBQW1CLG1CQUFPLENBQUMsdUhBQWM7QUFDekMsK0NBQThDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzFILCtDQUE4QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMxSCxnRUFBK0QsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDNUosb0RBQW1ELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3BJLGlEQUFnRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanM/MzI0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VScGNFcnJvciA9IGV4cG9ydHMucGFyc2VSZXN1bHRFcnJvciA9IGV4cG9ydHMuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZSA9IGV4cG9ydHMuZm9ybWF0RXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gZXhwb3J0cy5sb2dXYXJuaW5nID0gdm9pZCAwO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibG9nV2FybmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEubG9nV2FybmluZzsgfSB9KTtcbnZhciBycGNfZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9ycGNfZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5TZXJ2ZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZm9ybWF0RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmVzdWx0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5wYXJzZVJlc3VsdEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VScGNFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcnBjX2Vycm9yc18xLnBhcnNlUnBjRXJyb3I7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_errors.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_errors.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst mustache_1 = __importDefault(__webpack_require__(/*! mustache */ \"(ssr)/./node_modules/mustache/mustache.js\"));\nconst format_1 = __webpack_require__(/*! ../format */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js\");\nconst error_messages_json_1 = __importDefault(__webpack_require__(/*! ./error_messages.json */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/error_messages.json\"));\nconst rpc_error_schema_json_1 = __importDefault(__webpack_require__(/*! ./rpc_error_schema.json */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json\"));\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => (0, format_1.formatNearAmount)(render(n))\n};\nclass ServerError extends types_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], Object.assign(Object.assign({}, errorData), mustacheHelpers));\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage, errorType) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /wasm execution failed with error: MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return errorType;\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baseDecode = exports.baseEncode = exports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bs58_1 = __importDefault(__webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = BigInt(10) ** BigInt(exports.NEAR_NOMINATION_EXP);\n// Pre-calculate offsets used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = BigInt(10);\nfor (let i = 0, offset = BigInt(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset * BN10) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    let balanceBN = BigInt(balance);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN += ROUNDING_OFFSETS[roundingExp];\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || \"0\";\n    const fractionStr = balance\n        .substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, \"0\")\n        .substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split(\".\");\n    const wholePart = split[0];\n    const fracPart = split[1] || \"\";\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, \"0\"));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, \"\").trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, \"\");\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, \"\");\n    if (value === \"\") {\n        return \"0\";\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, \"$1,$2\");\n    }\n    return value;\n}\n/**\n * Encodes a Uint8Array or string into base58\n * @param value Uint8Array or string representing a borsh encoded object\n * @returns string base58 encoding of the value\n */\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        const bytes = [];\n        for (let c = 0; c < value.length; c++) {\n            bytes.push(value.charCodeAt(c));\n        }\n        value = new Uint8Array(bytes);\n    }\n    return bs58_1.default.encode(value);\n}\nexports.baseEncode = baseEncode;\n/**\n * Decodes a base58 string into a Uint8Array\n * @param value base58 encoded string\n * @returns Uint8Array representing the decoded value\n */\nfunction baseDecode(value) {\n    return new Uint8Array(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/constants.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./format */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logging */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logging.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./validators */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/validators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsOEdBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLDhHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyx3R0FBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsMEdBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLDRHQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyxnSEFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsOEdBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHNHQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2luZGV4LmpzPzI4Y2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZm9ybWF0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2dnaW5nXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmFsaWRhdG9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/console.logger.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/console.logger.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    constructor(logLevels) {\n        this.logLevels = logLevels;\n        this.isLevelEnabled = (level) => {\n            return this.logLevels.includes(level);\n        };\n    }\n    print(level, message, ...optionalParams) {\n        switch (level) {\n            case 'error':\n            case 'fatal':\n                return console.error(message, ...optionalParams);\n            case 'warn':\n                return console.warn(message, ...optionalParams);\n            case 'log':\n                return console.log(message, ...optionalParams);\n            case 'debug':\n            case 'verbose':\n                return console.debug(message, ...optionalParams);\n        }\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose'))\n            return;\n        this.print('verbose', message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug'))\n            return;\n        this.print('debug', message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log'))\n            return;\n        this.print('log', message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn'))\n            return;\n        this.print('warn', message, ...optionalParams);\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error'))\n            return;\n        this.print('error', message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        if (!this.isLevelEnabled('fatal'))\n            return;\n        this.print('fatal', message, ...optionalParams);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvY29uc29sZS5sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9jb25zb2xlLmxvZ2dlci5qcz8xMzJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gdm9pZCAwO1xuY2xhc3MgQ29uc29sZUxvZ2dlciB7XG4gICAgY29uc3RydWN0b3IobG9nTGV2ZWxzKSB7XG4gICAgICAgIHRoaXMubG9nTGV2ZWxzID0gbG9nTGV2ZWxzO1xuICAgICAgICB0aGlzLmlzTGV2ZWxFbmFibGVkID0gKGxldmVsKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5sb2dMZXZlbHMuaW5jbHVkZXMobGV2ZWwpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBwcmludChsZXZlbCwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgc3dpdGNoIChsZXZlbCkge1xuICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgY2FzZSAnZmF0YWwnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgICAgIGNhc2UgJ3dhcm4nOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnbG9nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnZGVidWcnOlxuICAgICAgICAgICAgY2FzZSAndmVyYm9zZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd2ZXJib3NlJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3ZlcmJvc2UnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGRlYnVnKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZGVidWcnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZGVidWcnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2xvZycpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByaW50KCdsb2cnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHdhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd3YXJuJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3dhcm4nLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZXJyb3InKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZXJyb3InLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZmF0YWwnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZmF0YWwnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gQ29uc29sZUxvZ2dlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/console.logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nvar logger_1 = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/logger.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQywrR0FBVTtBQUNqQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2luZGV4LmpzPzg3M2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ2dlciA9IHZvaWQgMDtcbnZhciBsb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2xvZ2dlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ2dlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyXzEuTG9nZ2VyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/logger.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/logger.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nconst console_logger_1 = __webpack_require__(/*! ./console.logger */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/console.logger.js\");\nconst DEFAULT_LOG_LEVELS = [\n    'verbose',\n    'debug',\n    'log',\n    'warn',\n    'error',\n    'fatal',\n];\nconst DEFAULT_LOGGER = typeof process === 'object' && process.env.NEAR_NO_LOGS\n    ? undefined\n    : new console_logger_1.ConsoleLogger(DEFAULT_LOG_LEVELS);\n/**\n * Used to log the library messages\n */\nclass Logger {\n    static error(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.error(message, ...optionalParams);\n    }\n    /**\n     * Write a 'log' level log.\n     */\n    static log(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.log(message, ...optionalParams);\n    }\n    /**\n     * Write a 'warn' level log.\n     */\n    static warn(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.warn(message, ...optionalParams);\n    }\n    /**\n     * Write a 'debug' level log.\n     */\n    static debug(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.debug) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    /**\n     * Write a 'verbose' level log.\n     */\n    static verbose(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.verbose) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.fatal) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n}\nexports.Logger = Logger;\n_a = Logger;\nLogger.instanceRef = DEFAULT_LOGGER;\nLogger.overrideLogger = (logger) => {\n    _a.instanceRef = logger;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLHlCQUF5QixtQkFBTyxDQUFDLCtIQUFrQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9sb2dnZXIuanM/YmJiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfYTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTG9nZ2VyID0gdm9pZCAwO1xuY29uc3QgY29uc29sZV9sb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2NvbnNvbGUubG9nZ2VyXCIpO1xuY29uc3QgREVGQVVMVF9MT0dfTEVWRUxTID0gW1xuICAgICd2ZXJib3NlJyxcbiAgICAnZGVidWcnLFxuICAgICdsb2cnLFxuICAgICd3YXJuJyxcbiAgICAnZXJyb3InLFxuICAgICdmYXRhbCcsXG5dO1xuY29uc3QgREVGQVVMVF9MT0dHRVIgPSB0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcgJiYgcHJvY2Vzcy5lbnYuTkVBUl9OT19MT0dTXG4gICAgPyB1bmRlZmluZWRcbiAgICA6IG5ldyBjb25zb2xlX2xvZ2dlcl8xLkNvbnNvbGVMb2dnZXIoREVGQVVMVF9MT0dfTEVWRUxTKTtcbi8qKlxuICogVXNlZCB0byBsb2cgdGhlIGxpYnJhcnkgbWVzc2FnZXNcbiAqL1xuY2xhc3MgTG9nZ2VyIHtcbiAgICBzdGF0aWMgZXJyb3IobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iO1xuICAgICAgICAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZXJyb3IobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICdsb2cnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgbG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYjtcbiAgICAgICAgKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ3dhcm4nIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgd2FybihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2I7XG4gICAgICAgIChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi53YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSAnZGVidWcnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iLCBfYztcbiAgICAgICAgKF9jID0gKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmRlYnVnKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbChfYiwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICd2ZXJib3NlJyBsZXZlbCBsb2cuXG4gICAgICovXG4gICAgc3RhdGljIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iLCBfYztcbiAgICAgICAgKF9jID0gKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnZlcmJvc2UpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHN0YXRpYyBmYXRhbChtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZmF0YWwpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Mb2dnZXIgPSBMb2dnZXI7XG5fYSA9IExvZ2dlcjtcbkxvZ2dlci5pbnN0YW5jZVJlZiA9IERFRkFVTFRfTE9HR0VSO1xuTG9nZ2VyLm92ZXJyaWRlTG9nZ2VyID0gKGxvZ2dlcikgPT4ge1xuICAgIF9hLmluc3RhbmNlUmVmID0gbG9nZ2VyO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logging.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logging.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.printTxOutcomeLogs = exports.printTxOutcomeLogsAndFailures = void 0;\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js\");\nconst logger_1 = __webpack_require__(/*! ./logger */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js\");\n/**\n * Parse and print details from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.outcome the query execution response\n */\nfunction printTxOutcomeLogsAndFailures({ contractId, outcome, }) {\n    const flatLogs = [outcome.transaction_outcome, ...outcome.receipts_outcome]\n        .reduce((acc, it) => {\n        const isFailure = typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object';\n        if (it.outcome.logs.length || isFailure) {\n            return acc.concat({\n                receiptIds: it.outcome.receipt_ids,\n                logs: it.outcome.logs,\n                failure: typeof it.outcome.status === 'object' && it.outcome.status.Failure !== undefined\n                    ? (0, errors_1.parseRpcError)(it.outcome.status.Failure)\n                    : null\n            });\n        }\n        else {\n            return acc;\n        }\n    }, []);\n    for (const result of flatLogs) {\n        logger_1.Logger.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n        printTxOutcomeLogs({\n            contractId,\n            logs: result.logs,\n            prefix: '\\t',\n        });\n        if (result.failure) {\n            logger_1.Logger.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n        }\n    }\n}\nexports.printTxOutcomeLogsAndFailures = printTxOutcomeLogsAndFailures;\n/**\n * Format and print log output from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.logs log output from a query execution response\n * @param params.prefix string to append to the beginning of each log\n */\nfunction printTxOutcomeLogs({ contractId, logs, prefix = '', }) {\n    for (const log of logs) {\n        logger_1.Logger.log(`${prefix}Log [${contractId}]: ${log}`);\n    }\n}\nexports.printTxOutcomeLogs = printTxOutcomeLogs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHFDQUFxQztBQUNsRSxpQkFBaUIsbUJBQU8sQ0FBQyw4R0FBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyw4R0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsc0JBQXNCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0NBQXNDLHdDQUF3QyxJQUFJLDZCQUE2QjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLCtDQUErQyxXQUFXLEtBQUssZUFBZTtBQUM5RTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlEO0FBQ0EsK0JBQStCLE9BQU8sT0FBTyxXQUFXLEtBQUssSUFBSTtBQUNqRTtBQUNBO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dpbmcuanM/NDEyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzID0gZXhwb3J0cy5wcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcyA9IHZvaWQgMDtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9sb2dnZXJcIik7XG4vKipcbiAqIFBhcnNlIGFuZCBwcmludCBkZXRhaWxzIGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5vdXRjb21lIHRoZSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gcHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMoeyBjb250cmFjdElkLCBvdXRjb21lLCB9KSB7XG4gICAgY29uc3QgZmxhdExvZ3MgPSBbb3V0Y29tZS50cmFuc2FjdGlvbl9vdXRjb21lLCAuLi5vdXRjb21lLnJlY2VpcHRzX291dGNvbWVdXG4gICAgICAgIC5yZWR1Y2UoKGFjYywgaXQpID0+IHtcbiAgICAgICAgY29uc3QgaXNGYWlsdXJlID0gdHlwZW9mIGl0Lm91dGNvbWUuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSA9PT0gJ29iamVjdCc7XG4gICAgICAgIGlmIChpdC5vdXRjb21lLmxvZ3MubGVuZ3RoIHx8IGlzRmFpbHVyZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFjYy5jb25jYXQoe1xuICAgICAgICAgICAgICAgIHJlY2VpcHRJZHM6IGl0Lm91dGNvbWUucmVjZWlwdF9pZHMsXG4gICAgICAgICAgICAgICAgbG9nczogaXQub3V0Y29tZS5sb2dzLFxuICAgICAgICAgICAgICAgIGZhaWx1cmU6IHR5cGVvZiBpdC5vdXRjb21lLnN0YXR1cyA9PT0gJ29iamVjdCcgJiYgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIGVycm9yc18xLnBhcnNlUnBjRXJyb3IpKGl0Lm91dGNvbWUuc3RhdHVzLkZhaWx1cmUpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgfSwgW10pO1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIGZsYXRMb2dzKSB7XG4gICAgICAgIGxvZ2dlcl8xLkxvZ2dlci5sb2coYFJlY2VpcHQke3Jlc3VsdC5yZWNlaXB0SWRzLmxlbmd0aCA+IDEgPyAncycgOiAnJ306ICR7cmVzdWx0LnJlY2VpcHRJZHMuam9pbignLCAnKX1gKTtcbiAgICAgICAgcHJpbnRUeE91dGNvbWVMb2dzKHtcbiAgICAgICAgICAgIGNvbnRyYWN0SWQsXG4gICAgICAgICAgICBsb2dzOiByZXN1bHQubG9ncyxcbiAgICAgICAgICAgIHByZWZpeDogJ1xcdCcsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocmVzdWx0LmZhaWx1cmUpIHtcbiAgICAgICAgICAgIGxvZ2dlcl8xLkxvZ2dlci53YXJuKGBcXHRGYWlsdXJlIFske2NvbnRyYWN0SWR9XTogJHtyZXN1bHQuZmFpbHVyZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMgPSBwcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcztcbi8qKlxuICogRm9ybWF0IGFuZCBwcmludCBsb2cgb3V0cHV0IGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5sb2dzIGxvZyBvdXRwdXQgZnJvbSBhIHF1ZXJ5IGV4ZWN1dGlvbiByZXNwb25zZVxuICogQHBhcmFtIHBhcmFtcy5wcmVmaXggc3RyaW5nIHRvIGFwcGVuZCB0byB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggbG9nXG4gKi9cbmZ1bmN0aW9uIHByaW50VHhPdXRjb21lTG9ncyh7IGNvbnRyYWN0SWQsIGxvZ3MsIHByZWZpeCA9ICcnLCB9KSB7XG4gICAgZm9yIChjb25zdCBsb2cgb2YgbG9ncykge1xuICAgICAgICBsb2dnZXJfMS5Mb2dnZXIubG9nKGAke3ByZWZpeH1Mb2cgWyR7Y29udHJhY3RJZH1dOiAke2xvZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLnByaW50VHhPdXRjb21lTG9ncyA9IHByaW50VHhPdXRjb21lTG9ncztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logging.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/provider.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/provider.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTransactionLastResult = void 0;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvcHJvdmlkZXIuanM/NWM0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0ID0gdm9pZCAwO1xuLyoqIEBoaWRkZW4gKi9cbmZ1bmN0aW9uIGdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdCh0eFJlc3VsdCkge1xuICAgIGlmICh0eXBlb2YgdHhSZXN1bHQuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdHhSZXN1bHQuc3RhdHVzLlN1Y2Nlc3NWYWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBCdWZmZXIuZnJvbSh0eFJlc3VsdC5zdGF0dXMuU3VjY2Vzc1ZhbHVlLCAnYmFzZTY0JykudG9TdHJpbmcoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0cy5nZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQgPSBnZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sortBigIntAsc = void 0;\nfunction sortBigIntAsc(a, b) {\n    return (a < b ? -1 : a > b ? 1 : 0);\n}\nexports.sortBigIntAsc = sortBigIntAsc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3V0aWxzLmpzP2JiZjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNvcnRCaWdJbnRBc2MgPSB2b2lkIDA7XG5mdW5jdGlvbiBzb3J0QmlnSW50QXNjKGEsIGIpIHtcbiAgICByZXR1cm4gKGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwKTtcbn1cbmV4cG9ydHMuc29ydEJpZ0ludEFzYyA9IHNvcnRCaWdJbnRBc2M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/validators.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/validators.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"(ssr)/./node_modules/depd/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js\");\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @param validators: current or next epoch validators.\n * @param maxNumberOfSeats: maximum number of seats in the network.\n * @param minimumStakeRatio: minimum stake ratio\n * @param protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = (0, depd_1.default)('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // hardcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const num = BigInt(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (stakesSum < num) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = BigInt(1), right = stakesSum + BigInt(1);\n    while (left !== right - BigInt(1)) {\n        const mid = (left + right) / BigInt(2);\n        let found = false;\n        let currentSum = BigInt(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum + (stakes[i] / mid);\n            if (currentSum >= num) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum * BigInt(minimumStakeRatio[0]) / BigInt(minimumStakeRatio[1]);\n    }\n    else {\n        return stakes[0] + BigInt(1);\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @param currentValidators: list of current validators.\n * @param nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcscUJBQXFCO0FBQ25ELCtCQUErQixtQkFBTyxDQUFDLGdEQUFNO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLHNHQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBKQUEwSjtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFtRDtBQUM1RTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3ZhbGlkYXRvcnMuanM/MDA2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IGV4cG9ydHMuZmluZFNlYXRQcmljZSA9IHZvaWQgMDtcbmNvbnN0IGRlcGRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVwZFwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG4vKiogRmluZHMgc2VhdCBwcmljZSBnaXZlbiB2YWxpZGF0b3JzIHN0YWtlcyBhbmQgbnVtYmVyIG9mIHNlYXRzLlxuICogIENhbGN1bGF0aW9uIGZvbGxvdyB0aGUgc3BlYzogaHR0cHM6Ly9ub21pY29uLmlvL0Vjb25vbWljcy9SRUFETUUuaHRtbCN2YWxpZGF0b3Itc2VsZWN0aW9uXG4gKiBAcGFyYW0gdmFsaWRhdG9yczogY3VycmVudCBvciBuZXh0IGVwb2NoIHZhbGlkYXRvcnMuXG4gKiBAcGFyYW0gbWF4TnVtYmVyT2ZTZWF0czogbWF4aW11bSBudW1iZXIgb2Ygc2VhdHMgaW4gdGhlIG5ldHdvcmsuXG4gKiBAcGFyYW0gbWluaW11bVN0YWtlUmF0aW86IG1pbmltdW0gc3Rha2UgcmF0aW9cbiAqIEBwYXJhbSBwcm90b2NvbFZlcnNpb246IHZlcnNpb24gb2YgdGhlIHByb3RvY29sIGZyb20gZ2VuZXNpcyBjb25maWdcbiAqL1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbywgcHJvdG9jb2xWZXJzaW9uKSB7XG4gICAgaWYgKHByb3RvY29sVmVyc2lvbiAmJiBwcm90b2NvbFZlcnNpb24gPCA0OSkge1xuICAgICAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cyk7XG4gICAgfVxuICAgIGlmICghbWluaW11bVN0YWtlUmF0aW8pIHtcbiAgICAgICAgY29uc3QgZGVwcmVjYXRlID0gKDAsIGRlcGRfMS5kZWZhdWx0KSgnZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzKScpO1xuICAgICAgICBkZXByZWNhdGUoJ2B1c2UgYGZpbmRTZWF0UHJpY2UodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cywgbWluaW11bVN0YWtlUmF0aW8pYCBpbnN0ZWFkJyk7XG4gICAgICAgIG1pbmltdW1TdGFrZVJhdGlvID0gWzEsIDYyNTBdOyAvLyBoYXJkY29kZWQgbWluaW11bVN0YWtlUmF0aW9uIGZyb20gMTIvNy8yMVxuICAgIH1cbiAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbyk7XG59XG5leHBvcnRzLmZpbmRTZWF0UHJpY2UgPSBmaW5kU2VhdFByaWNlO1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbnVtU2VhdHMpIHtcbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IG51bSA9IEJpZ0ludChudW1TZWF0cyk7XG4gICAgY29uc3Qgc3Rha2VzU3VtID0gc3Rha2VzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIGlmIChzdGFrZXNTdW0gPCBudW0pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdGFrZXMgYXJlIGJlbG93IHNlYXRzJyk7XG4gICAgfVxuICAgIC8vIGFzc2VydCBzdGFrZXNTdW0gPj0gbnVtU2VhdHNcbiAgICBsZXQgbGVmdCA9IEJpZ0ludCgxKSwgcmlnaHQgPSBzdGFrZXNTdW0gKyBCaWdJbnQoMSk7XG4gICAgd2hpbGUgKGxlZnQgIT09IHJpZ2h0IC0gQmlnSW50KDEpKSB7XG4gICAgICAgIGNvbnN0IG1pZCA9IChsZWZ0ICsgcmlnaHQpIC8gQmlnSW50KDIpO1xuICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGN1cnJlbnRTdW0gPSBCaWdJbnQoMCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Rha2VzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBjdXJyZW50U3VtID0gY3VycmVudFN1bSArIChzdGFrZXNbaV0gLyBtaWQpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRTdW0gPj0gbnVtKSB7XG4gICAgICAgICAgICAgICAgbGVmdCA9IG1pZDtcbiAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFmb3VuZCkge1xuICAgICAgICAgICAgcmlnaHQgPSBtaWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxlZnQ7XG59XG4vLyBuZWFyY29yZSByZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9uZWFyL25lYXJjb3JlL2Jsb2IvNWE4YWUyNjNlYzA3OTMwY2QzNGQwZGNmNWJjZWUyNTBjNjdjMDJhYS9jaGFpbi9lcG9jaF9tYW5hZ2VyL3NyYy92YWxpZGF0b3Jfc2VsZWN0aW9uLnJzI0wzMDg7TDMxNVxuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbykge1xuICAgIGlmIChtaW5pbXVtU3Rha2VSYXRpby5sZW5ndGggIT0gMikge1xuICAgICAgICB0aHJvdyBFcnJvcignbWluaW11bVN0YWtlUmF0aW8gc2hvdWxkIGhhdmUgMiBlbGVtZW50cycpO1xuICAgIH1cbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IHN0YWtlc1N1bSA9IHN0YWtlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICBpZiAodmFsaWRhdG9ycy5sZW5ndGggPCBtYXhOdW1iZXJPZlNlYXRzKSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNTdW0gKiBCaWdJbnQobWluaW11bVN0YWtlUmF0aW9bMF0pIC8gQmlnSW50KG1pbmltdW1TdGFrZVJhdGlvWzFdKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNbMF0gKyBCaWdJbnQoMSk7XG4gICAgfVxufVxuLyoqIERpZmYgdmFsaWRhdG9ycyBiZXR3ZWVuIGN1cnJlbnQgYW5kIG5leHQgZXBvY2guXG4gKiBSZXR1cm5zIGFkZGl0aW9ucywgc3VidHJhY3Rpb25zIGFuZCBjaGFuZ2VzIHRvIHZhbGlkYXRvciBzZXQuXG4gKiBAcGFyYW0gY3VycmVudFZhbGlkYXRvcnM6IGxpc3Qgb2YgY3VycmVudCB2YWxpZGF0b3JzLlxuICogQHBhcmFtIG5leHRWYWxpZGF0b3JzOiBsaXN0IG9mIG5leHQgdmFsaWRhdG9ycy5cbiAqL1xuZnVuY3Rpb24gZGlmZkVwb2NoVmFsaWRhdG9ycyhjdXJyZW50VmFsaWRhdG9ycywgbmV4dFZhbGlkYXRvcnMpIHtcbiAgICBjb25zdCB2YWxpZGF0b3JzTWFwID0gbmV3IE1hcCgpO1xuICAgIGN1cnJlbnRWYWxpZGF0b3JzLmZvckVhY2godiA9PiB2YWxpZGF0b3JzTWFwLnNldCh2LmFjY291bnRfaWQsIHYpKTtcbiAgICBjb25zdCBuZXh0VmFsaWRhdG9yc1NldCA9IG5ldyBTZXQobmV4dFZhbGlkYXRvcnMubWFwKHYgPT4gdi5hY2NvdW50X2lkKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV3VmFsaWRhdG9yczogbmV4dFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIXZhbGlkYXRvcnNNYXAuaGFzKHYuYWNjb3VudF9pZCkpLFxuICAgICAgICByZW1vdmVkVmFsaWRhdG9yczogY3VycmVudFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIW5leHRWYWxpZGF0b3JzU2V0Lmhhcyh2LmFjY291bnRfaWQpKSxcbiAgICAgICAgY2hhbmdlZFZhbGlkYXRvcnM6IG5leHRWYWxpZGF0b3JzLmZpbHRlcih2ID0+ICh2YWxpZGF0b3JzTWFwLmhhcyh2LmFjY291bnRfaWQpICYmIHZhbGlkYXRvcnNNYXAuZ2V0KHYuYWNjb3VudF9pZCkuc3Rha2UgIT0gdi5zdGFrZSkpXG4gICAgICAgICAgICAubWFwKHYgPT4gKHsgY3VycmVudDogdmFsaWRhdG9yc01hcC5nZXQodi5hY2NvdW50X2lkKSwgbmV4dDogdiB9KSlcbiAgICB9O1xufVxuZXhwb3J0cy5kaWZmRXBvY2hWYWxpZGF0b3JzID0gZGlmZkVwb2NoVmFsaWRhdG9ycztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account.cjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/account.cjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Account = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/index.cjs\");\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/index.cjs\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/index.cjs\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst utils_2 = __webpack_require__(/*! ./utils.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/utils.cjs\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey, stake, transfer, } = transactions_1.actionCreators;\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link \"@near-js/crypto\".key_pair.KeyPair | KeyPair}.\n */\nclass Account {\n    connection;\n    accountId;\n    constructor(connection, accountId) {\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    getConnection() {\n        return this.connection;\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see [https://docs.near.org/api/rpc/contracts#view-account](https://docs.near.org/api/rpc/contracts#view-account)\n     */\n    async state() {\n        return this.connection.provider.query({\n            request_type: 'view_account',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     */\n    async signTransaction(receiverId, actions) {\n        const accessKeyInfo = await this.findAccessKey(receiverId, actions);\n        if (!accessKeyInfo) {\n            throw new types_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair exists for this account`, 'KeyNotFound');\n        }\n        const { accessKey } = accessKeyInfo;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = block.header.hash;\n        const nonce = accessKey.nonce + 1n;\n        return await (0, transactions_1.signTransaction)(receiverId, nonce, actions, (0, utils_1.baseDecode)(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n    }\n    /**\n     * Sign a transaction to perform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider | JsonRpcProvider }\n     *\n     * @param options The options for signing and sending the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be performed in the transaction.\n     * @param options.returnError Whether to return an error if the transaction fails.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    async signAndSendTransaction({ receiverId, actions, returnError }) {\n        let txHash, signedTx;\n        // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n        const result = await (0, providers_1.exponentialBackoff)(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, async () => {\n            [txHash, signedTx] = await this.signTransaction(receiverId, actions);\n            const publicKey = signedTx.transaction.publicKey;\n            try {\n                return await this.connection.provider.sendTransaction(signedTx);\n            }\n            catch (error) {\n                if (error.type === 'InvalidNonce') {\n                    utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} with new nonce.`);\n                    delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                    return null;\n                }\n                if (error.type === 'Expired') {\n                    utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} due to expired block hash`);\n                    return null;\n                }\n                error.context = new types_1.ErrorContext((0, utils_1.baseEncode)(txHash));\n                throw error;\n            }\n        });\n        if (!result) {\n            // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n            throw new types_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n        }\n        (0, utils_1.printTxOutcomeLogsAndFailures)({ contractId: signedTx.transaction.receiverId, outcome: result });\n        // Should be falsy if result.status.Failure is null\n        if (!returnError && typeof result.status === 'object' && typeof result.status.Failure === 'object' && result.status.Failure !== null) {\n            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n            if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                throw new types_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n            }\n            else {\n                throw (0, utils_1.parseResultError)(result);\n            }\n        }\n        // TODO: if Tx is Unknown or Started.\n        return result;\n    }\n    /** @hidden */\n    accessKeyByPublicKeyCache = {};\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link \"@near-js/keystores\".keystore.KeyStore | Keystore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async findAccessKey(receiverId, actions) {\n        // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n        const publicKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n        if (!publicKey) {\n            throw new types_1.TypedError(`no matching key pair found in ${this.connection.signer}`, 'PublicKeyNotFound');\n        }\n        const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n        if (cachedAccessKey !== undefined) {\n            return { publicKey, accessKey: cachedAccessKey };\n        }\n        try {\n            const rawAccessKey = await this.connection.provider.query({\n                request_type: 'view_access_key',\n                account_id: this.accountId,\n                public_key: publicKey.toString(),\n                finality: 'optimistic'\n            });\n            // store nonce as BigInt to preserve precision on big number\n            const accessKey = {\n                ...rawAccessKey,\n                nonce: BigInt(rawAccessKey.nonce || 0)\n            };\n            // this function can be called multiple times and retrieve the same access key\n            // this checks to see if the access key was already retrieved and cached while\n            // the above network call was in flight. To keep nonce values in line, we return\n            // the cached access key.\n            if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n            }\n            this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n            return { publicKey, accessKey };\n        }\n        catch (e) {\n            if (e.type == 'AccessKeyDoesNotExist') {\n                return null;\n            }\n            throw e;\n        }\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     * @param amount of NEAR to transfer to the created contract account. Transfer enough to pay for storage https://docs.near.org/docs/concepts/storage-staking\n     */\n    async createAndDeployContract(contractId, publicKey, data, amount) {\n        const accessKey = fullAccessKey();\n        await this.signAndSendTransaction({\n            receiverId: contractId,\n            actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey), deployContract(data)]\n        });\n        const contractAccount = new Account(this.connection, contractId);\n        return contractAccount;\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    async sendMoney(receiverId, amount) {\n        return this.signAndSendTransaction({\n            receiverId,\n            actions: [transfer(amount)]\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    async createAccount(newAccountId, publicKey, amount) {\n        const accessKey = fullAccessKey();\n        return this.signAndSendTransaction({\n            receiverId: newAccountId,\n            actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    async deleteAccount(beneficiaryId) {\n        utils_1.Logger.log('Deleting an account does not automatically transfer NFTs and FTs to the beneficiary address. Ensure to transfer assets before deleting.');\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [deleteAccount(beneficiaryId)]\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    async deployContract(data) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [deployContract(data)]\n        });\n    }\n    /** @hidden */\n    encodeJSContractArgs(contractId, method, args) {\n        return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n    }\n    /**\n      * Execute a function call.\n      * @param options The options for the function call.\n      * @param options.contractId The NEAR account ID of the smart contract.\n      * @param options.methodName The name of the method to be called on the smart contract.\n      * @param options.args The arguments to be passed to the method.\n      * @param options.gas The maximum amount of gas to be used for the function call.\n      * @param options.attachedDeposit The amount of NEAR tokens to be attached to the function call.\n      * @param options.walletMeta Metadata for wallet integration.\n      * @param options.walletCallbackUrl The callback URL for wallet integration.\n      * @param options.stringify A function to convert input arguments into bytes array\n      * @param options.jsContract Whether the contract is from JS SDK, automatically encodes args from JS SDK to binary.\n      * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the function call.\n      */\n    async functionCall({ contractId, methodName, args = {}, gas = utils_1.DEFAULT_FUNCTION_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl, stringify, jsContract }) {\n        this.validateArgs(args);\n        let functionCallArgs;\n        if (jsContract) {\n            const encodedArgs = this.encodeJSContractArgs(contractId, methodName, JSON.stringify(args));\n            functionCallArgs = ['call_js_contract', encodedArgs, gas, attachedDeposit, null, true];\n        }\n        else {\n            const stringifyArg = stringify === undefined ? transactions_1.stringifyJsonOrBytes : stringify;\n            functionCallArgs = [methodName, args, gas, attachedDeposit, stringifyArg, false];\n        }\n        return this.signAndSendTransaction({\n            receiverId: jsContract ? this.connection.jsvmAccountId : contractId,\n            // eslint-disable-next-line prefer-spread\n            actions: [functionCall.apply(void 0, functionCallArgs)],\n            walletMeta,\n            walletCallbackUrl\n        });\n    }\n    /**\n     * @see [https://docs.near.org/concepts/basics/accounts/access-keys](https://docs.near.org/concepts/basics/accounts/access-keys)\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    async addKey(publicKey, contractId, methodNames, amount) {\n        if (!methodNames) {\n            methodNames = [];\n        }\n        if (!Array.isArray(methodNames)) {\n            methodNames = [methodNames];\n        }\n        let accessKey;\n        if (!contractId) {\n            accessKey = fullAccessKey();\n        }\n        else {\n            accessKey = functionCallAccessKey(contractId, methodNames, amount);\n        }\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async deleteKey(publicKey) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [deleteKey(crypto_1.PublicKey.from(publicKey))]\n        });\n    }\n    /**\n     * @see [https://near-nodes.io/validator/staking-and-delegation](https://near-nodes.io/validator/staking-and-delegation)\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    async stake(publicKey, amount) {\n        return this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [stake(amount, crypto_1.PublicKey.from(publicKey))]\n        });\n    }\n    /**\n     * Compose and sign a SignedDelegate action to be executed in a transaction on behalf of this Account instance\n     *\n     * @param options Options for the transaction.\n     * @param options.actions Actions to be included in the meta transaction\n     * @param options.blockHeightTtl Number of blocks past the current block height for which the SignedDelegate action may be included in a meta transaction\n     * @param options.receiverId Receiver account of the meta transaction\n     */\n    async signedDelegate({ actions, blockHeightTtl, receiverId, }) {\n        const { provider, signer } = this.connection;\n        const { header } = await provider.block({ finality: 'final' });\n        const { accessKey, publicKey } = await this.findAccessKey(null, null);\n        const delegateAction = (0, transactions_1.buildDelegateAction)({\n            actions,\n            maxBlockHeight: BigInt(header.height) + BigInt(blockHeightTtl),\n            nonce: BigInt(accessKey.nonce) + 1n,\n            publicKey,\n            receiverId,\n            senderId: this.accountId,\n        });\n        const { signedDelegateAction } = await (0, transactions_1.signDelegateAction)({\n            delegateAction,\n            signer: {\n                sign: async (message) => {\n                    const { signature } = await signer.signMessage(message, delegateAction.senderId, this.connection.networkId);\n                    return signature;\n                },\n            }\n        });\n        return signedDelegateAction;\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new types_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n     *\n     * @param options Function call options.\n     * @param options.contractId NEAR account where the contract is deployed\n     * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param options.args Any arguments to the view contract method, wrapped in JSON\n     * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n     * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n     * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n     * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     * @returns {Promise<any>}\n     */\n    async viewFunction(options) {\n        return await (0, utils_2.viewFunction)(this.connection, options);\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    async viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        return await (0, utils_2.viewState)(this.connection, this.accountId, prefix, blockQuery);\n    }\n    /**\n     * Get all access keys for the account\n     * @see [https://docs.near.org/api/rpc/access-keys#view-access-key-list](https://docs.near.org/api/rpc/access-keys#view-access-key-list)\n     */\n    async getAccessKeys() {\n        const response = await this.connection.provider.query({\n            request_type: 'view_access_key_list',\n            account_id: this.accountId,\n            finality: 'optimistic'\n        });\n        // Replace raw nonce into a new BigInt\n        return response?.keys?.map((key) => ({ ...key, access_key: { ...key.access_key, nonce: BigInt(key.access_key.nonce) } }));\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    async getAccountDetails() {\n        // TODO: update the response value to return all the different keys, not just app keys.\n        // Also if we need this function, or getAccessKeys is good enough.\n        const accessKeys = await this.getAccessKeys();\n        const authorizedApps = accessKeys\n            .filter(item => item.access_key.permission !== 'FullAccess')\n            .map(item => {\n            const perm = item.access_key.permission;\n            return {\n                contractId: perm.FunctionCall.receiver_id,\n                amount: perm.FunctionCall.allowance,\n                publicKey: item.public_key,\n            };\n        });\n        return { authorizedApps };\n    }\n    /**\n     * Returns calculated account balance\n     */\n    async getAccountBalance() {\n        const protocolConfig = await this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n        const state = await this.state();\n        const costPerByte = BigInt(protocolConfig.runtime_config.storage_amount_per_byte);\n        const stateStaked = BigInt(state.storage_usage) * costPerByte;\n        const staked = BigInt(state.locked);\n        const totalBalance = BigInt(state.amount) + staked;\n        const availableBalance = totalBalance - (staked > stateStaked ? staked : stateStaked);\n        return {\n            total: totalBalance.toString(),\n            stateStaked: stateStaked.toString(),\n            staked: staked.toString(),\n            available: availableBalance.toString()\n        };\n    }\n    /**\n     * Returns the NEAR tokens balance and validators of a given account that is delegated to the staking pools that are part of the validators set in the current epoch.\n     *\n     * NOTE: If the tokens are delegated to a staking pool that is currently on pause or does not have enough tokens to participate in validation, they won't be accounted for.\n     * @returns {Promise<ActiveDelegatedStakeBalance>}\n     */\n    async getActiveDelegatedStakeBalance() {\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockHash = block.header.hash;\n        const epochId = block.header.epoch_id;\n        const { current_validators, next_validators, current_proposals } = await this.connection.provider.validators(epochId);\n        const pools = new Set();\n        [...current_validators, ...next_validators, ...current_proposals]\n            .forEach((validator) => pools.add(validator.account_id));\n        const uniquePools = [...pools];\n        const promises = uniquePools\n            .map((validator) => (this.viewFunction({\n            contractId: validator,\n            methodName: 'get_account_total_balance',\n            args: { account_id: this.accountId },\n            blockQuery: { blockId: blockHash }\n        })));\n        const results = await Promise.allSettled(promises);\n        const hasTimeoutError = results.some((result) => {\n            if (result.status === 'rejected' && result.reason.type === 'TimeoutError') {\n                return true;\n            }\n            return false;\n        });\n        // When RPC is down and return timeout error, throw error\n        if (hasTimeoutError) {\n            throw new Error('Failed to get delegated stake balance');\n        }\n        const summary = results.reduce((result, state, index) => {\n            const validatorId = uniquePools[index];\n            if (state.status === 'fulfilled') {\n                const currentBN = BigInt(state.value);\n                if (currentBN !== 0n) {\n                    return {\n                        ...result,\n                        stakedValidators: [...result.stakedValidators, { validatorId, amount: currentBN.toString() }],\n                        total: result.total + currentBN,\n                    };\n                }\n            }\n            if (state.status === 'rejected') {\n                return {\n                    ...result,\n                    failedValidators: [...result.failedValidators, { validatorId, error: state.reason }],\n                };\n            }\n            return result;\n        }, { stakedValidators: [], failedValidators: [], total: 0n });\n        return {\n            ...summary,\n            total: summary.total.toString(),\n        };\n    }\n}\nexports.Account = Account;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_2fa.cjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/account_2fa.cjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Account2FA = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/index.cjs\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/index.cjs\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst isomorphic_unfetch_1 = __importDefault(__webpack_require__(/*! isomorphic-unfetch */ \"(ssr)/./node_modules/isomorphic-unfetch/index.js\"));\nconst account_multisig_1 = __webpack_require__(/*! ./account_multisig.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_multisig.cjs\");\nconst constants_1 = __webpack_require__(/*! ./constants.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/constants.cjs\");\nconst types_2 = __webpack_require__(/*! ./types.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/types.cjs\");\nconst { addKey, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey } = transactions_1.actionCreators;\nclass Account2FA extends account_multisig_1.AccountMultisig {\n    /********************************\n    Account2FA has options object where you can provide callbacks for:\n    - sendCode: how to send the 2FA code in case you don't use NEAR Contract Helper\n    - getCode: how to get code from user (use this to provide custom UI/UX for prompt of 2FA code)\n    - onResult: the tx result after it's been confirmed by NEAR Contract Helper\n    ********************************/\n    sendCode;\n    getCode;\n    verifyCode;\n    onConfirmResult;\n    helperUrl = 'https://helper.testnet.near.org';\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    /**\n     * Sign a transaction to preform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     *\n     * @param options Options for the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    async signAndSendTransaction({ receiverId, actions }) {\n        await super.signAndSendTransaction({ receiverId, actions });\n        // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n        await this.sendCode();\n        const result = await this.promptAndVerify();\n        if (this.onConfirmResult) {\n            await this.onConfirmResult(result);\n        }\n        return result;\n    }\n    // default helpers for CH deployments of multisig\n    /**\n     * Deploy a multisig contract with 2FA and handle the deployment process.\n     * @param contractBytes - The bytecode of the multisig contract.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deployment.\n     */\n    async deployMultisig(contractBytes) {\n        const { accountId } = this;\n        const seedOrLedgerKey = (await this.getRecoveryMethods()).data\n            // @ts-ignore\n            .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n            .map((rm) => rm.publicKey);\n        const fak2lak = (await this.getAccessKeys())\n            .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n            .map((ak) => ak.public_key)\n            .map(toPK);\n        // @ts-ignore\n        const confirmOnlyKey = toPK((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n        const actions = [\n            ...fak2lak.map((pk) => deleteKey(pk)),\n            ...fak2lak.map((pk) => addKey(pk, functionCallAccessKey(accountId, constants_1.MULTISIG_CHANGE_METHODS, null))),\n            addKey(confirmOnlyKey, functionCallAccessKey(accountId, constants_1.MULTISIG_CONFIRM_METHODS, null)),\n            deployContract(contractBytes),\n        ];\n        const newFunctionCallActionBatch = actions.concat(functionCall('new', newArgs, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT));\n        utils_1.Logger.log('deploying multisig contract for', accountId);\n        const { stateStatus: multisigStateStatus } = await this.checkMultisigCodeAndStateStatus(contractBytes);\n        switch (multisigStateStatus) {\n            case types_2.MultisigStateStatus.STATE_NOT_INITIALIZED:\n                return await super.signAndSendTransactionWithAccount(accountId, newFunctionCallActionBatch);\n            case types_2.MultisigStateStatus.VALID_STATE:\n                return await super.signAndSendTransactionWithAccount(accountId, actions);\n            case types_2.MultisigStateStatus.INVALID_STATE:\n                throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState');\n            default:\n                throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n        }\n    }\n    /**\n     * Disable 2FA with the option to clean up contract state.\n     * @param options Options for disabling 2FA.\n     * @param options.contractBytes The bytecode of the contract to deploy.\n     * @param options.cleanupContractBytes The bytecode of the cleanup contract (optional).\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    async disableWithFAK({ contractBytes, cleanupContractBytes }) {\n        let cleanupActions = [];\n        if (cleanupContractBytes) {\n            await this.deleteAllRequests().catch(e => e);\n            cleanupActions = await this.get2faDisableCleanupActions(cleanupContractBytes);\n        }\n        const keyConversionActions = await this.get2faDisableKeyConversionActions();\n        const actions = [\n            ...cleanupActions,\n            ...keyConversionActions,\n            deployContract(contractBytes)\n        ];\n        const accessKeyInfo = await this.findAccessKey(this.accountId, actions);\n        if (accessKeyInfo && accessKeyInfo.accessKey && accessKeyInfo.accessKey.permission !== 'FullAccess') {\n            throw new types_1.TypedError('No full access key found in keystore. Unable to bypass multisig', 'NoFAKFound');\n        }\n        return this.signAndSendTransactionWithAccount(this.accountId, actions);\n    }\n    /**\n     * Retrieves cleanup actions for disabling 2FA.\n     * @param cleanupContractBytes - The bytecode of the cleanup contract.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of cleanup actions.\n     */\n    async get2faDisableCleanupActions(cleanupContractBytes) {\n        const currentAccountState = await this.viewState('').catch(error => {\n            const cause = error.cause && error.cause.name;\n            if (cause == 'NO_CONTRACT_CODE') {\n                return [];\n            }\n            throw cause == 'TOO_LARGE_CONTRACT_STATE'\n                ? new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState')\n                : error;\n        });\n        const currentAccountStateKeys = currentAccountState.map(({ key }) => key.toString('base64'));\n        return currentAccountState.length ? [\n            deployContract(cleanupContractBytes),\n            functionCall('clean', { keys: currentAccountStateKeys }, constants_1.MULTISIG_GAS, 0n)\n        ] : [];\n    }\n    /**\n     * Retrieves key conversion actions for disabling 2FA.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of key conversion actions.\n     */\n    async get2faDisableKeyConversionActions() {\n        const { accountId } = this;\n        const accessKeys = await this.getAccessKeys();\n        const lak2fak = accessKeys\n            .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n            .filter(({ access_key }) => {\n            const perm = access_key.permission.FunctionCall;\n            return perm.receiver_id === accountId &&\n                perm.method_names.length === 4 &&\n                perm.method_names.includes('add_request_and_confirm');\n        });\n        // @ts-ignore\n        const confirmOnlyKey = crypto_1.PublicKey.from((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        return [\n            deleteKey(confirmOnlyKey),\n            ...lak2fak.map(({ public_key }) => deleteKey(crypto_1.PublicKey.from(public_key))),\n            ...lak2fak.map(({ public_key }) => addKey(crypto_1.PublicKey.from(public_key), fullAccessKey()))\n        ];\n    }\n    /**\n     * This method converts LAKs back to FAKs, clears state and deploys an 'empty' contract (contractBytes param)\n     * @param [contractBytes]{@link https://github.com/near/near-wallet/blob/master/packages/frontend/src/wasm/main.wasm?raw=true}\n     * @param [cleanupContractBytes]{@link https://github.com/near/core-contracts/blob/master/state-manipulation/res/state_cleanup.wasm?raw=true}\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    async disable(contractBytes, cleanupContractBytes) {\n        const { stateStatus } = await this.checkMultisigCodeAndStateStatus();\n        if (stateStatus !== types_2.MultisigStateStatus.VALID_STATE && stateStatus !== types_2.MultisigStateStatus.STATE_NOT_INITIALIZED) {\n            throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n        }\n        let deleteAllRequestsError;\n        await this.deleteAllRequests().catch(e => deleteAllRequestsError = e);\n        const cleanupActions = await this.get2faDisableCleanupActions(cleanupContractBytes).catch(e => {\n            if (e.type === 'ContractHasExistingState') {\n                throw deleteAllRequestsError || e;\n            }\n            throw e;\n        });\n        const actions = [\n            ...cleanupActions,\n            ...(await this.get2faDisableKeyConversionActions()),\n            deployContract(contractBytes),\n        ];\n        utils_1.Logger.log('disabling 2fa for', this.accountId);\n        return await this.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions\n        });\n    }\n    /**\n     * Default implementation for sending the 2FA code.\n     * @returns {Promise<string>} - A promise that resolves to the request ID.\n     */\n    async sendCodeDefault() {\n        const { accountId } = this;\n        const { requestId } = this.getRequest();\n        const method = await this.get2faMethod();\n        await this.postSignedJson('/2fa/send', {\n            accountId,\n            method,\n            requestId,\n        });\n        return requestId;\n    }\n    async getCodeDefault() {\n        throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n    }\n    /**\n     * Prompts the user to enter and verify the 2FA code.\n     * @returns {Promise<any>} - A promise that resolves to the verification result.\n     */\n    async promptAndVerify() {\n        const method = await this.get2faMethod();\n        const securityCode = await this.getCode(method);\n        try {\n            const result = await this.verifyCode(securityCode);\n            // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n            return result;\n        }\n        catch (e) {\n            utils_1.Logger.warn('Error validating security code:', e);\n            if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                return await this.promptAndVerify();\n            }\n            throw e;\n        }\n    }\n    /**\n     * Verify the 2FA code using the default method.\n     * @param securityCode - The security code to verify.\n     * @returns {Promise<any>} A promise that resolves to the verification result.\n     */\n    async verifyCodeDefault(securityCode) {\n        const { accountId } = this;\n        const request = this.getRequest();\n        if (!request) {\n            throw new Error('no request pending');\n        }\n        const { requestId } = request;\n        return await this.postSignedJson('/2fa/verify', {\n            accountId,\n            securityCode,\n            requestId\n        });\n    }\n    /**\n     * Retrieves recovery methods for the account.\n     * @returns {Promise<{ accountId: string, data: any }>} - A promise that resolves to recovery methods data.\n     */\n    async getRecoveryMethods() {\n        const { accountId } = this;\n        return {\n            accountId,\n            data: await this.postSignedJson('/account/recoveryMethods', { accountId })\n        };\n    }\n    /**\n     * Gets the 2FA method (kind and detail).\n     * @returns {Promise<{ kind: string, detail: string }>} A promise that resolves to the 2FA method.\n     */\n    async get2faMethod() {\n        let { data } = await this.getRecoveryMethods();\n        // @ts-ignore\n        if (data && data.length) {\n            // @ts-ignore\n            data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n        }\n        if (!data)\n            return null;\n        // @ts-ignore\n        const { kind, detail } = data;\n        return { kind, detail };\n    }\n    /**\n    * Generates a signature for the latest finalized block.\n    * @returns {Promise<{ blockNumber: string, blockNumberSignature: string }>} - A promise that resolves to the signature information.\n    */\n    async signatureFor() {\n        const { accountId } = this;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockNumber = block.header.height.toString();\n        const signed = await this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n        const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n        return { blockNumber, blockNumberSignature };\n    }\n    /**\n    * Sends a signed JSON request to a specified path.\n    * @param path - The path for the request.\n    * @param body - The request body.\n    * @returns {Promise<any>} - A promise that resolves to the response from the helper.\n    */\n    async postSignedJson(path, body) {\n        return await (0, isomorphic_unfetch_1.default)(this.helperUrl + path, {\n            body: JSON.stringify({\n                ...body,\n                ...(await this.signatureFor()),\n            }),\n            method: 'POST',\n        });\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => crypto_1.PublicKey.from(pk);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_2fa.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_creator.cjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/account_creator.cjs ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nconst isomorphic_unfetch_1 = __importDefault(__webpack_require__(/*! isomorphic-unfetch */ \"(ssr)/./node_modules/isomorphic-unfetch/index.js\"));\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    masterAccount;\n    initialBalance;\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    connection;\n    helperUrl;\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await (0, isomorphic_unfetch_1.default)(`${this.helperUrl}/account`, {\n            body: JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }),\n            method: 'POST',\n        });\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2FjY291bnRfY3JlYXRvci5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRywyQkFBMkIsR0FBRyxzQkFBc0I7QUFDaEYsNkNBQTZDLG1CQUFPLENBQUMsNEVBQW9CO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLG1EQUFtRCxlQUFlO0FBQ2xFLG1DQUFtQyx5REFBeUQ7QUFDNUY7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2FjY291bnRfY3JlYXRvci5janM/ZDFkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXJsQWNjb3VudENyZWF0b3IgPSBleHBvcnRzLkxvY2FsQWNjb3VudENyZWF0b3IgPSBleHBvcnRzLkFjY291bnRDcmVhdG9yID0gdm9pZCAwO1xuY29uc3QgaXNvbW9ycGhpY191bmZldGNoXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImlzb21vcnBoaWMtdW5mZXRjaFwiKSk7XG4vKipcbiAqIEFjY291bnQgY3JlYXRvciBwcm92aWRlcyBhbiBpbnRlcmZhY2UgZm9yIGltcGxlbWVudGF0aW9ucyB0byBhY3R1YWxseSBjcmVhdGUgYWNjb3VudHNcbiAqL1xuY2xhc3MgQWNjb3VudENyZWF0b3Ige1xufVxuZXhwb3J0cy5BY2NvdW50Q3JlYXRvciA9IEFjY291bnRDcmVhdG9yO1xuY2xhc3MgTG9jYWxBY2NvdW50Q3JlYXRvciBleHRlbmRzIEFjY291bnRDcmVhdG9yIHtcbiAgICBtYXN0ZXJBY2NvdW50O1xuICAgIGluaXRpYWxCYWxhbmNlO1xuICAgIGNvbnN0cnVjdG9yKG1hc3RlckFjY291bnQsIGluaXRpYWxCYWxhbmNlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMubWFzdGVyQWNjb3VudCA9IG1hc3RlckFjY291bnQ7XG4gICAgICAgIHRoaXMuaW5pdGlhbEJhbGFuY2UgPSBpbml0aWFsQmFsYW5jZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBhY2NvdW50IHVzaW5nIGEgbWFzdGVyQWNjb3VudCwgbWVhbmluZyB0aGUgbmV3IGFjY291bnQgaXMgY3JlYXRlZCBmcm9tIGFuIGV4aXN0aW5nIGFjY291bnRcbiAgICAgKiBAcGFyYW0gbmV3QWNjb3VudElkIFRoZSBuYW1lIG9mIHRoZSBORUFSIGFjY291bnQgdG8gYmUgY3JlYXRlZFxuICAgICAqIEBwYXJhbSBwdWJsaWNLZXkgVGhlIHB1YmxpYyBrZXkgZnJvbSB0aGUgbWFzdGVyQWNjb3VudCB1c2VkIHRvIGNyZWF0ZSB0aGlzIGFjY291bnRcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGVBY2NvdW50KG5ld0FjY291bnRJZCwgcHVibGljS2V5KSB7XG4gICAgICAgIGF3YWl0IHRoaXMubWFzdGVyQWNjb3VudC5jcmVhdGVBY2NvdW50KG5ld0FjY291bnRJZCwgcHVibGljS2V5LCB0aGlzLmluaXRpYWxCYWxhbmNlKTtcbiAgICB9XG59XG5leHBvcnRzLkxvY2FsQWNjb3VudENyZWF0b3IgPSBMb2NhbEFjY291bnRDcmVhdG9yO1xuY2xhc3MgVXJsQWNjb3VudENyZWF0b3IgZXh0ZW5kcyBBY2NvdW50Q3JlYXRvciB7XG4gICAgY29ubmVjdGlvbjtcbiAgICBoZWxwZXJVcmw7XG4gICAgY29uc3RydWN0b3IoY29ubmVjdGlvbiwgaGVscGVyVXJsKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvbiA9IGNvbm5lY3Rpb247XG4gICAgICAgIHRoaXMuaGVscGVyVXJsID0gaGVscGVyVXJsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGFjY291bnQgdXNpbmcgYSBoZWxwZXJVcmxcbiAgICAgKiBUaGlzIGlzIFtob3N0ZWQgaGVyZV0oaHR0cHM6Ly9oZWxwZXIubmVhcnByb3RvY29sLmNvbSkgb3Igc2V0IHVwIGxvY2FsbHkgd2l0aCB0aGUgW25lYXItY29udHJhY3QtaGVscGVyXShodHRwczovL2dpdGh1Yi5jb20vbmVhcnByb3RvY29sL25lYXItY29udHJhY3QtaGVscGVyKSByZXBvc2l0b3J5XG4gICAgICogQHBhcmFtIG5ld0FjY291bnRJZCBUaGUgbmFtZSBvZiB0aGUgTkVBUiBhY2NvdW50IHRvIGJlIGNyZWF0ZWRcbiAgICAgKiBAcGFyYW0gcHVibGljS2V5IFRoZSBwdWJsaWMga2V5IGZyb20gdGhlIG1hc3RlckFjY291bnQgdXNlZCB0byBjcmVhdGUgdGhpcyBhY2NvdW50XG4gICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlQWNjb3VudChuZXdBY2NvdW50SWQsIHB1YmxpY0tleSkge1xuICAgICAgICBhd2FpdCAoMCwgaXNvbW9ycGhpY191bmZldGNoXzEuZGVmYXVsdCkoYCR7dGhpcy5oZWxwZXJVcmx9L2FjY291bnRgLCB7XG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IG5ld0FjY291bnRJZCwgbmV3QWNjb3VudFB1YmxpY0tleTogcHVibGljS2V5LnRvU3RyaW5nKCkgfSksXG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5VcmxBY2NvdW50Q3JlYXRvciA9IFVybEFjY291bnRDcmVhdG9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_creator.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_multisig.cjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/account_multisig.cjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountMultisig = void 0;\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/index.cjs\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst account_1 = __webpack_require__(/*! ./account.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account.cjs\");\nconst constants_1 = __webpack_require__(/*! ./constants.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/constants.cjs\");\nconst types_1 = __webpack_require__(/*! ./types.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/types.cjs\");\nconst { deployContract, functionCall } = transactions_1.actionCreators;\nvar MultisigCodeStatus;\n(function (MultisigCodeStatus) {\n    MultisigCodeStatus[MultisigCodeStatus[\"INVALID_CODE\"] = 0] = \"INVALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"VALID_CODE\"] = 1] = \"VALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"UNKNOWN_CODE\"] = 2] = \"UNKNOWN_CODE\";\n})(MultisigCodeStatus || (MultisigCodeStatus = {}));\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [constants_1.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    storage;\n    onAddRequestResult;\n    /**\n     * Constructs an instance of the `AccountMultisig` class.\n     * @param connection The NEAR connection object.\n     * @param accountId The NEAR account ID.\n     * @param options Additional options for the multisig account.\n     * @param options.storage Storage to store data related to multisig operations.\n     * @param options.onAddRequestResult Callback function to handle the result of adding a request.\n     */\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    /**\n     * Sign and send a transaction with the multisig account as the sender.\n     * @param receiverId - The NEAR account ID of the transaction receiver.\n     * @param actions - The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    async signAndSendTransactionWithAccount(receiverId, actions) {\n        return super.signAndSendTransaction({ receiverId, actions });\n    }\n    /**\n     * Sign and send a multisig transaction to add a request and confirm it.\n     * @param options Options for the multisig transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    async signAndSendTransaction({ receiverId, actions }) {\n        const { accountId } = this;\n        const args = Buffer.from(JSON.stringify({\n            request: {\n                receiver_id: receiverId,\n                actions: convertActions(actions, accountId, receiverId)\n            }\n        }));\n        let result;\n        try {\n            result = await super.signAndSendTransaction({\n                receiverId: accountId,\n                actions: [\n                    functionCall('add_request_and_confirm', args, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                ]\n            });\n        }\n        catch (e) {\n            if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                await this.deleteUnconfirmedRequests();\n                return await this.signAndSendTransaction({ receiverId, actions });\n            }\n            throw e;\n        }\n        // TODO: Are following even needed? Seems like it throws on error already\n        if (!result.status) {\n            throw new Error('Request failed');\n        }\n        const status = { ...result.status };\n        if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n            throw new Error('Request failed');\n        }\n        this.setRequest({\n            accountId,\n            actions,\n            requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n        });\n        if (this.onAddRequestResult) {\n            await this.onAddRequestResult(result);\n        }\n        // NOTE there is no await on purpose to avoid blocking for 2fa\n        this.deleteUnconfirmedRequests();\n        return result;\n    }\n    /**\n     * This method submits a canary transaction that is expected to always fail in order to determine whether the contract currently has valid multisig state\n     * and whether it is initialized. The canary transaction attempts to delete a request at index u32_max and will go through if a request exists at that index.\n     * a u32_max + 1 and -1 value cannot be used for the canary due to expected u32 error thrown before deserialization attempt.\n     * @param contractBytes The bytecode of the multisig contract.\n     * @returns {Promise<{ codeStatus: MultisigCodeStatus; stateStatus: MultisigStateStatus }>} A promise that resolves to the status of the code and state.\n     */\n    async checkMultisigCodeAndStateStatus(contractBytes) {\n        const u32_max = 4_294_967_295;\n        const validCodeStatusIfNoDeploy = contractBytes ? MultisigCodeStatus.UNKNOWN_CODE : MultisigCodeStatus.VALID_CODE;\n        try {\n            if (contractBytes) {\n                await super.signAndSendTransaction({\n                    receiverId: this.accountId, actions: [\n                        deployContract(contractBytes),\n                        functionCall('delete_request', { request_id: u32_max }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                    ]\n                });\n            }\n            else {\n                await this.deleteRequest(u32_max);\n            }\n            return { codeStatus: MultisigCodeStatus.VALID_CODE, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n        }\n        catch (e) {\n            if (new RegExp(types_1.MultisigDeleteRequestRejectionError.CANNOT_DESERIALIZE_STATE).test(e && e.kind && e.kind.ExecutionError)) {\n                return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.INVALID_STATE };\n            }\n            else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.MULTISIG_NOT_INITIALIZED).test(e && e.kind && e.kind.ExecutionError)) {\n                return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.STATE_NOT_INITIALIZED };\n            }\n            else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.NO_SUCH_REQUEST).test(e && e.kind && e.kind.ExecutionError)) {\n                return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n            }\n            else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.METHOD_NOT_FOUND).test(e && e.message)) {\n                // not reachable if transaction included a deploy\n                return { codeStatus: MultisigCodeStatus.INVALID_CODE, stateStatus: types_1.MultisigStateStatus.UNKNOWN_STATE };\n            }\n            throw e;\n        }\n    }\n    /**\n     * Delete a multisig request by its ID.\n     * @param request_id The ID of the multisig request to be deleted.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deletion.\n     */\n    deleteRequest(request_id) {\n        return super.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [functionCall('delete_request', { request_id }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n        });\n    }\n    /**\n     * Delete all multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when all requests are deleted.\n     */\n    async deleteAllRequests() {\n        const request_ids = await this.getRequestIds();\n        if (request_ids.length) {\n            await Promise.all(request_ids.map((id) => this.deleteRequest(id)));\n        }\n    }\n    /**\n     * Delete unconfirmed multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when unconfirmed requests are deleted.\n     */\n    async deleteUnconfirmedRequests() {\n        // TODO: Delete in batch, don't delete unexpired\n        // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n        const request_ids = await this.getRequestIds();\n        const { requestId } = this.getRequest();\n        for (const requestIdToDelete of request_ids) {\n            if (requestIdToDelete == requestId) {\n                continue;\n            }\n            try {\n                await super.signAndSendTransaction({\n                    receiverId: this.accountId,\n                    actions: [functionCall('delete_request', { request_id: requestIdToDelete }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n                });\n            }\n            catch (e) {\n                utils_1.Logger.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n            }\n        }\n    }\n    // helpers\n    async getRequestIds() {\n        // TODO: Read requests from state to allow filtering by expiration time\n        // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n        return this.viewFunction({\n            contractId: this.accountId,\n            methodName: 'list_request_ids',\n        });\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(constants_1.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[constants_1.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(constants_1.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[constants_1.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: constants_1.MULTISIG_ALLOWANCE.toString(),\n                method_names: constants_1.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2FjY291bnRfbXVsdGlzaWcuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2Qix1QkFBdUIsbUJBQU8sQ0FBQyxnR0FBdUI7QUFDdEQsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQWdCO0FBQ3hDLGtCQUFrQixtQkFBTyxDQUFDLHNGQUFlO0FBQ3pDLG9CQUFvQixtQkFBTyxDQUFDLDBGQUFpQjtBQUM3QyxnQkFBZ0IsbUJBQU8sQ0FBQyxrRkFBYTtBQUNyQyxRQUFRLCtCQUErQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnREFBZ0Q7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdDQUFnQztBQUNqRDtBQUNBO0FBQ0EsOENBQThDLHFCQUFxQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0NBQWdDO0FBQ2pEO0FBQ0EsbUNBQW1DLHFCQUFxQjtBQUN4RCxnQkFBZ0IsWUFBWTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELHFCQUFxQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsVUFBVSxnQ0FBZ0Msa0NBQWtDLEdBQUc7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELHFCQUFxQjtBQUM5RTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixnQ0FBZ0M7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsWUFBWTtBQUNuRSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGVBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGVBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixZQUFZO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELCtCQUErQjtBQUM5RixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMkZBQTJGO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkRBQTZEO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0VBQWdFO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9saWIvY29tbW9uanMvYWNjb3VudF9tdWx0aXNpZy5janM/MjNlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWNjb3VudE11bHRpc2lnID0gdm9pZCAwO1xuY29uc3QgdHJhbnNhY3Rpb25zXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdHJhbnNhY3Rpb25zXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGFjY291bnRfMSA9IHJlcXVpcmUoXCIuL2FjY291bnQuY2pzXCIpO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHMuY2pzXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzLmNqc1wiKTtcbmNvbnN0IHsgZGVwbG95Q29udHJhY3QsIGZ1bmN0aW9uQ2FsbCB9ID0gdHJhbnNhY3Rpb25zXzEuYWN0aW9uQ3JlYXRvcnM7XG52YXIgTXVsdGlzaWdDb2RlU3RhdHVzO1xuKGZ1bmN0aW9uIChNdWx0aXNpZ0NvZGVTdGF0dXMpIHtcbiAgICBNdWx0aXNpZ0NvZGVTdGF0dXNbTXVsdGlzaWdDb2RlU3RhdHVzW1wiSU5WQUxJRF9DT0RFXCJdID0gMF0gPSBcIklOVkFMSURfQ09ERVwiO1xuICAgIE11bHRpc2lnQ29kZVN0YXR1c1tNdWx0aXNpZ0NvZGVTdGF0dXNbXCJWQUxJRF9DT0RFXCJdID0gMV0gPSBcIlZBTElEX0NPREVcIjtcbiAgICBNdWx0aXNpZ0NvZGVTdGF0dXNbTXVsdGlzaWdDb2RlU3RhdHVzW1wiVU5LTk9XTl9DT0RFXCJdID0gMl0gPSBcIlVOS05PV05fQ09ERVwiO1xufSkoTXVsdGlzaWdDb2RlU3RhdHVzIHx8IChNdWx0aXNpZ0NvZGVTdGF0dXMgPSB7fSkpO1xuLy8gaW4gbWVtb3J5IHJlcXVlc3QgY2FjaGUgZm9yIG5vZGUgdy9vIGxvY2FsU3RvcmFnZVxuY29uc3Qgc3RvcmFnZUZhbGxiYWNrID0ge1xuICAgIFtjb25zdGFudHNfMS5NVUxUSVNJR19TVE9SQUdFX0tFWV06IG51bGxcbn07XG5jbGFzcyBBY2NvdW50TXVsdGlzaWcgZXh0ZW5kcyBhY2NvdW50XzEuQWNjb3VudCB7XG4gICAgc3RvcmFnZTtcbiAgICBvbkFkZFJlcXVlc3RSZXN1bHQ7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhbiBpbnN0YW5jZSBvZiB0aGUgYEFjY291bnRNdWx0aXNpZ2AgY2xhc3MuXG4gICAgICogQHBhcmFtIGNvbm5lY3Rpb24gVGhlIE5FQVIgY29ubmVjdGlvbiBvYmplY3QuXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IElELlxuICAgICAqIEBwYXJhbSBvcHRpb25zIEFkZGl0aW9uYWwgb3B0aW9ucyBmb3IgdGhlIG11bHRpc2lnIGFjY291bnQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMuc3RvcmFnZSBTdG9yYWdlIHRvIHN0b3JlIGRhdGEgcmVsYXRlZCB0byBtdWx0aXNpZyBvcGVyYXRpb25zLlxuICAgICAqIEBwYXJhbSBvcHRpb25zLm9uQWRkUmVxdWVzdFJlc3VsdCBDYWxsYmFjayBmdW5jdGlvbiB0byBoYW5kbGUgdGhlIHJlc3VsdCBvZiBhZGRpbmcgYSByZXF1ZXN0LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbm5lY3Rpb24sIGFjY291bnRJZCwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihjb25uZWN0aW9uLCBhY2NvdW50SWQpO1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBvcHRpb25zLnN0b3JhZ2U7XG4gICAgICAgIHRoaXMub25BZGRSZXF1ZXN0UmVzdWx0ID0gb3B0aW9ucy5vbkFkZFJlcXVlc3RSZXN1bHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNpZ24gYW5kIHNlbmQgYSB0cmFuc2FjdGlvbiB3aXRoIHRoZSBtdWx0aXNpZyBhY2NvdW50IGFzIHRoZSBzZW5kZXIuXG4gICAgICogQHBhcmFtIHJlY2VpdmVySWQgLSBUaGUgTkVBUiBhY2NvdW50IElEIG9mIHRoZSB0cmFuc2FjdGlvbiByZWNlaXZlci5cbiAgICAgKiBAcGFyYW0gYWN0aW9ucyAtIFRoZSBsaXN0IG9mIGFjdGlvbnMgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIHRyYW5zYWN0aW9uLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEZpbmFsRXhlY3V0aW9uT3V0Y29tZT59IEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBmaW5hbCBleGVjdXRpb24gb3V0Y29tZSBvZiB0aGUgdHJhbnNhY3Rpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2lnbkFuZFNlbmRUcmFuc2FjdGlvbldpdGhBY2NvdW50KHJlY2VpdmVySWQsIGFjdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLnNpZ25BbmRTZW5kVHJhbnNhY3Rpb24oeyByZWNlaXZlcklkLCBhY3Rpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWduIGFuZCBzZW5kIGEgbXVsdGlzaWcgdHJhbnNhY3Rpb24gdG8gYWRkIGEgcmVxdWVzdCBhbmQgY29uZmlybSBpdC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25zIGZvciB0aGUgbXVsdGlzaWcgdHJhbnNhY3Rpb24uXG4gICAgICogQHBhcmFtIG9wdGlvbnMucmVjZWl2ZXJJZCBUaGUgTkVBUiBhY2NvdW50IElEIG9mIHRoZSB0cmFuc2FjdGlvbiByZWNlaXZlci5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5hY3Rpb25zIFRoZSBsaXN0IG9mIGFjdGlvbnMgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIHRyYW5zYWN0aW9uLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEZpbmFsRXhlY3V0aW9uT3V0Y29tZT59IEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBmaW5hbCBleGVjdXRpb24gb3V0Y29tZSBvZiB0aGUgdHJhbnNhY3Rpb24uXG4gICAgICovXG4gICAgYXN5bmMgc2lnbkFuZFNlbmRUcmFuc2FjdGlvbih7IHJlY2VpdmVySWQsIGFjdGlvbnMgfSkge1xuICAgICAgICBjb25zdCB7IGFjY291bnRJZCB9ID0gdGhpcztcbiAgICAgICAgY29uc3QgYXJncyA9IEJ1ZmZlci5mcm9tKEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIHJlcXVlc3Q6IHtcbiAgICAgICAgICAgICAgICByZWNlaXZlcl9pZDogcmVjZWl2ZXJJZCxcbiAgICAgICAgICAgICAgICBhY3Rpb25zOiBjb252ZXJ0QWN0aW9ucyhhY3Rpb25zLCBhY2NvdW50SWQsIHJlY2VpdmVySWQpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgICAgbGV0IHJlc3VsdDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJlc3VsdCA9IGF3YWl0IHN1cGVyLnNpZ25BbmRTZW5kVHJhbnNhY3Rpb24oe1xuICAgICAgICAgICAgICAgIHJlY2VpdmVySWQ6IGFjY291bnRJZCxcbiAgICAgICAgICAgICAgICBhY3Rpb25zOiBbXG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uQ2FsbCgnYWRkX3JlcXVlc3RfYW5kX2NvbmZpcm0nLCBhcmdzLCBjb25zdGFudHNfMS5NVUxUSVNJR19HQVMsIGNvbnN0YW50c18xLk1VTFRJU0lHX0RFUE9TSVQpXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChlLnRvU3RyaW5nKCkuaW5jbHVkZXMoJ0FjY291bnQgaGFzIHRvbyBtYW55IGFjdGl2ZSByZXF1ZXN0cy4gQ29uZmlybSBvciBkZWxldGUgc29tZScpKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5kZWxldGVVbmNvbmZpcm1lZFJlcXVlc3RzKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuc2lnbkFuZFNlbmRUcmFuc2FjdGlvbih7IHJlY2VpdmVySWQsIGFjdGlvbnMgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRPRE86IEFyZSBmb2xsb3dpbmcgZXZlbiBuZWVkZWQ/IFNlZW1zIGxpa2UgaXQgdGhyb3dzIG9uIGVycm9yIGFscmVhZHlcbiAgICAgICAgaWYgKCFyZXN1bHQuc3RhdHVzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlcXVlc3QgZmFpbGVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3RhdHVzID0geyAuLi5yZXN1bHQuc3RhdHVzIH07XG4gICAgICAgIGlmICghc3RhdHVzLlN1Y2Nlc3NWYWx1ZSB8fCB0eXBlb2Ygc3RhdHVzLlN1Y2Nlc3NWYWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignUmVxdWVzdCBmYWlsZWQnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldFJlcXVlc3Qoe1xuICAgICAgICAgICAgYWNjb3VudElkLFxuICAgICAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcGFyc2VJbnQoQnVmZmVyLmZyb20oc3RhdHVzLlN1Y2Nlc3NWYWx1ZSwgJ2Jhc2U2NCcpLnRvU3RyaW5nKCdhc2NpaScpLCAxMClcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh0aGlzLm9uQWRkUmVxdWVzdFJlc3VsdCkge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5vbkFkZFJlcXVlc3RSZXN1bHQocmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBOT1RFIHRoZXJlIGlzIG5vIGF3YWl0IG9uIHB1cnBvc2UgdG8gYXZvaWQgYmxvY2tpbmcgZm9yIDJmYVxuICAgICAgICB0aGlzLmRlbGV0ZVVuY29uZmlybWVkUmVxdWVzdHMoKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2Qgc3VibWl0cyBhIGNhbmFyeSB0cmFuc2FjdGlvbiB0aGF0IGlzIGV4cGVjdGVkIHRvIGFsd2F5cyBmYWlsIGluIG9yZGVyIHRvIGRldGVybWluZSB3aGV0aGVyIHRoZSBjb250cmFjdCBjdXJyZW50bHkgaGFzIHZhbGlkIG11bHRpc2lnIHN0YXRlXG4gICAgICogYW5kIHdoZXRoZXIgaXQgaXMgaW5pdGlhbGl6ZWQuIFRoZSBjYW5hcnkgdHJhbnNhY3Rpb24gYXR0ZW1wdHMgdG8gZGVsZXRlIGEgcmVxdWVzdCBhdCBpbmRleCB1MzJfbWF4IGFuZCB3aWxsIGdvIHRocm91Z2ggaWYgYSByZXF1ZXN0IGV4aXN0cyBhdCB0aGF0IGluZGV4LlxuICAgICAqIGEgdTMyX21heCArIDEgYW5kIC0xIHZhbHVlIGNhbm5vdCBiZSB1c2VkIGZvciB0aGUgY2FuYXJ5IGR1ZSB0byBleHBlY3RlZCB1MzIgZXJyb3IgdGhyb3duIGJlZm9yZSBkZXNlcmlhbGl6YXRpb24gYXR0ZW1wdC5cbiAgICAgKiBAcGFyYW0gY29udHJhY3RCeXRlcyBUaGUgYnl0ZWNvZGUgb2YgdGhlIG11bHRpc2lnIGNvbnRyYWN0LlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHsgY29kZVN0YXR1czogTXVsdGlzaWdDb2RlU3RhdHVzOyBzdGF0ZVN0YXR1czogTXVsdGlzaWdTdGF0ZVN0YXR1cyB9Pn0gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHN0YXR1cyBvZiB0aGUgY29kZSBhbmQgc3RhdGUuXG4gICAgICovXG4gICAgYXN5bmMgY2hlY2tNdWx0aXNpZ0NvZGVBbmRTdGF0ZVN0YXR1cyhjb250cmFjdEJ5dGVzKSB7XG4gICAgICAgIGNvbnN0IHUzMl9tYXggPSA0XzI5NF85NjdfMjk1O1xuICAgICAgICBjb25zdCB2YWxpZENvZGVTdGF0dXNJZk5vRGVwbG95ID0gY29udHJhY3RCeXRlcyA/IE11bHRpc2lnQ29kZVN0YXR1cy5VTktOT1dOX0NPREUgOiBNdWx0aXNpZ0NvZGVTdGF0dXMuVkFMSURfQ09ERTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChjb250cmFjdEJ5dGVzKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgc3VwZXIuc2lnbkFuZFNlbmRUcmFuc2FjdGlvbih7XG4gICAgICAgICAgICAgICAgICAgIHJlY2VpdmVySWQ6IHRoaXMuYWNjb3VudElkLCBhY3Rpb25zOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXBsb3lDb250cmFjdChjb250cmFjdEJ5dGVzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uQ2FsbCgnZGVsZXRlX3JlcXVlc3QnLCB7IHJlcXVlc3RfaWQ6IHUzMl9tYXggfSwgY29uc3RhbnRzXzEuTVVMVElTSUdfR0FTLCBjb25zdGFudHNfMS5NVUxUSVNJR19ERVBPU0lUKVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmRlbGV0ZVJlcXVlc3QodTMyX21heCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyBjb2RlU3RhdHVzOiBNdWx0aXNpZ0NvZGVTdGF0dXMuVkFMSURfQ09ERSwgc3RhdGVTdGF0dXM6IHR5cGVzXzEuTXVsdGlzaWdTdGF0ZVN0YXR1cy5WQUxJRF9TVEFURSB9O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBpZiAobmV3IFJlZ0V4cCh0eXBlc18xLk11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yLkNBTk5PVF9ERVNFUklBTElaRV9TVEFURSkudGVzdChlICYmIGUua2luZCAmJiBlLmtpbmQuRXhlY3V0aW9uRXJyb3IpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY29kZVN0YXR1czogdmFsaWRDb2RlU3RhdHVzSWZOb0RlcGxveSwgc3RhdGVTdGF0dXM6IHR5cGVzXzEuTXVsdGlzaWdTdGF0ZVN0YXR1cy5JTlZBTElEX1NUQVRFIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChuZXcgUmVnRXhwKHR5cGVzXzEuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IuTVVMVElTSUdfTk9UX0lOSVRJQUxJWkVEKS50ZXN0KGUgJiYgZS5raW5kICYmIGUua2luZC5FeGVjdXRpb25FcnJvcikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBjb2RlU3RhdHVzOiB2YWxpZENvZGVTdGF0dXNJZk5vRGVwbG95LCBzdGF0ZVN0YXR1czogdHlwZXNfMS5NdWx0aXNpZ1N0YXRlU3RhdHVzLlNUQVRFX05PVF9JTklUSUFMSVpFRCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAobmV3IFJlZ0V4cCh0eXBlc18xLk11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yLk5PX1NVQ0hfUkVRVUVTVCkudGVzdChlICYmIGUua2luZCAmJiBlLmtpbmQuRXhlY3V0aW9uRXJyb3IpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY29kZVN0YXR1czogdmFsaWRDb2RlU3RhdHVzSWZOb0RlcGxveSwgc3RhdGVTdGF0dXM6IHR5cGVzXzEuTXVsdGlzaWdTdGF0ZVN0YXR1cy5WQUxJRF9TVEFURSB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAobmV3IFJlZ0V4cCh0eXBlc18xLk11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yLk1FVEhPRF9OT1RfRk9VTkQpLnRlc3QoZSAmJiBlLm1lc3NhZ2UpKSB7XG4gICAgICAgICAgICAgICAgLy8gbm90IHJlYWNoYWJsZSBpZiB0cmFuc2FjdGlvbiBpbmNsdWRlZCBhIGRlcGxveVxuICAgICAgICAgICAgICAgIHJldHVybiB7IGNvZGVTdGF0dXM6IE11bHRpc2lnQ29kZVN0YXR1cy5JTlZBTElEX0NPREUsIHN0YXRlU3RhdHVzOiB0eXBlc18xLk11bHRpc2lnU3RhdGVTdGF0dXMuVU5LTk9XTl9TVEFURSB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgYSBtdWx0aXNpZyByZXF1ZXN0IGJ5IGl0cyBJRC5cbiAgICAgKiBAcGFyYW0gcmVxdWVzdF9pZCBUaGUgSUQgb2YgdGhlIG11bHRpc2lnIHJlcXVlc3QgdG8gYmUgZGVsZXRlZC5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxGaW5hbEV4ZWN1dGlvbk91dGNvbWU+fSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgZmluYWwgZXhlY3V0aW9uIG91dGNvbWUgb2YgdGhlIGRlbGV0aW9uLlxuICAgICAqL1xuICAgIGRlbGV0ZVJlcXVlc3QocmVxdWVzdF9pZCkge1xuICAgICAgICByZXR1cm4gc3VwZXIuc2lnbkFuZFNlbmRUcmFuc2FjdGlvbih7XG4gICAgICAgICAgICByZWNlaXZlcklkOiB0aGlzLmFjY291bnRJZCxcbiAgICAgICAgICAgIGFjdGlvbnM6IFtmdW5jdGlvbkNhbGwoJ2RlbGV0ZV9yZXF1ZXN0JywgeyByZXF1ZXN0X2lkIH0sIGNvbnN0YW50c18xLk1VTFRJU0lHX0dBUywgY29uc3RhbnRzXzEuTVVMVElTSUdfREVQT1NJVCldXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgYWxsIG11bHRpc2lnIHJlcXVlc3RzIGFzc29jaWF0ZWQgd2l0aCB0aGUgYWNjb3VudC5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn0gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBhbGwgcmVxdWVzdHMgYXJlIGRlbGV0ZWQuXG4gICAgICovXG4gICAgYXN5bmMgZGVsZXRlQWxsUmVxdWVzdHMoKSB7XG4gICAgICAgIGNvbnN0IHJlcXVlc3RfaWRzID0gYXdhaXQgdGhpcy5nZXRSZXF1ZXN0SWRzKCk7XG4gICAgICAgIGlmIChyZXF1ZXN0X2lkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGF3YWl0IFByb21pc2UuYWxsKHJlcXVlc3RfaWRzLm1hcCgoaWQpID0+IHRoaXMuZGVsZXRlUmVxdWVzdChpZCkpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgdW5jb25maXJtZWQgbXVsdGlzaWcgcmVxdWVzdHMgYXNzb2NpYXRlZCB3aXRoIHRoZSBhY2NvdW50LlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHVuY29uZmlybWVkIHJlcXVlc3RzIGFyZSBkZWxldGVkLlxuICAgICAqL1xuICAgIGFzeW5jIGRlbGV0ZVVuY29uZmlybWVkUmVxdWVzdHMoKSB7XG4gICAgICAgIC8vIFRPRE86IERlbGV0ZSBpbiBiYXRjaCwgZG9uJ3QgZGVsZXRlIHVuZXhwaXJlZFxuICAgICAgICAvLyBUT0RPOiBEZWxldGUgaW4gYmF0Y2gsIGRvbid0IGRlbGV0ZSB1bmV4cGlyZWQgKGNhbiByZWR1Y2UgZ2FzIHVzYWdlIGRyYW1hdGljYWxseSlcbiAgICAgICAgY29uc3QgcmVxdWVzdF9pZHMgPSBhd2FpdCB0aGlzLmdldFJlcXVlc3RJZHMoKTtcbiAgICAgICAgY29uc3QgeyByZXF1ZXN0SWQgfSA9IHRoaXMuZ2V0UmVxdWVzdCgpO1xuICAgICAgICBmb3IgKGNvbnN0IHJlcXVlc3RJZFRvRGVsZXRlIG9mIHJlcXVlc3RfaWRzKSB7XG4gICAgICAgICAgICBpZiAocmVxdWVzdElkVG9EZWxldGUgPT0gcmVxdWVzdElkKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHN1cGVyLnNpZ25BbmRTZW5kVHJhbnNhY3Rpb24oe1xuICAgICAgICAgICAgICAgICAgICByZWNlaXZlcklkOiB0aGlzLmFjY291bnRJZCxcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uczogW2Z1bmN0aW9uQ2FsbCgnZGVsZXRlX3JlcXVlc3QnLCB7IHJlcXVlc3RfaWQ6IHJlcXVlc3RJZFRvRGVsZXRlIH0sIGNvbnN0YW50c18xLk1VTFRJU0lHX0dBUywgY29uc3RhbnRzXzEuTVVMVElTSUdfREVQT1NJVCldXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHV0aWxzXzEuTG9nZ2VyLndhcm4oJ0F0dGVtcHQgdG8gZGVsZXRlIGFuIGVhcmxpZXIgcmVxdWVzdCBiZWZvcmUgMTUgbWludXRlcyBmYWlsZWQuIFdpbGwgdHJ5IGFnYWluLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGhlbHBlcnNcbiAgICBhc3luYyBnZXRSZXF1ZXN0SWRzKCkge1xuICAgICAgICAvLyBUT0RPOiBSZWFkIHJlcXVlc3RzIGZyb20gc3RhdGUgdG8gYWxsb3cgZmlsdGVyaW5nIGJ5IGV4cGlyYXRpb24gdGltZVxuICAgICAgICAvLyBUT0RPOiBodHRwczovL2dpdGh1Yi5jb20vbmVhci9jb3JlLWNvbnRyYWN0cy9ibG9iLzMwNWQxZGI0ZjRmMmNmNWNlNGMxZWYzNDc5Zjc1NDQ5NTczODFmMTEvbXVsdGlzaWcvc3JjL2xpYi5ycyNMODRcbiAgICAgICAgcmV0dXJuIHRoaXMudmlld0Z1bmN0aW9uKHtcbiAgICAgICAgICAgIGNvbnRyYWN0SWQ6IHRoaXMuYWNjb3VudElkLFxuICAgICAgICAgICAgbWV0aG9kTmFtZTogJ2xpc3RfcmVxdWVzdF9pZHMnLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0UmVxdWVzdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RvcmFnZSkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodGhpcy5zdG9yYWdlLmdldEl0ZW0oY29uc3RhbnRzXzEuTVVMVElTSUdfU1RPUkFHRV9LRVkpIHx8ICd7fScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdG9yYWdlRmFsbGJhY2tbY29uc3RhbnRzXzEuTVVMVElTSUdfU1RPUkFHRV9LRVldO1xuICAgIH1cbiAgICBzZXRSZXF1ZXN0KGRhdGEpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RvcmFnZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZS5zZXRJdGVtKGNvbnN0YW50c18xLk1VTFRJU0lHX1NUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgICAgIH1cbiAgICAgICAgc3RvcmFnZUZhbGxiYWNrW2NvbnN0YW50c18xLk1VTFRJU0lHX1NUT1JBR0VfS0VZXSA9IGRhdGE7XG4gICAgfVxufVxuZXhwb3J0cy5BY2NvdW50TXVsdGlzaWcgPSBBY2NvdW50TXVsdGlzaWc7XG5jb25zdCBjb252ZXJ0UEtGb3JDb250cmFjdCA9IChwaykgPT4gcGsudG9TdHJpbmcoKS5yZXBsYWNlKCdlZDI1NTE5OicsICcnKTtcbmNvbnN0IGNvbnZlcnRBY3Rpb25zID0gKGFjdGlvbnMsIGFjY291bnRJZCwgcmVjZWl2ZXJJZCkgPT4gYWN0aW9ucy5tYXAoKGEpID0+IHtcbiAgICBjb25zdCB0eXBlID0gYS5lbnVtO1xuICAgIGNvbnN0IHsgZ2FzLCBwdWJsaWNLZXksIG1ldGhvZE5hbWUsIGFyZ3MsIGRlcG9zaXQsIGFjY2Vzc0tleSwgY29kZSB9ID0gYVt0eXBlXTtcbiAgICBjb25zdCBhY3Rpb24gPSB7XG4gICAgICAgIHR5cGU6IHR5cGVbMF0udG9VcHBlckNhc2UoKSArIHR5cGUuc3Vic3RyKDEpLFxuICAgICAgICBnYXM6IChnYXMgJiYgZ2FzLnRvU3RyaW5nKCkpIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgcHVibGljX2tleTogKHB1YmxpY0tleSAmJiBjb252ZXJ0UEtGb3JDb250cmFjdChwdWJsaWNLZXkpKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIG1ldGhvZF9uYW1lOiBtZXRob2ROYW1lLFxuICAgICAgICBhcmdzOiAoYXJncyAmJiBCdWZmZXIuZnJvbShhcmdzKS50b1N0cmluZygnYmFzZTY0JykpIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgY29kZTogKGNvZGUgJiYgQnVmZmVyLmZyb20oY29kZSkudG9TdHJpbmcoJ2Jhc2U2NCcpKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIGFtb3VudDogKGRlcG9zaXQgJiYgZGVwb3NpdC50b1N0cmluZygpKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIGRlcG9zaXQ6IChkZXBvc2l0ICYmIGRlcG9zaXQudG9TdHJpbmcoKSkgfHwgJzAnLFxuICAgICAgICBwZXJtaXNzaW9uOiB1bmRlZmluZWQsXG4gICAgfTtcbiAgICBpZiAoYWNjZXNzS2V5KSB7XG4gICAgICAgIGlmIChyZWNlaXZlcklkID09PSBhY2NvdW50SWQgJiYgYWNjZXNzS2V5LnBlcm1pc3Npb24uZW51bSAhPT0gJ2Z1bGxBY2Nlc3MnKSB7XG4gICAgICAgICAgICBhY3Rpb24ucGVybWlzc2lvbiA9IHtcbiAgICAgICAgICAgICAgICByZWNlaXZlcl9pZDogYWNjb3VudElkLFxuICAgICAgICAgICAgICAgIGFsbG93YW5jZTogY29uc3RhbnRzXzEuTVVMVElTSUdfQUxMT1dBTkNFLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgbWV0aG9kX25hbWVzOiBjb25zdGFudHNfMS5NVUxUSVNJR19DSEFOR0VfTUVUSE9EUyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFjY2Vzc0tleS5wZXJtaXNzaW9uLmVudW0gPT09ICdmdW5jdGlvbkNhbGwnKSB7XG4gICAgICAgICAgICBjb25zdCB7IHJlY2VpdmVySWQ6IHJlY2VpdmVyX2lkLCBtZXRob2ROYW1lczogbWV0aG9kX25hbWVzLCBhbGxvd2FuY2UgfSA9IGFjY2Vzc0tleS5wZXJtaXNzaW9uLmZ1bmN0aW9uQ2FsbDtcbiAgICAgICAgICAgIGFjdGlvbi5wZXJtaXNzaW9uID0ge1xuICAgICAgICAgICAgICAgIHJlY2VpdmVyX2lkLFxuICAgICAgICAgICAgICAgIGFsbG93YW5jZTogKGFsbG93YW5jZSAmJiBhbGxvd2FuY2UudG9TdHJpbmcoKSkgfHwgdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIG1ldGhvZF9uYW1lc1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYWN0aW9uO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_multisig.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/connection.cjs":
/*!********************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/connection.cjs ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Connection = void 0;\nconst signers_1 = __webpack_require__(/*! @near-js/signers */ \"(ssr)/./node_modules/@near-js/signers/lib/commonjs/index.cjs\");\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/index.cjs\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider({ ...config.args });\n        case 'FailoverRpcProvider': {\n            const providers = (config?.args || []).map((arg) => new providers_1.JsonRpcProvider(arg));\n            return new providers_1.FailoverRpcProvider(providers);\n        }\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signers_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    networkId;\n    provider;\n    signer;\n    jsvmAccountId;\n    constructor(networkId, provider, signer, jsvmAccountId) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n        this.jsvmAccountId = jsvmAccountId;\n    }\n    getConnection() {\n        return this;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer, config.jsvmAccountId);\n    }\n}\nexports.Connection = Connection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2Nvbm5lY3Rpb24uY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixrQkFBa0IsbUJBQU8sQ0FBQyxzRkFBa0I7QUFDNUMsb0JBQW9CLG1CQUFPLENBQUMsMEZBQW9CO0FBQ2hEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxnQkFBZ0I7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsWUFBWTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFlBQVk7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9jb21tb25qcy9jb25uZWN0aW9uLmNqcz8xMzY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25uZWN0aW9uID0gdm9pZCAwO1xuY29uc3Qgc2lnbmVyc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3NpZ25lcnNcIik7XG5jb25zdCBwcm92aWRlcnNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9wcm92aWRlcnNcIik7XG4vKipcbiAqIEBwYXJhbSBjb25maWcgQ29udGFpbnMgY29ubmVjdGlvbiBpbmZvIGRldGFpbHNcbiAqIEByZXR1cm5zIHtQcm92aWRlcn1cbiAqL1xuZnVuY3Rpb24gZ2V0UHJvdmlkZXIoY29uZmlnKSB7XG4gICAgc3dpdGNoIChjb25maWcudHlwZSkge1xuICAgICAgICBjYXNlIHVuZGVmaW5lZDpcbiAgICAgICAgICAgIHJldHVybiBjb25maWc7XG4gICAgICAgIGNhc2UgJ0pzb25ScGNQcm92aWRlcic6IHJldHVybiBuZXcgcHJvdmlkZXJzXzEuSnNvblJwY1Byb3ZpZGVyKHsgLi4uY29uZmlnLmFyZ3MgfSk7XG4gICAgICAgIGNhc2UgJ0ZhaWxvdmVyUnBjUHJvdmlkZXInOiB7XG4gICAgICAgICAgICBjb25zdCBwcm92aWRlcnMgPSAoY29uZmlnPy5hcmdzIHx8IFtdKS5tYXAoKGFyZykgPT4gbmV3IHByb3ZpZGVyc18xLkpzb25ScGNQcm92aWRlcihhcmcpKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgcHJvdmlkZXJzXzEuRmFpbG92ZXJScGNQcm92aWRlcihwcm92aWRlcnMpO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHRocm93IG5ldyBFcnJvcihgVW5rbm93biBwcm92aWRlciB0eXBlICR7Y29uZmlnLnR5cGV9YCk7XG4gICAgfVxufVxuLyoqXG4gKiBAcGFyYW0gY29uZmlnIENvbnRhaW5zIGNvbm5lY3Rpb24gaW5mbyBkZXRhaWxzXG4gKiBAcmV0dXJucyB7U2lnbmVyfVxuICovXG5mdW5jdGlvbiBnZXRTaWduZXIoY29uZmlnKSB7XG4gICAgc3dpdGNoIChjb25maWcudHlwZSkge1xuICAgICAgICBjYXNlIHVuZGVmaW5lZDpcbiAgICAgICAgICAgIHJldHVybiBjb25maWc7XG4gICAgICAgIGNhc2UgJ0luTWVtb3J5U2lnbmVyJzoge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBzaWduZXJzXzEuSW5NZW1vcnlTaWduZXIoY29uZmlnLmtleVN0b3JlKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gc2lnbmVyIHR5cGUgJHtjb25maWcudHlwZX1gKTtcbiAgICB9XG59XG4vKipcbiAqIENvbm5lY3RzIGFuIGFjY291bnQgdG8gYSBnaXZlbiBuZXR3b3JrIHZpYSBhIGdpdmVuIHByb3ZpZGVyXG4gKi9cbmNsYXNzIENvbm5lY3Rpb24ge1xuICAgIG5ldHdvcmtJZDtcbiAgICBwcm92aWRlcjtcbiAgICBzaWduZXI7XG4gICAganN2bUFjY291bnRJZDtcbiAgICBjb25zdHJ1Y3RvcihuZXR3b3JrSWQsIHByb3ZpZGVyLCBzaWduZXIsIGpzdm1BY2NvdW50SWQpIHtcbiAgICAgICAgdGhpcy5uZXR3b3JrSWQgPSBuZXR3b3JrSWQ7XG4gICAgICAgIHRoaXMucHJvdmlkZXIgPSBwcm92aWRlcjtcbiAgICAgICAgdGhpcy5zaWduZXIgPSBzaWduZXI7XG4gICAgICAgIHRoaXMuanN2bUFjY291bnRJZCA9IGpzdm1BY2NvdW50SWQ7XG4gICAgfVxuICAgIGdldENvbm5lY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY29uZmlnIENvbnRhaW5zIGNvbm5lY3Rpb24gaW5mbyBkZXRhaWxzXG4gICAgICovXG4gICAgc3RhdGljIGZyb21Db25maWcoY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gZ2V0UHJvdmlkZXIoY29uZmlnLnByb3ZpZGVyKTtcbiAgICAgICAgY29uc3Qgc2lnbmVyID0gZ2V0U2lnbmVyKGNvbmZpZy5zaWduZXIpO1xuICAgICAgICByZXR1cm4gbmV3IENvbm5lY3Rpb24oY29uZmlnLm5ldHdvcmtJZCwgcHJvdmlkZXIsIHNpZ25lciwgY29uZmlnLmpzdm1BY2NvdW50SWQpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29ubmVjdGlvbiA9IENvbm5lY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/connection.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/constants.cjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/constants.cjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = BigInt((0, utils_1.parseNearAmount)('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = 100000000000000n;\nexports.MULTISIG_DEPOSIT = 0n;\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2NvbnN0YW50cy5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDLEdBQUcsK0JBQStCLEdBQUcsd0JBQXdCLEdBQUcsb0JBQW9CLEdBQUcsMEJBQTBCLEdBQUcsNEJBQTRCO0FBQ2hMLGdCQUFnQixtQkFBTyxDQUFDLGtGQUFnQjtBQUN4Qyw0QkFBNEI7QUFDNUIsMEJBQTBCO0FBQzFCO0FBQ0Esb0JBQW9CO0FBQ3BCLHdCQUF3QjtBQUN4QiwrQkFBK0I7QUFDL0IsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9saWIvY29tbW9uanMvY29uc3RhbnRzLmNqcz9lNDgyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NVUxUSVNJR19DT05GSVJNX01FVEhPRFMgPSBleHBvcnRzLk1VTFRJU0lHX0NIQU5HRV9NRVRIT0RTID0gZXhwb3J0cy5NVUxUSVNJR19ERVBPU0lUID0gZXhwb3J0cy5NVUxUSVNJR19HQVMgPSBleHBvcnRzLk1VTFRJU0lHX0FMTE9XQU5DRSA9IGV4cG9ydHMuTVVMVElTSUdfU1RPUkFHRV9LRVkgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3V0aWxzXCIpO1xuZXhwb3J0cy5NVUxUSVNJR19TVE9SQUdFX0tFWSA9ICdfX211bHRpc2lnUmVxdWVzdCc7XG5leHBvcnRzLk1VTFRJU0lHX0FMTE9XQU5DRSA9IEJpZ0ludCgoMCwgdXRpbHNfMS5wYXJzZU5lYXJBbW91bnQpKCcxJykpO1xuLy8gVE9ETzogRGlmZmVyZW50IGdhcyB2YWx1ZSBmb3IgZGlmZmVyZW50IHJlcXVlc3RzIChjYW4gcmVkdWNlIGdhcyB1c2FnZSBkcmFtYXRpY2FsbHkpXG5leHBvcnRzLk1VTFRJU0lHX0dBUyA9IDEwMDAwMDAwMDAwMDAwMG47XG5leHBvcnRzLk1VTFRJU0lHX0RFUE9TSVQgPSAwbjtcbmV4cG9ydHMuTVVMVElTSUdfQ0hBTkdFX01FVEhPRFMgPSBbJ2FkZF9yZXF1ZXN0JywgJ2FkZF9yZXF1ZXN0X2FuZF9jb25maXJtJywgJ2RlbGV0ZV9yZXF1ZXN0JywgJ2NvbmZpcm0nXTtcbmV4cG9ydHMuTVVMVElTSUdfQ09ORklSTV9NRVRIT0RTID0gWydjb25maXJtJ107XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/constants.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/contract.cjs":
/*!******************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/contract.cjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Contract = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nconst local_view_execution_1 = __webpack_require__(/*! ./local-view-execution/index.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/index.cjs\");\nconst is_my_json_valid_1 = __importDefault(__webpack_require__(/*! is-my-json-valid */ \"(ssr)/./node_modules/is-my-json-valid/index.js\"));\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"(ssr)/./node_modules/depd/index.js\"));\nconst near_abi_1 = __webpack_require__(/*! near-abi */ \"(ssr)/./node_modules/near-abi/lib/index.js\");\nconst account_1 = __webpack_require__(/*! ./account.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account.cjs\");\nconst errors_1 = __webpack_require__(/*! ./errors.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/errors.cjs\");\nconst utils_2 = __webpack_require__(/*! ./utils.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/utils.cjs\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        },\n    }[name];\n}\nfunction validateArguments(args, abiFunction, abiRoot) {\n    if (!isObject(args))\n        return;\n    if (abiFunction.params &&\n        abiFunction.params.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.params.serialization_type);\n    }\n    if (abiFunction.result &&\n        abiFunction.result.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.result.serialization_type);\n    }\n    const params = abiFunction.params?.args || [];\n    for (const p of params) {\n        const arg = args[p.name];\n        const typeSchema = p.type_schema;\n        typeSchema.definitions = abiRoot.body.root_schema.definitions;\n        const validate = (0, is_my_json_valid_1.default)(typeSchema);\n        const valid = validate(arg);\n        if (!valid) {\n            throw new errors_1.ArgumentSchemaError(p.name, validate.errors);\n        }\n    }\n    // Check there are no extra unknown arguments passed\n    for (const argName of Object.keys(args)) {\n        const param = params.find((p) => p.name === argName);\n        if (!param) {\n            throw new errors_1.UnknownArgumentError(argName, params.map((p) => p.name));\n        }\n    }\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === \"[object Object]\";\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#contract](https://docs.near.org/tools/near-api-js/quick-reference#contract)\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /** @deprecated */\n    account;\n    connection;\n    contractId;\n    lve;\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(connection, contractId, options) {\n        this.connection = connection.getConnection();\n        if (connection instanceof account_1.Account) {\n            const deprecate = (0, depd_1.default)(\"new Contract(account, contractId, options)\");\n            deprecate(\"use `new Contract(connection, contractId, options)` instead\");\n            this.account = connection;\n        }\n        this.contractId = contractId;\n        this.lve = new local_view_execution_1.LocalViewExecution(connection);\n        const { viewMethods = [], changeMethods = [], abi: abiRoot, useLocalViewExecution, } = options;\n        let viewMethodsWithAbi = viewMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        let changeMethodsWithAbi = changeMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        if (abiRoot) {\n            if (viewMethodsWithAbi.length > 0 ||\n                changeMethodsWithAbi.length > 0) {\n                throw new errors_1.ConflictingOptions();\n            }\n            viewMethodsWithAbi = abiRoot.body.functions\n                .filter((m) => m.kind === near_abi_1.AbiFunctionKind.View)\n                .map((m) => ({ name: m.name, abi: m }));\n            changeMethodsWithAbi = abiRoot.body.functions\n                .filter((methodAbi) => methodAbi.kind === near_abi_1.AbiFunctionKind.Call)\n                .map((methodAbi) => ({ name: methodAbi.name, abi: methodAbi }));\n        }\n        viewMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, async (args = {}, options = {}, ...ignored) => {\n                    if (ignored.length ||\n                        !(isObject(args) || isUint8Array(args)) ||\n                        !isObject(options)) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (abi) {\n                        validateArguments(args, abi, abiRoot);\n                    }\n                    if (useLocalViewExecution) {\n                        try {\n                            return await this.lve.viewFunction({\n                                contractId: this.contractId,\n                                methodName: name,\n                                args,\n                                ...options,\n                            });\n                        }\n                        catch (error) {\n                            utils_1.Logger.warn(`Local view execution failed with: \"${error.message}\"`);\n                            utils_1.Logger.warn(`Fallback to normal RPC call`);\n                        }\n                    }\n                    if (this.account) {\n                        return this.account.viewFunction({\n                            contractId: this.contractId,\n                            methodName: name,\n                            args,\n                            ...options,\n                        });\n                    }\n                    return (0, utils_2.viewFunction)(this.connection, {\n                        contractId: this.contractId,\n                        methodName: name,\n                        args,\n                        ...options,\n                    });\n                }),\n            });\n        });\n        changeMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, async (...args) => {\n                    if (args.length &&\n                        (args.length > 3 ||\n                            !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = (0, depd_1.default)(\"contract.methodName(args, gas, amount)\");\n                        deprecate(\"use `contract.methodName({ signerAccount, args, gas?, amount?, callbackUrl?, meta? })` instead\");\n                        args[0] = {\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2],\n                        };\n                    }\n                    if (abi) {\n                        validateArguments(args[0].args, abi, abiRoot);\n                    }\n                    return this._changeMethod({ methodName: name, ...args[0] });\n                }),\n            });\n        });\n    }\n    async _changeMethod({ signerAccount, args, methodName, gas, amount, meta, callbackUrl, }) {\n        validateBNLike({ gas, amount });\n        const account = this.account || signerAccount;\n        if (!account)\n            throw new Error(`signerAccount must be specified`);\n        const rawResult = await account.functionCall({\n            contractId: this.contractId,\n            methodName,\n            args,\n            gas,\n            attachedDeposit: amount,\n            walletMeta: meta,\n            walletCallbackUrl: callbackUrl,\n        });\n        return (0, utils_1.getTransactionLastResult)(rawResult);\n    }\n}\nexports.Contract = Contract;\n/**\n * Throws if an argument is not in BigInt format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = \"number, decimal string or BigInt\";\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && typeof argValue !== \"bigint\" && isNaN(argValue)) {\n            throw new types_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2NvbnRyYWN0LmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixnQkFBZ0IsbUJBQU8sQ0FBQyxrRkFBZ0I7QUFDeEMsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQWdCO0FBQ3hDLCtCQUErQixtQkFBTyxDQUFDLDRIQUFrQztBQUN6RSwyQ0FBMkMsbUJBQU8sQ0FBQyx3RUFBa0I7QUFDckUsK0JBQStCLG1CQUFPLENBQUMsZ0RBQU07QUFDN0MsbUJBQW1CLG1CQUFPLENBQUMsNERBQVU7QUFDckMsa0JBQWtCLG1CQUFPLENBQUMsc0ZBQWU7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMsb0ZBQWM7QUFDdkMsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQWE7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxXQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG9CQUFvQjtBQUNwQztBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZFQUE2RTtBQUM3RjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHNCQUFzQjtBQUNyRDtBQUNBO0FBQ0EsdUNBQXVDLHNDQUFzQztBQUM3RTtBQUNBLHNDQUFzQyxXQUFXO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxjQUFjO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0Esc0ZBQXNGLGNBQWM7QUFDcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVCx3Q0FBd0MsV0FBVztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELHlEQUF5RDtBQUN2SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsOEJBQThCO0FBQzlFLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsMEJBQTBCLGtFQUFrRTtBQUM1Rix5QkFBeUIsYUFBYTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2NvbnRyYWN0LmNqcz83ZjFmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db250cmFjdCA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuY29uc3QgbG9jYWxfdmlld19leGVjdXRpb25fMSA9IHJlcXVpcmUoXCIuL2xvY2FsLXZpZXctZXhlY3V0aW9uL2luZGV4LmNqc1wiKTtcbmNvbnN0IGlzX215X2pzb25fdmFsaWRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiaXMtbXktanNvbi12YWxpZFwiKSk7XG5jb25zdCBkZXBkXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImRlcGRcIikpO1xuY29uc3QgbmVhcl9hYmlfMSA9IHJlcXVpcmUoXCJuZWFyLWFiaVwiKTtcbmNvbnN0IGFjY291bnRfMSA9IHJlcXVpcmUoXCIuL2FjY291bnQuY2pzXCIpO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnMuY2pzXCIpO1xuY29uc3QgdXRpbHNfMiA9IHJlcXVpcmUoXCIuL3V0aWxzLmNqc1wiKTtcbi8vIE1ha2VzIGBmdW5jdGlvbi5uYW1lYCByZXR1cm4gZ2l2ZW4gbmFtZVxuZnVuY3Rpb24gbmFtZUZ1bmN0aW9uKG5hbWUsIGJvZHkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBbbmFtZV0oLi4uYXJncykge1xuICAgICAgICAgICAgcmV0dXJuIGJvZHkoLi4uYXJncyk7XG4gICAgICAgIH0sXG4gICAgfVtuYW1lXTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlQXJndW1lbnRzKGFyZ3MsIGFiaUZ1bmN0aW9uLCBhYmlSb290KSB7XG4gICAgaWYgKCFpc09iamVjdChhcmdzKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChhYmlGdW5jdGlvbi5wYXJhbXMgJiZcbiAgICAgICAgYWJpRnVuY3Rpb24ucGFyYW1zLnNlcmlhbGl6YXRpb25fdHlwZSAhPT0gbmVhcl9hYmlfMS5BYmlTZXJpYWxpemF0aW9uVHlwZS5Kc29uKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5VbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvcihhYmlGdW5jdGlvbi5uYW1lLCBhYmlGdW5jdGlvbi5wYXJhbXMuc2VyaWFsaXphdGlvbl90eXBlKTtcbiAgICB9XG4gICAgaWYgKGFiaUZ1bmN0aW9uLnJlc3VsdCAmJlxuICAgICAgICBhYmlGdW5jdGlvbi5yZXN1bHQuc2VyaWFsaXphdGlvbl90eXBlICE9PSBuZWFyX2FiaV8xLkFiaVNlcmlhbGl6YXRpb25UeXBlLkpzb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLlVuc3VwcG9ydGVkU2VyaWFsaXphdGlvbkVycm9yKGFiaUZ1bmN0aW9uLm5hbWUsIGFiaUZ1bmN0aW9uLnJlc3VsdC5zZXJpYWxpemF0aW9uX3R5cGUpO1xuICAgIH1cbiAgICBjb25zdCBwYXJhbXMgPSBhYmlGdW5jdGlvbi5wYXJhbXM/LmFyZ3MgfHwgW107XG4gICAgZm9yIChjb25zdCBwIG9mIHBhcmFtcykge1xuICAgICAgICBjb25zdCBhcmcgPSBhcmdzW3AubmFtZV07XG4gICAgICAgIGNvbnN0IHR5cGVTY2hlbWEgPSBwLnR5cGVfc2NoZW1hO1xuICAgICAgICB0eXBlU2NoZW1hLmRlZmluaXRpb25zID0gYWJpUm9vdC5ib2R5LnJvb3Rfc2NoZW1hLmRlZmluaXRpb25zO1xuICAgICAgICBjb25zdCB2YWxpZGF0ZSA9ICgwLCBpc19teV9qc29uX3ZhbGlkXzEuZGVmYXVsdCkodHlwZVNjaGVtYSk7XG4gICAgICAgIGNvbnN0IHZhbGlkID0gdmFsaWRhdGUoYXJnKTtcbiAgICAgICAgaWYgKCF2YWxpZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLkFyZ3VtZW50U2NoZW1hRXJyb3IocC5uYW1lLCB2YWxpZGF0ZS5lcnJvcnMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIENoZWNrIHRoZXJlIGFyZSBubyBleHRyYSB1bmtub3duIGFyZ3VtZW50cyBwYXNzZWRcbiAgICBmb3IgKGNvbnN0IGFyZ05hbWUgb2YgT2JqZWN0LmtleXMoYXJncykpIHtcbiAgICAgICAgY29uc3QgcGFyYW0gPSBwYXJhbXMuZmluZCgocCkgPT4gcC5uYW1lID09PSBhcmdOYW1lKTtcbiAgICAgICAgaWYgKCFwYXJhbSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLlVua25vd25Bcmd1bWVudEVycm9yKGFyZ05hbWUsIHBhcmFtcy5tYXAoKHApID0+IHAubmFtZSkpO1xuICAgICAgICB9XG4gICAgfVxufVxuY29uc3QgaXNVaW50OEFycmF5ID0gKHgpID0+IHggJiYgeC5ieXRlTGVuZ3RoICE9PSB1bmRlZmluZWQgJiYgeC5ieXRlTGVuZ3RoID09PSB4Lmxlbmd0aDtcbmNvbnN0IGlzT2JqZWN0ID0gKHgpID0+IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4KSA9PT0gXCJbb2JqZWN0IE9iamVjdF1cIjtcbi8qKlxuICogRGVmaW5lcyBhIHNtYXJ0IGNvbnRyYWN0IG9uIE5FQVIgaW5jbHVkaW5nIHRoZSBjaGFuZ2UgKG11dGFibGUpIGFuZCB2aWV3IChub24tbXV0YWJsZSkgbWV0aG9kc1xuICpcbiAqIEBzZWUgW2h0dHBzOi8vZG9jcy5uZWFyLm9yZy90b29scy9uZWFyLWFwaS1qcy9xdWljay1yZWZlcmVuY2UjY29udHJhY3RdKGh0dHBzOi8vZG9jcy5uZWFyLm9yZy90b29scy9uZWFyLWFwaS1qcy9xdWljay1yZWZlcmVuY2UjY29udHJhY3QpXG4gKiBAZXhhbXBsZVxuICogYGBganNcbiAqIGltcG9ydCB7IENvbnRyYWN0IH0gZnJvbSAnbmVhci1hcGktanMnO1xuICpcbiAqIGFzeW5jIGZ1bmN0aW9uIGNvbnRyYWN0RXhhbXBsZSgpIHtcbiAqICAgY29uc3QgbWV0aG9kT3B0aW9ucyA9IHtcbiAqICAgICB2aWV3TWV0aG9kczogWydnZXRNZXNzYWdlQnlBY2NvdW50SWQnXSxcbiAqICAgICBjaGFuZ2VNZXRob2RzOiBbJ2FkZE1lc3NhZ2UnXVxuICogICB9O1xuICogICBjb25zdCBjb250cmFjdCA9IG5ldyBDb250cmFjdChcbiAqICAgICB3YWxsZXQuYWNjb3VudCgpLFxuICogICAgICdjb250cmFjdC1pZC50ZXN0bmV0JyxcbiAqICAgICBtZXRob2RPcHRpb25zXG4gKiAgICk7XG4gKlxuICogICAvLyB1c2UgYSBjb250cmFjdCB2aWV3IG1ldGhvZFxuICogICBjb25zdCBtZXNzYWdlcyA9IGF3YWl0IGNvbnRyYWN0LmdldE1lc3NhZ2VzKHtcbiAqICAgICBhY2NvdW50SWQ6ICdleGFtcGxlLWFjY291bnQudGVzdG5ldCdcbiAqICAgfSk7XG4gKlxuICogICAvLyB1c2UgYSBjb250cmFjdCBjaGFuZ2UgbWV0aG9kXG4gKiAgIGF3YWl0IGNvbnRyYWN0LmFkZE1lc3NhZ2Uoe1xuICogICAgICBtZXRhOiAnc29tZSBpbmZvJyxcbiAqICAgICAgY2FsbGJhY2tVcmw6ICdodHRwczovL2V4YW1wbGUuY29tL2NhbGxiYWNrJyxcbiAqICAgICAgYXJnczogeyB0ZXh0OiAnbXkgbWVzc2FnZScgfSxcbiAqICAgICAgYW1vdW50OiAxXG4gKiAgIH0pXG4gKiB9XG4gKiBgYGBcbiAqL1xuY2xhc3MgQ29udHJhY3Qge1xuICAgIC8qKiBAZGVwcmVjYXRlZCAqL1xuICAgIGFjY291bnQ7XG4gICAgY29ubmVjdGlvbjtcbiAgICBjb250cmFjdElkO1xuICAgIGx2ZTtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gYWNjb3VudCBORUFSIGFjY291bnQgdG8gc2lnbiBjaGFuZ2UgbWV0aG9kIHRyYW5zYWN0aW9uc1xuICAgICAqIEBwYXJhbSBjb250cmFjdElkIE5FQVIgYWNjb3VudCBpZCB3aGVyZSB0aGUgY29udHJhY3QgaXMgZGVwbG95ZWRcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBORUFSIHNtYXJ0IGNvbnRyYWN0IG1ldGhvZHMgdGhhdCB5b3VyIGFwcGxpY2F0aW9uIHdpbGwgdXNlLiBUaGVzZSB3aWxsIGJlIGF2YWlsYWJsZSBhcyBgY29udHJhY3QubWV0aG9kTmFtZWBcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25uZWN0aW9uLCBjb250cmFjdElkLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvbiA9IGNvbm5lY3Rpb24uZ2V0Q29ubmVjdGlvbigpO1xuICAgICAgICBpZiAoY29ubmVjdGlvbiBpbnN0YW5jZW9mIGFjY291bnRfMS5BY2NvdW50KSB7XG4gICAgICAgICAgICBjb25zdCBkZXByZWNhdGUgPSAoMCwgZGVwZF8xLmRlZmF1bHQpKFwibmV3IENvbnRyYWN0KGFjY291bnQsIGNvbnRyYWN0SWQsIG9wdGlvbnMpXCIpO1xuICAgICAgICAgICAgZGVwcmVjYXRlKFwidXNlIGBuZXcgQ29udHJhY3QoY29ubmVjdGlvbiwgY29udHJhY3RJZCwgb3B0aW9ucylgIGluc3RlYWRcIik7XG4gICAgICAgICAgICB0aGlzLmFjY291bnQgPSBjb25uZWN0aW9uO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29udHJhY3RJZCA9IGNvbnRyYWN0SWQ7XG4gICAgICAgIHRoaXMubHZlID0gbmV3IGxvY2FsX3ZpZXdfZXhlY3V0aW9uXzEuTG9jYWxWaWV3RXhlY3V0aW9uKGNvbm5lY3Rpb24pO1xuICAgICAgICBjb25zdCB7IHZpZXdNZXRob2RzID0gW10sIGNoYW5nZU1ldGhvZHMgPSBbXSwgYWJpOiBhYmlSb290LCB1c2VMb2NhbFZpZXdFeGVjdXRpb24sIH0gPSBvcHRpb25zO1xuICAgICAgICBsZXQgdmlld01ldGhvZHNXaXRoQWJpID0gdmlld01ldGhvZHMubWFwKChuYW1lKSA9PiAoe1xuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIGFiaTogbnVsbCxcbiAgICAgICAgfSkpO1xuICAgICAgICBsZXQgY2hhbmdlTWV0aG9kc1dpdGhBYmkgPSBjaGFuZ2VNZXRob2RzLm1hcCgobmFtZSkgPT4gKHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBhYmk6IG51bGwsXG4gICAgICAgIH0pKTtcbiAgICAgICAgaWYgKGFiaVJvb3QpIHtcbiAgICAgICAgICAgIGlmICh2aWV3TWV0aG9kc1dpdGhBYmkubGVuZ3RoID4gMCB8fFxuICAgICAgICAgICAgICAgIGNoYW5nZU1ldGhvZHNXaXRoQWJpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuQ29uZmxpY3RpbmdPcHRpb25zKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2aWV3TWV0aG9kc1dpdGhBYmkgPSBhYmlSb290LmJvZHkuZnVuY3Rpb25zXG4gICAgICAgICAgICAgICAgLmZpbHRlcigobSkgPT4gbS5raW5kID09PSBuZWFyX2FiaV8xLkFiaUZ1bmN0aW9uS2luZC5WaWV3KVxuICAgICAgICAgICAgICAgIC5tYXAoKG0pID0+ICh7IG5hbWU6IG0ubmFtZSwgYWJpOiBtIH0pKTtcbiAgICAgICAgICAgIGNoYW5nZU1ldGhvZHNXaXRoQWJpID0gYWJpUm9vdC5ib2R5LmZ1bmN0aW9uc1xuICAgICAgICAgICAgICAgIC5maWx0ZXIoKG1ldGhvZEFiaSkgPT4gbWV0aG9kQWJpLmtpbmQgPT09IG5lYXJfYWJpXzEuQWJpRnVuY3Rpb25LaW5kLkNhbGwpXG4gICAgICAgICAgICAgICAgLm1hcCgobWV0aG9kQWJpKSA9PiAoeyBuYW1lOiBtZXRob2RBYmkubmFtZSwgYWJpOiBtZXRob2RBYmkgfSkpO1xuICAgICAgICB9XG4gICAgICAgIHZpZXdNZXRob2RzV2l0aEFiaS5mb3JFYWNoKCh7IG5hbWUsIGFiaSB9KSA9PiB7XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgbmFtZSwge1xuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBuYW1lRnVuY3Rpb24obmFtZSwgYXN5bmMgKGFyZ3MgPSB7fSwgb3B0aW9ucyA9IHt9LCAuLi5pZ25vcmVkKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpZ25vcmVkLmxlbmd0aCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgIShpc09iamVjdChhcmdzKSB8fCBpc1VpbnQ4QXJyYXkoYXJncykpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAhaXNPYmplY3Qob3B0aW9ucykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyB0eXBlc18xLlBvc2l0aW9uYWxBcmdzRXJyb3IoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoYWJpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZUFyZ3VtZW50cyhhcmdzLCBhYmksIGFiaVJvb3QpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh1c2VMb2NhbFZpZXdFeGVjdXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMubHZlLnZpZXdGdW5jdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyYWN0SWQ6IHRoaXMuY29udHJhY3RJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kTmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJncyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzXzEuTG9nZ2VyLndhcm4oYExvY2FsIHZpZXcgZXhlY3V0aW9uIGZhaWxlZCB3aXRoOiBcIiR7ZXJyb3IubWVzc2FnZX1cImApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzXzEuTG9nZ2VyLndhcm4oYEZhbGxiYWNrIHRvIG5vcm1hbCBSUEMgY2FsbGApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmFjY291bnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmFjY291bnQudmlld0Z1bmN0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cmFjdElkOiB0aGlzLmNvbnRyYWN0SWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kTmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzIudmlld0Z1bmN0aW9uKSh0aGlzLmNvbm5lY3Rpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyYWN0SWQ6IHRoaXMuY29udHJhY3RJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZE5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhcmdzLFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNoYW5nZU1ldGhvZHNXaXRoQWJpLmZvckVhY2goKHsgbmFtZSwgYWJpIH0pID0+IHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBuYW1lLCB7XG4gICAgICAgICAgICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IG5hbWVGdW5jdGlvbihuYW1lLCBhc3luYyAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYXJncy5sZW5ndGggJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIChhcmdzLmxlbmd0aCA+IDMgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhKGlzT2JqZWN0KGFyZ3NbMF0pIHx8IGlzVWludDhBcnJheShhcmdzWzBdKSkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgdHlwZXNfMS5Qb3NpdGlvbmFsQXJnc0Vycm9yKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ3MubGVuZ3RoID4gMSB8fCAhKGFyZ3NbMF0gJiYgYXJnc1swXS5hcmdzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVwcmVjYXRlID0gKDAsIGRlcGRfMS5kZWZhdWx0KShcImNvbnRyYWN0Lm1ldGhvZE5hbWUoYXJncywgZ2FzLCBhbW91bnQpXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVwcmVjYXRlKFwidXNlIGBjb250cmFjdC5tZXRob2ROYW1lKHsgc2lnbmVyQWNjb3VudCwgYXJncywgZ2FzPywgYW1vdW50PywgY2FsbGJhY2tVcmw/LCBtZXRhPyB9KWAgaW5zdGVhZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3NbMF0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJnczogYXJnc1swXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnYXM6IGFyZ3NbMV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYW1vdW50OiBhcmdzWzJdLFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoYWJpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0ZUFyZ3VtZW50cyhhcmdzWzBdLmFyZ3MsIGFiaSwgYWJpUm9vdCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NoYW5nZU1ldGhvZCh7IG1ldGhvZE5hbWU6IG5hbWUsIC4uLmFyZ3NbMF0gfSk7XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jIF9jaGFuZ2VNZXRob2QoeyBzaWduZXJBY2NvdW50LCBhcmdzLCBtZXRob2ROYW1lLCBnYXMsIGFtb3VudCwgbWV0YSwgY2FsbGJhY2tVcmwsIH0pIHtcbiAgICAgICAgdmFsaWRhdGVCTkxpa2UoeyBnYXMsIGFtb3VudCB9KTtcbiAgICAgICAgY29uc3QgYWNjb3VudCA9IHRoaXMuYWNjb3VudCB8fCBzaWduZXJBY2NvdW50O1xuICAgICAgICBpZiAoIWFjY291bnQpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHNpZ25lckFjY291bnQgbXVzdCBiZSBzcGVjaWZpZWRgKTtcbiAgICAgICAgY29uc3QgcmF3UmVzdWx0ID0gYXdhaXQgYWNjb3VudC5mdW5jdGlvbkNhbGwoe1xuICAgICAgICAgICAgY29udHJhY3RJZDogdGhpcy5jb250cmFjdElkLFxuICAgICAgICAgICAgbWV0aG9kTmFtZSxcbiAgICAgICAgICAgIGFyZ3MsXG4gICAgICAgICAgICBnYXMsXG4gICAgICAgICAgICBhdHRhY2hlZERlcG9zaXQ6IGFtb3VudCxcbiAgICAgICAgICAgIHdhbGxldE1ldGE6IG1ldGEsXG4gICAgICAgICAgICB3YWxsZXRDYWxsYmFja1VybDogY2FsbGJhY2tVcmwsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0KShyYXdSZXN1bHQpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29udHJhY3QgPSBDb250cmFjdDtcbi8qKlxuICogVGhyb3dzIGlmIGFuIGFyZ3VtZW50IGlzIG5vdCBpbiBCaWdJbnQgZm9ybWF0IG9yIG90aGVyd2lzZSBpbnZhbGlkXG4gKiBAcGFyYW0gYXJnTWFwXG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlQk5MaWtlKGFyZ01hcCkge1xuICAgIGNvbnN0IGJuTGlrZSA9IFwibnVtYmVyLCBkZWNpbWFsIHN0cmluZyBvciBCaWdJbnRcIjtcbiAgICBmb3IgKGNvbnN0IGFyZ05hbWUgb2YgT2JqZWN0LmtleXMoYXJnTWFwKSkge1xuICAgICAgICBjb25zdCBhcmdWYWx1ZSA9IGFyZ01hcFthcmdOYW1lXTtcbiAgICAgICAgaWYgKGFyZ1ZhbHVlICYmIHR5cGVvZiBhcmdWYWx1ZSAhPT0gXCJiaWdpbnRcIiAmJiBpc05hTihhcmdWYWx1ZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0eXBlc18xLkFyZ3VtZW50VHlwZUVycm9yKGFyZ05hbWUsIGJuTGlrZSwgYXJnVmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/contract.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/errors.cjs":
/*!****************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/errors.cjs ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConflictingOptions = exports.ArgumentSchemaError = exports.UnknownArgumentError = exports.UnsupportedSerializationError = void 0;\nclass UnsupportedSerializationError extends Error {\n    constructor(methodName, serializationType) {\n        super(`Contract method '${methodName}' is using an unsupported serialization type ${serializationType}`);\n    }\n}\nexports.UnsupportedSerializationError = UnsupportedSerializationError;\nclass UnknownArgumentError extends Error {\n    constructor(actualArgName, expectedArgNames) {\n        super(`Unrecognized argument '${actualArgName}', expected '${JSON.stringify(expectedArgNames)}'`);\n    }\n}\nexports.UnknownArgumentError = UnknownArgumentError;\nclass ArgumentSchemaError extends Error {\n    constructor(argName, errors) {\n        super(`Argument '${argName}' does not conform to the specified ABI schema: '${JSON.stringify(errors)}'`);\n    }\n}\nexports.ArgumentSchemaError = ArgumentSchemaError;\nclass ConflictingOptions extends Error {\n    constructor() {\n        super('Conflicting contract method options have been passed. You can either specify ABI or a list of view/call methods.');\n    }\n}\nexports.ConflictingOptions = ConflictingOptions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2Vycm9ycy5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsMkJBQTJCLEdBQUcsNEJBQTRCLEdBQUcscUNBQXFDO0FBQy9IO0FBQ0E7QUFDQSxrQ0FBa0MsV0FBVywrQ0FBK0Msa0JBQWtCO0FBQzlHO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLHdDQUF3QyxjQUFjLGVBQWUsaUNBQWlDO0FBQ3RHO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLDJCQUEyQixRQUFRLG1EQUFtRCx1QkFBdUI7QUFDN0c7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9saWIvY29tbW9uanMvZXJyb3JzLmNqcz8wZjRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25mbGljdGluZ09wdGlvbnMgPSBleHBvcnRzLkFyZ3VtZW50U2NoZW1hRXJyb3IgPSBleHBvcnRzLlVua25vd25Bcmd1bWVudEVycm9yID0gZXhwb3J0cy5VbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvciA9IHZvaWQgMDtcbmNsYXNzIFVuc3VwcG9ydGVkU2VyaWFsaXphdGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1ldGhvZE5hbWUsIHNlcmlhbGl6YXRpb25UeXBlKSB7XG4gICAgICAgIHN1cGVyKGBDb250cmFjdCBtZXRob2QgJyR7bWV0aG9kTmFtZX0nIGlzIHVzaW5nIGFuIHVuc3VwcG9ydGVkIHNlcmlhbGl6YXRpb24gdHlwZSAke3NlcmlhbGl6YXRpb25UeXBlfWApO1xuICAgIH1cbn1cbmV4cG9ydHMuVW5zdXBwb3J0ZWRTZXJpYWxpemF0aW9uRXJyb3IgPSBVbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvcjtcbmNsYXNzIFVua25vd25Bcmd1bWVudEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGFjdHVhbEFyZ05hbWUsIGV4cGVjdGVkQXJnTmFtZXMpIHtcbiAgICAgICAgc3VwZXIoYFVucmVjb2duaXplZCBhcmd1bWVudCAnJHthY3R1YWxBcmdOYW1lfScsIGV4cGVjdGVkICcke0pTT04uc3RyaW5naWZ5KGV4cGVjdGVkQXJnTmFtZXMpfSdgKTtcbiAgICB9XG59XG5leHBvcnRzLlVua25vd25Bcmd1bWVudEVycm9yID0gVW5rbm93bkFyZ3VtZW50RXJyb3I7XG5jbGFzcyBBcmd1bWVudFNjaGVtYUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGFyZ05hbWUsIGVycm9ycykge1xuICAgICAgICBzdXBlcihgQXJndW1lbnQgJyR7YXJnTmFtZX0nIGRvZXMgbm90IGNvbmZvcm0gdG8gdGhlIHNwZWNpZmllZCBBQkkgc2NoZW1hOiAnJHtKU09OLnN0cmluZ2lmeShlcnJvcnMpfSdgKTtcbiAgICB9XG59XG5leHBvcnRzLkFyZ3VtZW50U2NoZW1hRXJyb3IgPSBBcmd1bWVudFNjaGVtYUVycm9yO1xuY2xhc3MgQ29uZmxpY3RpbmdPcHRpb25zIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignQ29uZmxpY3RpbmcgY29udHJhY3QgbWV0aG9kIG9wdGlvbnMgaGF2ZSBiZWVuIHBhc3NlZC4gWW91IGNhbiBlaXRoZXIgc3BlY2lmeSBBQkkgb3IgYSBsaXN0IG9mIHZpZXcvY2FsbCBtZXRob2RzLicpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29uZmxpY3RpbmdPcHRpb25zID0gQ29uZmxpY3RpbmdPcHRpb25zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/errors.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/index.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/index.cjs ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = exports.UnsupportedSerializationError = exports.UnknownArgumentError = exports.ConflictingOptions = exports.ArgumentSchemaError = exports.Contract = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = exports.Connection = exports.AccountMultisig = exports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = exports.Account2FA = exports.Account = void 0;\nvar account_1 = __webpack_require__(/*! ./account.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account.cjs\");\nObject.defineProperty(exports, \"Account\", ({ enumerable: true, get: function () { return account_1.Account; } }));\nvar account_2fa_1 = __webpack_require__(/*! ./account_2fa.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_2fa.cjs\");\nObject.defineProperty(exports, \"Account2FA\", ({ enumerable: true, get: function () { return account_2fa_1.Account2FA; } }));\nvar account_creator_1 = __webpack_require__(/*! ./account_creator.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_creator.cjs\");\nObject.defineProperty(exports, \"AccountCreator\", ({ enumerable: true, get: function () { return account_creator_1.AccountCreator; } }));\nObject.defineProperty(exports, \"LocalAccountCreator\", ({ enumerable: true, get: function () { return account_creator_1.LocalAccountCreator; } }));\nObject.defineProperty(exports, \"UrlAccountCreator\", ({ enumerable: true, get: function () { return account_creator_1.UrlAccountCreator; } }));\nvar account_multisig_1 = __webpack_require__(/*! ./account_multisig.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/account_multisig.cjs\");\nObject.defineProperty(exports, \"AccountMultisig\", ({ enumerable: true, get: function () { return account_multisig_1.AccountMultisig; } }));\nvar connection_1 = __webpack_require__(/*! ./connection.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/connection.cjs\");\nObject.defineProperty(exports, \"Connection\", ({ enumerable: true, get: function () { return connection_1.Connection; } }));\nvar constants_1 = __webpack_require__(/*! ./constants.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/constants.cjs\");\nObject.defineProperty(exports, \"MULTISIG_STORAGE_KEY\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_STORAGE_KEY; } }));\nObject.defineProperty(exports, \"MULTISIG_ALLOWANCE\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_ALLOWANCE; } }));\nObject.defineProperty(exports, \"MULTISIG_GAS\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_GAS; } }));\nObject.defineProperty(exports, \"MULTISIG_DEPOSIT\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_DEPOSIT; } }));\nObject.defineProperty(exports, \"MULTISIG_CHANGE_METHODS\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_CHANGE_METHODS; } }));\nObject.defineProperty(exports, \"MULTISIG_CONFIRM_METHODS\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_CONFIRM_METHODS; } }));\nvar contract_1 = __webpack_require__(/*! ./contract.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/contract.cjs\");\nObject.defineProperty(exports, \"Contract\", ({ enumerable: true, get: function () { return contract_1.Contract; } }));\nvar errors_1 = __webpack_require__(/*! ./errors.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/errors.cjs\");\nObject.defineProperty(exports, \"ArgumentSchemaError\", ({ enumerable: true, get: function () { return errors_1.ArgumentSchemaError; } }));\nObject.defineProperty(exports, \"ConflictingOptions\", ({ enumerable: true, get: function () { return errors_1.ConflictingOptions; } }));\nObject.defineProperty(exports, \"UnknownArgumentError\", ({ enumerable: true, get: function () { return errors_1.UnknownArgumentError; } }));\nObject.defineProperty(exports, \"UnsupportedSerializationError\", ({ enumerable: true, get: function () { return errors_1.UnsupportedSerializationError; } }));\nvar types_1 = __webpack_require__(/*! ./types.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/types.cjs\");\nObject.defineProperty(exports, \"MultisigDeleteRequestRejectionError\", ({ enumerable: true, get: function () { return types_1.MultisigDeleteRequestRejectionError; } }));\nObject.defineProperty(exports, \"MultisigStateStatus\", ({ enumerable: true, get: function () { return types_1.MultisigStateStatus; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2luZGV4LmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQ0FBMkMsR0FBRyxxQ0FBcUMsR0FBRyw0QkFBNEIsR0FBRywwQkFBMEIsR0FBRywyQkFBMkIsR0FBRyxnQkFBZ0IsR0FBRyxnQ0FBZ0MsR0FBRywrQkFBK0IsR0FBRyx3QkFBd0IsR0FBRyxvQkFBb0IsR0FBRywwQkFBMEIsR0FBRyw0QkFBNEIsR0FBRyxrQkFBa0IsR0FBRyx1QkFBdUIsR0FBRyx5QkFBeUIsR0FBRywyQkFBMkIsR0FBRyxzQkFBc0IsR0FBRyxrQkFBa0IsR0FBRyxlQUFlO0FBQzFqQixnQkFBZ0IsbUJBQU8sQ0FBQyxzRkFBZTtBQUN2QywyQ0FBMEMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDL0csb0JBQW9CLG1CQUFPLENBQUMsOEZBQW1CO0FBQy9DLDhDQUE2QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUN6SCx3QkFBd0IsbUJBQU8sQ0FBQyxzR0FBdUI7QUFDdkQsa0RBQWlELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDO0FBQ3JJLHVEQUFzRCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUMvSSxxREFBb0QsRUFBRSxxQ0FBcUMsK0NBQStDLEVBQUM7QUFDM0kseUJBQXlCLG1CQUFPLENBQUMsd0dBQXdCO0FBQ3pELG1EQUFrRCxFQUFFLHFDQUFxQyw4Q0FBOEMsRUFBQztBQUN4SSxtQkFBbUIsbUJBQU8sQ0FBQyw0RkFBa0I7QUFDN0MsOENBQTZDLEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDO0FBQ3hILGtCQUFrQixtQkFBTyxDQUFDLDBGQUFpQjtBQUMzQyx3REFBdUQsRUFBRSxxQ0FBcUMsNENBQTRDLEVBQUM7QUFDM0ksc0RBQXFELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3ZJLGdEQUErQyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMzSCxvREFBbUQsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDbkksMkRBQTBELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQ2pKLDREQUEyRCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQztBQUNuSixpQkFBaUIsbUJBQU8sQ0FBQyx3RkFBZ0I7QUFDekMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILGVBQWUsbUJBQU8sQ0FBQyxvRkFBYztBQUNyQyx1REFBc0QsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDdEksc0RBQXFELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ3BJLHdEQUF1RCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUN4SSxpRUFBZ0UsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDMUosY0FBYyxtQkFBTyxDQUFDLGtGQUFhO0FBQ25DLHVFQUFzRSxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUNySyx1REFBc0QsRUFBRSxxQ0FBcUMsdUNBQXVDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9jb21tb25qcy9pbmRleC5janM/MWI4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlzaWdTdGF0ZVN0YXR1cyA9IGV4cG9ydHMuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IgPSBleHBvcnRzLlVuc3VwcG9ydGVkU2VyaWFsaXphdGlvbkVycm9yID0gZXhwb3J0cy5Vbmtub3duQXJndW1lbnRFcnJvciA9IGV4cG9ydHMuQ29uZmxpY3RpbmdPcHRpb25zID0gZXhwb3J0cy5Bcmd1bWVudFNjaGVtYUVycm9yID0gZXhwb3J0cy5Db250cmFjdCA9IGV4cG9ydHMuTVVMVElTSUdfQ09ORklSTV9NRVRIT0RTID0gZXhwb3J0cy5NVUxUSVNJR19DSEFOR0VfTUVUSE9EUyA9IGV4cG9ydHMuTVVMVElTSUdfREVQT1NJVCA9IGV4cG9ydHMuTVVMVElTSUdfR0FTID0gZXhwb3J0cy5NVUxUSVNJR19BTExPV0FOQ0UgPSBleHBvcnRzLk1VTFRJU0lHX1NUT1JBR0VfS0VZID0gZXhwb3J0cy5Db25uZWN0aW9uID0gZXhwb3J0cy5BY2NvdW50TXVsdGlzaWcgPSBleHBvcnRzLlVybEFjY291bnRDcmVhdG9yID0gZXhwb3J0cy5Mb2NhbEFjY291bnRDcmVhdG9yID0gZXhwb3J0cy5BY2NvdW50Q3JlYXRvciA9IGV4cG9ydHMuQWNjb3VudDJGQSA9IGV4cG9ydHMuQWNjb3VudCA9IHZvaWQgMDtcbnZhciBhY2NvdW50XzEgPSByZXF1aXJlKFwiLi9hY2NvdW50LmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFjY291bnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRfMS5BY2NvdW50OyB9IH0pO1xudmFyIGFjY291bnRfMmZhXzEgPSByZXF1aXJlKFwiLi9hY2NvdW50XzJmYS5janNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBY2NvdW50MkZBXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50XzJmYV8xLkFjY291bnQyRkE7IH0gfSk7XG52YXIgYWNjb3VudF9jcmVhdG9yXzEgPSByZXF1aXJlKFwiLi9hY2NvdW50X2NyZWF0b3IuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjb3VudENyZWF0b3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRfY3JlYXRvcl8xLkFjY291bnRDcmVhdG9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTG9jYWxBY2NvdW50Q3JlYXRvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudF9jcmVhdG9yXzEuTG9jYWxBY2NvdW50Q3JlYXRvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVybEFjY291bnRDcmVhdG9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50X2NyZWF0b3JfMS5VcmxBY2NvdW50Q3JlYXRvcjsgfSB9KTtcbnZhciBhY2NvdW50X211bHRpc2lnXzEgPSByZXF1aXJlKFwiLi9hY2NvdW50X211bHRpc2lnLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFjY291bnRNdWx0aXNpZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudF9tdWx0aXNpZ18xLkFjY291bnRNdWx0aXNpZzsgfSB9KTtcbnZhciBjb25uZWN0aW9uXzEgPSByZXF1aXJlKFwiLi9jb25uZWN0aW9uLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbm5lY3Rpb25fMS5Db25uZWN0aW9uOyB9IH0pO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1VTFRJU0lHX1NUT1JBR0VfS0VZXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25zdGFudHNfMS5NVUxUSVNJR19TVE9SQUdFX0tFWTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1VTFRJU0lHX0FMTE9XQU5DRVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuTVVMVElTSUdfQUxMT1dBTkNFOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTVVMVElTSUdfR0FTXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25zdGFudHNfMS5NVUxUSVNJR19HQVM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNVUxUSVNJR19ERVBPU0lUXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25zdGFudHNfMS5NVUxUSVNJR19ERVBPU0lUOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTVVMVElTSUdfQ0hBTkdFX01FVEhPRFNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLk1VTFRJU0lHX0NIQU5HRV9NRVRIT0RTOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTVVMVElTSUdfQ09ORklSTV9NRVRIT0RTXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25zdGFudHNfMS5NVUxUSVNJR19DT05GSVJNX01FVEhPRFM7IH0gfSk7XG52YXIgY29udHJhY3RfMSA9IHJlcXVpcmUoXCIuL2NvbnRyYWN0LmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnRyYWN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb250cmFjdF8xLkNvbnRyYWN0OyB9IH0pO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFyZ3VtZW50U2NoZW1hRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLkFyZ3VtZW50U2NoZW1hRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb25mbGljdGluZ09wdGlvbnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLkNvbmZsaWN0aW5nT3B0aW9uczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVua25vd25Bcmd1bWVudEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5Vbmtub3duQXJndW1lbnRFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVuc3VwcG9ydGVkU2VyaWFsaXphdGlvbkVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5VbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvcjsgfSB9KTtcbnZhciB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXMuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVzXzEuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNdWx0aXNpZ1N0YXRlU3RhdHVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlc18xLk11bHRpc2lnU3RhdGVTdGF0dXM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/index.cjs":
/*!************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/index.cjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LocalViewExecution = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst storage_1 = __webpack_require__(/*! ./storage.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/storage.cjs\");\nconst runtime_1 = __webpack_require__(/*! ./runtime.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/runtime.cjs\");\nconst utils_2 = __webpack_require__(/*! ../utils.cjs */ \"(ssr)/./node_modules/@near-js/accounts/lib/commonjs/utils.cjs\");\nclass LocalViewExecution {\n    connection;\n    storage;\n    constructor(connection) {\n        this.connection = connection.getConnection();\n        this.storage = new storage_1.Storage();\n    }\n    async fetchContractCode(contractId, blockQuery) {\n        const result = await this.connection.provider.query({\n            request_type: 'view_code',\n            account_id: contractId,\n            ...blockQuery,\n        });\n        return result.code_base64;\n    }\n    async fetchContractState(contractId, blockQuery) {\n        return (0, utils_2.viewState)(this.connection, contractId, '', blockQuery);\n    }\n    async fetch(contractId, blockQuery) {\n        const block = await this.connection.provider.block(blockQuery);\n        const blockHash = block.header.hash;\n        const blockHeight = block.header.height;\n        const blockTimestamp = block.header.timestamp;\n        const contractCode = await this.fetchContractCode(contractId, blockQuery);\n        const contractState = await this.fetchContractState(contractId, blockQuery);\n        return {\n            blockHash,\n            blockHeight,\n            blockTimestamp,\n            contractCode,\n            contractState,\n        };\n    }\n    async loadOrFetch(contractId, blockQuery) {\n        const stored = this.storage.load(blockQuery);\n        if (stored) {\n            return stored;\n        }\n        const { blockHash, ...fetched } = await this.fetch(contractId, blockQuery);\n        this.storage.save(blockHash, fetched);\n        return fetched;\n    }\n    /**\n     * Calls a view function on a contract, fetching the contract code and state if needed.\n     * @param options Options for calling the view function.\n     * @param options.contractId The contract account ID.\n     * @param options.methodName The name of the view function to call.\n     * @param options.args The arguments to pass to the view function.\n     * @param options.blockQuery The block query options.\n     * @returns {Promise<any>} - A promise that resolves to the result of the view function.\n     */\n    async viewFunction({ contractId, methodName, args = {}, blockQuery = { finality: 'optimistic' } }) {\n        const methodArgs = JSON.stringify(args);\n        const { contractCode, contractState, blockHeight, blockTimestamp } = await this.loadOrFetch(contractId, blockQuery);\n        const runtime = new runtime_1.Runtime({ contractId, contractCode, contractState, blockHeight, blockTimestamp, methodArgs });\n        const { result, logs } = await runtime.execute(methodName);\n        if (logs) {\n            (0, utils_1.printTxOutcomeLogs)({ contractId, logs });\n        }\n        return JSON.parse(Buffer.from(result).toString());\n    }\n}\nexports.LocalViewExecution = LocalViewExecution;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2xvY2FsLXZpZXctZXhlY3V0aW9uL2luZGV4LmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQWdCO0FBQ3hDLGtCQUFrQixtQkFBTyxDQUFDLDJHQUFlO0FBQ3pDLGtCQUFrQixtQkFBTyxDQUFDLDJHQUFlO0FBQ3pDLGdCQUFnQixtQkFBTyxDQUFDLG1GQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix3QkFBd0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsY0FBYztBQUMvQjtBQUNBLHlCQUF5QixpQ0FBaUMsaUJBQWlCLDBCQUEwQjtBQUNyRztBQUNBLGdCQUFnQiwyREFBMkQ7QUFDM0UsZ0RBQWdELGtGQUFrRjtBQUNsSSxnQkFBZ0IsZUFBZTtBQUMvQjtBQUNBLDhDQUE4QyxrQkFBa0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9jb21tb25qcy9sb2NhbC12aWV3LWV4ZWN1dGlvbi9pbmRleC5janM/YWYzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTG9jYWxWaWV3RXhlY3V0aW9uID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IHN0b3JhZ2VfMSA9IHJlcXVpcmUoXCIuL3N0b3JhZ2UuY2pzXCIpO1xuY29uc3QgcnVudGltZV8xID0gcmVxdWlyZShcIi4vcnVudGltZS5janNcIik7XG5jb25zdCB1dGlsc18yID0gcmVxdWlyZShcIi4uL3V0aWxzLmNqc1wiKTtcbmNsYXNzIExvY2FsVmlld0V4ZWN1dGlvbiB7XG4gICAgY29ubmVjdGlvbjtcbiAgICBzdG9yYWdlO1xuICAgIGNvbnN0cnVjdG9yKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uID0gY29ubmVjdGlvbi5nZXRDb25uZWN0aW9uKCk7XG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IG5ldyBzdG9yYWdlXzEuU3RvcmFnZSgpO1xuICAgIH1cbiAgICBhc3luYyBmZXRjaENvbnRyYWN0Q29kZShjb250cmFjdElkLCBibG9ja1F1ZXJ5KSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuY29ubmVjdGlvbi5wcm92aWRlci5xdWVyeSh7XG4gICAgICAgICAgICByZXF1ZXN0X3R5cGU6ICd2aWV3X2NvZGUnLFxuICAgICAgICAgICAgYWNjb3VudF9pZDogY29udHJhY3RJZCxcbiAgICAgICAgICAgIC4uLmJsb2NrUXVlcnksXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0LmNvZGVfYmFzZTY0O1xuICAgIH1cbiAgICBhc3luYyBmZXRjaENvbnRyYWN0U3RhdGUoY29udHJhY3RJZCwgYmxvY2tRdWVyeSkge1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzIudmlld1N0YXRlKSh0aGlzLmNvbm5lY3Rpb24sIGNvbnRyYWN0SWQsICcnLCBibG9ja1F1ZXJ5KTtcbiAgICB9XG4gICAgYXN5bmMgZmV0Y2goY29udHJhY3RJZCwgYmxvY2tRdWVyeSkge1xuICAgICAgICBjb25zdCBibG9jayA9IGF3YWl0IHRoaXMuY29ubmVjdGlvbi5wcm92aWRlci5ibG9jayhibG9ja1F1ZXJ5KTtcbiAgICAgICAgY29uc3QgYmxvY2tIYXNoID0gYmxvY2suaGVhZGVyLmhhc2g7XG4gICAgICAgIGNvbnN0IGJsb2NrSGVpZ2h0ID0gYmxvY2suaGVhZGVyLmhlaWdodDtcbiAgICAgICAgY29uc3QgYmxvY2tUaW1lc3RhbXAgPSBibG9jay5oZWFkZXIudGltZXN0YW1wO1xuICAgICAgICBjb25zdCBjb250cmFjdENvZGUgPSBhd2FpdCB0aGlzLmZldGNoQ29udHJhY3RDb2RlKGNvbnRyYWN0SWQsIGJsb2NrUXVlcnkpO1xuICAgICAgICBjb25zdCBjb250cmFjdFN0YXRlID0gYXdhaXQgdGhpcy5mZXRjaENvbnRyYWN0U3RhdGUoY29udHJhY3RJZCwgYmxvY2tRdWVyeSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBibG9ja0hhc2gsXG4gICAgICAgICAgICBibG9ja0hlaWdodCxcbiAgICAgICAgICAgIGJsb2NrVGltZXN0YW1wLFxuICAgICAgICAgICAgY29udHJhY3RDb2RlLFxuICAgICAgICAgICAgY29udHJhY3RTdGF0ZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgYXN5bmMgbG9hZE9yRmV0Y2goY29udHJhY3RJZCwgYmxvY2tRdWVyeSkge1xuICAgICAgICBjb25zdCBzdG9yZWQgPSB0aGlzLnN0b3JhZ2UubG9hZChibG9ja1F1ZXJ5KTtcbiAgICAgICAgaWYgKHN0b3JlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0b3JlZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7IGJsb2NrSGFzaCwgLi4uZmV0Y2hlZCB9ID0gYXdhaXQgdGhpcy5mZXRjaChjb250cmFjdElkLCBibG9ja1F1ZXJ5KTtcbiAgICAgICAgdGhpcy5zdG9yYWdlLnNhdmUoYmxvY2tIYXNoLCBmZXRjaGVkKTtcbiAgICAgICAgcmV0dXJuIGZldGNoZWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbGxzIGEgdmlldyBmdW5jdGlvbiBvbiBhIGNvbnRyYWN0LCBmZXRjaGluZyB0aGUgY29udHJhY3QgY29kZSBhbmQgc3RhdGUgaWYgbmVlZGVkLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbnMgZm9yIGNhbGxpbmcgdGhlIHZpZXcgZnVuY3Rpb24uXG4gICAgICogQHBhcmFtIG9wdGlvbnMuY29udHJhY3RJZCBUaGUgY29udHJhY3QgYWNjb3VudCBJRC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5tZXRob2ROYW1lIFRoZSBuYW1lIG9mIHRoZSB2aWV3IGZ1bmN0aW9uIHRvIGNhbGwuXG4gICAgICogQHBhcmFtIG9wdGlvbnMuYXJncyBUaGUgYXJndW1lbnRzIHRvIHBhc3MgdG8gdGhlIHZpZXcgZnVuY3Rpb24uXG4gICAgICogQHBhcmFtIG9wdGlvbnMuYmxvY2tRdWVyeSBUaGUgYmxvY2sgcXVlcnkgb3B0aW9ucy5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSAtIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSByZXN1bHQgb2YgdGhlIHZpZXcgZnVuY3Rpb24uXG4gICAgICovXG4gICAgYXN5bmMgdmlld0Z1bmN0aW9uKHsgY29udHJhY3RJZCwgbWV0aG9kTmFtZSwgYXJncyA9IHt9LCBibG9ja1F1ZXJ5ID0geyBmaW5hbGl0eTogJ29wdGltaXN0aWMnIH0gfSkge1xuICAgICAgICBjb25zdCBtZXRob2RBcmdzID0gSlNPTi5zdHJpbmdpZnkoYXJncyk7XG4gICAgICAgIGNvbnN0IHsgY29udHJhY3RDb2RlLCBjb250cmFjdFN0YXRlLCBibG9ja0hlaWdodCwgYmxvY2tUaW1lc3RhbXAgfSA9IGF3YWl0IHRoaXMubG9hZE9yRmV0Y2goY29udHJhY3RJZCwgYmxvY2tRdWVyeSk7XG4gICAgICAgIGNvbnN0IHJ1bnRpbWUgPSBuZXcgcnVudGltZV8xLlJ1bnRpbWUoeyBjb250cmFjdElkLCBjb250cmFjdENvZGUsIGNvbnRyYWN0U3RhdGUsIGJsb2NrSGVpZ2h0LCBibG9ja1RpbWVzdGFtcCwgbWV0aG9kQXJncyB9KTtcbiAgICAgICAgY29uc3QgeyByZXN1bHQsIGxvZ3MgfSA9IGF3YWl0IHJ1bnRpbWUuZXhlY3V0ZShtZXRob2ROYW1lKTtcbiAgICAgICAgaWYgKGxvZ3MpIHtcbiAgICAgICAgICAgICgwLCB1dGlsc18xLnByaW50VHhPdXRjb21lTG9ncykoeyBjb250cmFjdElkLCBsb2dzIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKEJ1ZmZlci5mcm9tKHJlc3VsdCkudG9TdHJpbmcoKSk7XG4gICAgfVxufVxuZXhwb3J0cy5Mb2NhbFZpZXdFeGVjdXRpb24gPSBMb2NhbFZpZXdFeGVjdXRpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/runtime.cjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/runtime.cjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Runtime = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst notImplemented = (name) => () => {\n    throw new Error('method not implemented: ' + name);\n};\nconst prohibitedInView = (name) => () => {\n    throw new Error('method not available for view calls: ' + name);\n};\nclass Runtime {\n    context;\n    wasm;\n    memory;\n    registers;\n    logs;\n    result;\n    constructor({ contractCode, ...context }) {\n        this.context = context;\n        this.wasm = this.prepareWASM(Buffer.from(contractCode, 'base64'));\n        this.memory = new WebAssembly.Memory({ initial: 1024, maximum: 2048 });\n        this.registers = {};\n        this.logs = [];\n        this.result = Buffer.from([]);\n    }\n    readUTF16CStr(ptr) {\n        const arr = [];\n        const mem = new Uint16Array(this.memory.buffer);\n        let key = Number(ptr) / 2;\n        while (mem[key] != 0) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(Uint16Array.from(arr).buffer).toString('ucs2');\n    }\n    readUTF8CStr(len, ptr) {\n        const arr = [];\n        const mem = new Uint8Array(this.memory.buffer);\n        let key = Number(ptr);\n        for (let i = 0; i < len && mem[key] != 0; i++) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(arr).toString('utf8');\n    }\n    storageRead(keyLen, keyPtr) {\n        const storageKey = Buffer.from(new Uint8Array(this.memory.buffer, Number(keyPtr), Number(keyLen)));\n        const stateVal = this.context.contractState.filter((obj) => Buffer.compare(obj.key, storageKey) === 0).map((obj) => obj.value);\n        if (stateVal.length === 0)\n            return null;\n        return stateVal.length > 1 ? stateVal : stateVal[0];\n    }\n    prepareWASM(input) {\n        const parts = [];\n        const magic = input.subarray(0, 4);\n        if (magic.toString('utf8') !== '\\0asm') {\n            throw new Error('Invalid magic number');\n        }\n        const version = input.readUInt32LE(4);\n        if (version != 1) {\n            throw new Error('Invalid version: ' + version);\n        }\n        let offset = 8;\n        parts.push(input.subarray(0, offset));\n        function decodeLEB128() {\n            let result = 0;\n            let shift = 0;\n            let byte;\n            do {\n                byte = input[offset++];\n                result |= (byte & 0x7f) << shift;\n                shift += 7;\n            } while (byte & 0x80);\n            return result;\n        }\n        function decodeLimits() {\n            const flags = input[offset++];\n            const hasMax = flags & 0x1;\n            const initial = decodeLEB128();\n            const max = hasMax ? decodeLEB128() : null;\n            return { initial, max };\n        }\n        function decodeString() {\n            const length = decodeLEB128();\n            const result = input.subarray(offset, offset + length);\n            offset += length;\n            return result.toString('utf8');\n        }\n        function encodeLEB128(value) {\n            const result = [];\n            do {\n                let byte = value & 0x7f;\n                value >>= 7;\n                if (value !== 0) {\n                    byte |= 0x80;\n                }\n                result.push(byte);\n            } while (value !== 0);\n            return Buffer.from(result);\n        }\n        function encodeString(value) {\n            const result = Buffer.from(value, 'utf8');\n            return Buffer.concat([encodeLEB128(result.length), result]);\n        }\n        do {\n            const sectionStart = offset;\n            const sectionId = input.readUInt8(offset);\n            offset++;\n            const sectionSize = decodeLEB128();\n            const sectionEnd = offset + sectionSize;\n            if (sectionId == 5) {\n                // Memory section\n                // Make sure it's empty and only imported memory is used\n                parts.push(Buffer.from([5, 1, 0]));\n            }\n            else if (sectionId == 2) {\n                // Import section\n                const sectionParts = [];\n                const numImports = decodeLEB128();\n                for (let i = 0; i < numImports; i++) {\n                    const importStart = offset;\n                    decodeString();\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    let skipImport = false;\n                    switch (kind) {\n                        case 0:\n                            // Function import\n                            decodeLEB128(); // index\n                            break;\n                        case 1:\n                            // Table import\n                            offset++; // type\n                            decodeLimits();\n                            break;\n                        case 2:\n                            // Memory import\n                            decodeLimits();\n                            // NOTE: existing memory import is removed (so no need to add it to sectionParts)\n                            skipImport = true;\n                            break;\n                        case 3:\n                            // Global import\n                            offset++; // type\n                            offset++; // mutability\n                            break;\n                        default:\n                            throw new Error('Invalid import kind: ' + kind);\n                    }\n                    if (!skipImport) {\n                        sectionParts.push(input.subarray(importStart, offset));\n                    }\n                }\n                const importMemory = Buffer.concat([\n                    encodeString('env'),\n                    encodeString('memory'),\n                    Buffer.from([2]), // Memory import\n                    Buffer.from([0]),\n                    encodeLEB128(1),\n                ]);\n                sectionParts.push(importMemory);\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([2]), // Import section\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else if (sectionId == 7) {\n                // Export section\n                const sectionParts = [];\n                const numExports = decodeLEB128();\n                for (let i = 0; i < numExports; i++) {\n                    const exportStart = offset;\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    decodeLEB128();\n                    if (kind !== 2) {\n                        // Pass through all exports except memory\n                        sectionParts.push(input.subarray(exportStart, offset));\n                    }\n                }\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([7]), // Export section\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else {\n                parts.push(input.subarray(sectionStart, sectionEnd));\n            }\n            offset = sectionEnd;\n        } while (offset < input.length);\n        return Buffer.concat(parts);\n    }\n    // Host functions\n    getRegisterLength(registerId) {\n        return BigInt(this.registers[registerId.toString()] ? this.registers[registerId.toString()].length : Number.MAX_SAFE_INTEGER);\n    }\n    readFromRegister(registerId, ptr) {\n        const mem = new Uint8Array(this.memory.buffer);\n        mem.set(this.registers[registerId.toString()] || Buffer.from([]), Number(ptr));\n    }\n    getCurrentAccountId(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.contractId);\n    }\n    inputMethodArgs(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.methodArgs);\n    }\n    getBlockHeight() {\n        return BigInt(this.context.blockHeight);\n    }\n    getBlockTimestamp() {\n        return BigInt(this.context.blockTimestamp);\n    }\n    sha256(valueLen, valuePtr, registerId) {\n        const value = new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen));\n        this.registers[registerId.toString()] = (0, sha256_1.sha256)(value);\n    }\n    returnValue(valueLen, valuePtr) {\n        this.result = Buffer.from(new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen)));\n    }\n    panic(message) {\n        throw new Error('panic: ' + message);\n    }\n    abort(msg_ptr, filename_ptr, line, col) {\n        const msg = this.readUTF16CStr(msg_ptr);\n        const filename = this.readUTF16CStr(filename_ptr);\n        const message = `${msg} ${filename}:${line}:${col}`;\n        if (!msg || !filename) {\n            throw new Error('abort: ' + 'String encoding is bad UTF-16 sequence.');\n        }\n        throw new Error('abort: ' + message);\n    }\n    appendToLog(len, ptr) {\n        this.logs.push(this.readUTF8CStr(len, ptr));\n    }\n    readStorage(key_len, key_ptr, register_id) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return 0n;\n        }\n        this.registers[register_id] = result;\n        return 1n;\n    }\n    hasStorageKey(key_len, key_ptr) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return 0n;\n        }\n        return 1n;\n    }\n    getHostImports() {\n        return {\n            register_len: this.getRegisterLength.bind(this),\n            read_register: this.readFromRegister.bind(this),\n            current_account_id: this.getCurrentAccountId.bind(this),\n            input: this.inputMethodArgs.bind(this),\n            block_index: this.getBlockHeight.bind(this),\n            block_timestamp: this.getBlockTimestamp.bind(this),\n            sha256: this.sha256.bind(this),\n            value_return: this.returnValue.bind(this),\n            abort: this.abort.bind(this),\n            log_utf8: this.appendToLog.bind(this),\n            log_utf16: this.appendToLog.bind(this),\n            storage_read: this.readStorage.bind(this),\n            storage_has_key: this.hasStorageKey.bind(this),\n            panic: () => this.panic('explicit guest panic'),\n            panic_utf8: (len, ptr) => this.panic(this.readUTF8CStr(len, ptr)),\n            // Not implemented\n            epoch_height: notImplemented('epoch_height'),\n            storage_usage: notImplemented('storage_usage'),\n            account_balance: notImplemented('account_balance'),\n            account_locked_balance: notImplemented('account_locked_balance'),\n            random_seed: notImplemented('random_seed'),\n            ripemd160: notImplemented('ripemd160'),\n            keccak256: notImplemented('keccak256'),\n            keccak512: notImplemented('keccak512'),\n            ecrecover: notImplemented('ecrecover'),\n            validator_stake: notImplemented('validator_stake'),\n            validator_total_stake: notImplemented('validator_total_stake'),\n            // Prohibited\n            write_register: prohibitedInView('write_register'),\n            signer_account_id: prohibitedInView('signer_account_id'),\n            signer_account_pk: prohibitedInView('signer_account_pk'),\n            predecessor_account_id: prohibitedInView('predecessor_account_id'),\n            attached_deposit: prohibitedInView('attached_deposit'),\n            prepaid_gas: prohibitedInView('prepaid_gas'),\n            used_gas: prohibitedInView('used_gas'),\n            promise_create: prohibitedInView('promise_create'),\n            promise_then: prohibitedInView('promise_then'),\n            promise_and: prohibitedInView('promise_and'),\n            promise_batch_create: prohibitedInView('promise_batch_create'),\n            promise_batch_then: prohibitedInView('promise_batch_then'),\n            promise_batch_action_create_account: prohibitedInView('promise_batch_action_create_account'),\n            promise_batch_action_deploy_contract: prohibitedInView('promise_batch_action_deploy_contract'),\n            promise_batch_action_function_call: prohibitedInView('promise_batch_action_function_call'),\n            promise_batch_action_function_call_weight: prohibitedInView('promise_batch_action_function_call_weight'),\n            promise_batch_action_transfer: prohibitedInView('promise_batch_action_transfer'),\n            promise_batch_action_stake: prohibitedInView('promise_batch_action_stake'),\n            promise_batch_action_add_key_with_full_access: prohibitedInView('promise_batch_action_add_key_with_full_access'),\n            promise_batch_action_add_key_with_function_call: prohibitedInView('promise_batch_action_add_key_with_function_call'),\n            promise_batch_action_delete_key: prohibitedInView('promise_batch_action_delete_key'),\n            promise_batch_action_delete_account: prohibitedInView('promise_batch_action_delete_account'),\n            promise_results_count: prohibitedInView('promise_results_count'),\n            promise_result: prohibitedInView('promise_result'),\n            promise_return: prohibitedInView('promise_return'),\n            storage_write: prohibitedInView('storage_write'),\n            storage_remove: prohibitedInView('storage_remove'),\n        };\n    }\n    async execute(methodName) {\n        const module = await WebAssembly.compile(this.wasm);\n        const instance = await WebAssembly.instantiate(module, { env: { ...this.getHostImports(), memory: this.memory } });\n        const callMethod = instance.exports[methodName];\n        if (callMethod == undefined) {\n            throw new Error(`Contract method '${methodName}' does not exists in contract ${this.context.contractId} for block id ${this.context.blockHeight}`);\n        }\n        callMethod();\n        return {\n            result: this.result,\n            logs: this.logs\n        };\n    }\n}\nexports.Runtime = Runtime;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/runtime.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/storage.cjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/storage.cjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Storage = void 0;\nconst lru_map_1 = __webpack_require__(/*! lru_map */ \"(ssr)/./node_modules/lru_map/dist/lru.js\");\nclass Storage {\n    cache;\n    static MAX_ELEMENTS = 100;\n    // map block hash to block height\n    blockHeights;\n    constructor(options = { max: Storage.MAX_ELEMENTS }) {\n        this.cache = new lru_map_1.LRUMap(options.max);\n        this.blockHeights = new Map();\n    }\n    load(blockRef) {\n        const noBlockId = !('blockId' in blockRef);\n        if (noBlockId)\n            return undefined;\n        let blockId = blockRef.blockId;\n        // block hash is passed, so get its corresponding block height\n        if (blockId.toString().length == 44) {\n            blockId = this.blockHeights.get(blockId.toString());\n        }\n        // get cached values for the given block height\n        return this.cache.get(blockId);\n    }\n    save(blockHash, { blockHeight, blockTimestamp, contractCode, contractState }) {\n        this.blockHeights.set(blockHash, blockHeight);\n        this.cache.set(blockHeight, { blockHeight, blockTimestamp, contractCode, contractState });\n    }\n}\nexports.Storage = Storage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2xvY2FsLXZpZXctZXhlY3V0aW9uL3N0b3JhZ2UuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixrQkFBa0IsbUJBQU8sQ0FBQyx5REFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDJCQUEyQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMERBQTBEO0FBQ2hGO0FBQ0Esc0NBQXNDLDBEQUEwRDtBQUNoRztBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL2xvY2FsLXZpZXctZXhlY3V0aW9uL3N0b3JhZ2UuY2pzPzhkMDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN0b3JhZ2UgPSB2b2lkIDA7XG5jb25zdCBscnVfbWFwXzEgPSByZXF1aXJlKFwibHJ1X21hcFwiKTtcbmNsYXNzIFN0b3JhZ2Uge1xuICAgIGNhY2hlO1xuICAgIHN0YXRpYyBNQVhfRUxFTUVOVFMgPSAxMDA7XG4gICAgLy8gbWFwIGJsb2NrIGhhc2ggdG8gYmxvY2sgaGVpZ2h0XG4gICAgYmxvY2tIZWlnaHRzO1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7IG1heDogU3RvcmFnZS5NQVhfRUxFTUVOVFMgfSkge1xuICAgICAgICB0aGlzLmNhY2hlID0gbmV3IGxydV9tYXBfMS5MUlVNYXAob3B0aW9ucy5tYXgpO1xuICAgICAgICB0aGlzLmJsb2NrSGVpZ2h0cyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgbG9hZChibG9ja1JlZikge1xuICAgICAgICBjb25zdCBub0Jsb2NrSWQgPSAhKCdibG9ja0lkJyBpbiBibG9ja1JlZik7XG4gICAgICAgIGlmIChub0Jsb2NrSWQpXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICBsZXQgYmxvY2tJZCA9IGJsb2NrUmVmLmJsb2NrSWQ7XG4gICAgICAgIC8vIGJsb2NrIGhhc2ggaXMgcGFzc2VkLCBzbyBnZXQgaXRzIGNvcnJlc3BvbmRpbmcgYmxvY2sgaGVpZ2h0XG4gICAgICAgIGlmIChibG9ja0lkLnRvU3RyaW5nKCkubGVuZ3RoID09IDQ0KSB7XG4gICAgICAgICAgICBibG9ja0lkID0gdGhpcy5ibG9ja0hlaWdodHMuZ2V0KGJsb2NrSWQudG9TdHJpbmcoKSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZ2V0IGNhY2hlZCB2YWx1ZXMgZm9yIHRoZSBnaXZlbiBibG9jayBoZWlnaHRcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUuZ2V0KGJsb2NrSWQpO1xuICAgIH1cbiAgICBzYXZlKGJsb2NrSGFzaCwgeyBibG9ja0hlaWdodCwgYmxvY2tUaW1lc3RhbXAsIGNvbnRyYWN0Q29kZSwgY29udHJhY3RTdGF0ZSB9KSB7XG4gICAgICAgIHRoaXMuYmxvY2tIZWlnaHRzLnNldChibG9ja0hhc2gsIGJsb2NrSGVpZ2h0KTtcbiAgICAgICAgdGhpcy5jYWNoZS5zZXQoYmxvY2tIZWlnaHQsIHsgYmxvY2tIZWlnaHQsIGJsb2NrVGltZXN0YW1wLCBjb250cmFjdENvZGUsIGNvbnRyYWN0U3RhdGUgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TdG9yYWdlID0gU3RvcmFnZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/local-view-execution/storage.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/types.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/types.cjs ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = void 0;\nvar MultisigDeleteRequestRejectionError;\n(function (MultisigDeleteRequestRejectionError) {\n    MultisigDeleteRequestRejectionError[\"CANNOT_DESERIALIZE_STATE\"] = \"Cannot deserialize the contract state\";\n    MultisigDeleteRequestRejectionError[\"MULTISIG_NOT_INITIALIZED\"] = \"Smart contract panicked: Multisig contract should be initialized before usage\";\n    MultisigDeleteRequestRejectionError[\"NO_SUCH_REQUEST\"] = \"Smart contract panicked: panicked at 'No such request: either wrong number or already confirmed'\";\n    MultisigDeleteRequestRejectionError[\"REQUEST_COOLDOWN_ERROR\"] = \"Request cannot be deleted immediately after creation.\";\n    MultisigDeleteRequestRejectionError[\"METHOD_NOT_FOUND\"] = \"Contract method is not found\";\n})(MultisigDeleteRequestRejectionError || (exports.MultisigDeleteRequestRejectionError = MultisigDeleteRequestRejectionError = {}));\nvar MultisigStateStatus;\n(function (MultisigStateStatus) {\n    MultisigStateStatus[MultisigStateStatus[\"INVALID_STATE\"] = 0] = \"INVALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"STATE_NOT_INITIALIZED\"] = 1] = \"STATE_NOT_INITIALIZED\";\n    MultisigStateStatus[MultisigStateStatus[\"VALID_STATE\"] = 2] = \"VALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"UNKNOWN_STATE\"] = 3] = \"UNKNOWN_STATE\";\n})(MultisigStateStatus || (exports.MultisigStateStatus = MultisigStateStatus = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL3R5cGVzLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQ0FBMkM7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBDQUEwQywyQ0FBMkMsMkNBQTJDO0FBQ2pJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCLDJCQUEyQiwyQkFBMkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9jb21tb25qcy90eXBlcy5janM/OWE1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlzaWdTdGF0ZVN0YXR1cyA9IGV4cG9ydHMuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IgPSB2b2lkIDA7XG52YXIgTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3I7XG4oZnVuY3Rpb24gKE11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yKSB7XG4gICAgTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3JbXCJDQU5OT1RfREVTRVJJQUxJWkVfU1RBVEVcIl0gPSBcIkNhbm5vdCBkZXNlcmlhbGl6ZSB0aGUgY29udHJhY3Qgc3RhdGVcIjtcbiAgICBNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvcltcIk1VTFRJU0lHX05PVF9JTklUSUFMSVpFRFwiXSA9IFwiU21hcnQgY29udHJhY3QgcGFuaWNrZWQ6IE11bHRpc2lnIGNvbnRyYWN0IHNob3VsZCBiZSBpbml0aWFsaXplZCBiZWZvcmUgdXNhZ2VcIjtcbiAgICBNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvcltcIk5PX1NVQ0hfUkVRVUVTVFwiXSA9IFwiU21hcnQgY29udHJhY3QgcGFuaWNrZWQ6IHBhbmlja2VkIGF0ICdObyBzdWNoIHJlcXVlc3Q6IGVpdGhlciB3cm9uZyBudW1iZXIgb3IgYWxyZWFkeSBjb25maXJtZWQnXCI7XG4gICAgTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3JbXCJSRVFVRVNUX0NPT0xET1dOX0VSUk9SXCJdID0gXCJSZXF1ZXN0IGNhbm5vdCBiZSBkZWxldGVkIGltbWVkaWF0ZWx5IGFmdGVyIGNyZWF0aW9uLlwiO1xuICAgIE11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yW1wiTUVUSE9EX05PVF9GT1VORFwiXSA9IFwiQ29udHJhY3QgbWV0aG9kIGlzIG5vdCBmb3VuZFwiO1xufSkoTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IgfHwgKGV4cG9ydHMuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IgPSBNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvciA9IHt9KSk7XG52YXIgTXVsdGlzaWdTdGF0ZVN0YXR1cztcbihmdW5jdGlvbiAoTXVsdGlzaWdTdGF0ZVN0YXR1cykge1xuICAgIE11bHRpc2lnU3RhdGVTdGF0dXNbTXVsdGlzaWdTdGF0ZVN0YXR1c1tcIklOVkFMSURfU1RBVEVcIl0gPSAwXSA9IFwiSU5WQUxJRF9TVEFURVwiO1xuICAgIE11bHRpc2lnU3RhdGVTdGF0dXNbTXVsdGlzaWdTdGF0ZVN0YXR1c1tcIlNUQVRFX05PVF9JTklUSUFMSVpFRFwiXSA9IDFdID0gXCJTVEFURV9OT1RfSU5JVElBTElaRURcIjtcbiAgICBNdWx0aXNpZ1N0YXRlU3RhdHVzW011bHRpc2lnU3RhdGVTdGF0dXNbXCJWQUxJRF9TVEFURVwiXSA9IDJdID0gXCJWQUxJRF9TVEFURVwiO1xuICAgIE11bHRpc2lnU3RhdGVTdGF0dXNbTXVsdGlzaWdTdGF0ZVN0YXR1c1tcIlVOS05PV05fU1RBVEVcIl0gPSAzXSA9IFwiVU5LTk9XTl9TVEFURVwiO1xufSkoTXVsdGlzaWdTdGF0ZVN0YXR1cyB8fCAoZXhwb3J0cy5NdWx0aXNpZ1N0YXRlU3RhdHVzID0gTXVsdGlzaWdTdGF0ZVN0YXR1cyA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/types.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/accounts/lib/commonjs/utils.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/commonjs/utils.cjs ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.viewFunction = exports.viewState = exports.encodeJSContractArgs = exports.validateArgs = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\nfunction bytesJsonStringify(input) {\n    return Buffer.from(JSON.stringify(input));\n}\nfunction validateArgs(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    if (isUint8Array) {\n        return;\n    }\n    if (Array.isArray(args) || typeof args !== 'object') {\n        throw new types_1.PositionalArgsError();\n    }\n}\nexports.validateArgs = validateArgs;\nfunction encodeJSContractArgs(contractId, method, args) {\n    return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n}\nexports.encodeJSContractArgs = encodeJSContractArgs;\n/**\n * Returns the state (key value pairs) of account's contract based on the key prefix.\n * Pass an empty string for prefix if you would like to return the entire state.\n * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n *\n * @param connection connection to query state from\n * @param accountId account whose state is viewed\n * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n */\nasync function viewState(connection, accountId, prefix, blockQuery = { finality: 'optimistic' }) {\n    const { values } = await connection.provider.query({\n        request_type: 'view_state',\n        ...blockQuery,\n        account_id: accountId,\n        prefix_base64: Buffer.from(prefix).toString('base64')\n    });\n    return values.map(({ key, value }) => ({\n        key: Buffer.from(key, 'base64'),\n        value: Buffer.from(value, 'base64')\n    }));\n}\nexports.viewState = viewState;\n/**\n * Invoke a contract view function using the RPC API.\n * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n *\n * @param options Function call options.\n * @param options.contractId NEAR account where the contract is deployed\n * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n * @param options.args Any arguments to the view contract method, wrapped in JSON\n * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n * @returns {Promise<any>}\n */\nasync function viewFunction(connection, { contractId, methodName, args = {}, parse = parseJsonFromRawResponse, stringify = bytesJsonStringify, jsContract = false, blockQuery = { finality: 'optimistic' } }) {\n    let encodedArgs;\n    validateArgs(args);\n    if (jsContract) {\n        encodedArgs = encodeJSContractArgs(contractId, methodName, Object.keys(args).length > 0 ? JSON.stringify(args) : '');\n    }\n    else {\n        encodedArgs = stringify(args);\n    }\n    const result = await connection.provider.query({\n        request_type: 'call_function',\n        ...blockQuery,\n        account_id: jsContract ? connection.jsvmAccountId : contractId,\n        method_name: jsContract ? 'view_js_contract' : methodName,\n        args_base64: encodedArgs.toString('base64')\n    });\n    if (result.logs) {\n        (0, utils_1.printTxOutcomeLogs)({ contractId, logs: result.logs });\n    }\n    return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n}\nexports.viewFunction = viewFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbW1vbmpzL3V0aWxzLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyxpQkFBaUIsR0FBRyw0QkFBNEIsR0FBRyxvQkFBb0I7QUFDOUYsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQWdCO0FBQ3hDLGdCQUFnQixtQkFBTyxDQUFDLGtGQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLHdCQUF3QjtBQUMvRixZQUFZLFNBQVM7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wseUJBQXlCLFlBQVk7QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSwwQ0FBMEMsaUNBQWlDLHVHQUF1RywwQkFBMEI7QUFDNU07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDBDQUEwQywrQkFBK0I7QUFDekU7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9saWIvY29tbW9uanMvdXRpbHMuY2pzPzAxMDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZpZXdGdW5jdGlvbiA9IGV4cG9ydHMudmlld1N0YXRlID0gZXhwb3J0cy5lbmNvZGVKU0NvbnRyYWN0QXJncyA9IGV4cG9ydHMudmFsaWRhdGVBcmdzID0gdm9pZCAwO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG5mdW5jdGlvbiBwYXJzZUpzb25Gcm9tUmF3UmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShCdWZmZXIuZnJvbShyZXNwb25zZSkudG9TdHJpbmcoKSk7XG59XG5mdW5jdGlvbiBieXRlc0pzb25TdHJpbmdpZnkoaW5wdXQpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oSlNPTi5zdHJpbmdpZnkoaW5wdXQpKTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlQXJncyhhcmdzKSB7XG4gICAgY29uc3QgaXNVaW50OEFycmF5ID0gYXJncy5ieXRlTGVuZ3RoICE9PSB1bmRlZmluZWQgJiYgYXJncy5ieXRlTGVuZ3RoID09PSBhcmdzLmxlbmd0aDtcbiAgICBpZiAoaXNVaW50OEFycmF5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXJncykgfHwgdHlwZW9mIGFyZ3MgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHRocm93IG5ldyB0eXBlc18xLlBvc2l0aW9uYWxBcmdzRXJyb3IoKTtcbiAgICB9XG59XG5leHBvcnRzLnZhbGlkYXRlQXJncyA9IHZhbGlkYXRlQXJncztcbmZ1bmN0aW9uIGVuY29kZUpTQ29udHJhY3RBcmdzKGNvbnRyYWN0SWQsIG1ldGhvZCwgYXJncykge1xuICAgIHJldHVybiBCdWZmZXIuY29uY2F0KFtCdWZmZXIuZnJvbShjb250cmFjdElkKSwgQnVmZmVyLmZyb20oWzBdKSwgQnVmZmVyLmZyb20obWV0aG9kKSwgQnVmZmVyLmZyb20oWzBdKSwgQnVmZmVyLmZyb20oYXJncyldKTtcbn1cbmV4cG9ydHMuZW5jb2RlSlNDb250cmFjdEFyZ3MgPSBlbmNvZGVKU0NvbnRyYWN0QXJncztcbi8qKlxuICogUmV0dXJucyB0aGUgc3RhdGUgKGtleSB2YWx1ZSBwYWlycykgb2YgYWNjb3VudCdzIGNvbnRyYWN0IGJhc2VkIG9uIHRoZSBrZXkgcHJlZml4LlxuICogUGFzcyBhbiBlbXB0eSBzdHJpbmcgZm9yIHByZWZpeCBpZiB5b3Ugd291bGQgbGlrZSB0byByZXR1cm4gdGhlIGVudGlyZSBzdGF0ZS5cbiAqIEBzZWUgW2h0dHBzOi8vZG9jcy5uZWFyLm9yZy9hcGkvcnBjL2NvbnRyYWN0cyN2aWV3LWNvbnRyYWN0LXN0YXRlXShodHRwczovL2RvY3MubmVhci5vcmcvYXBpL3JwYy9jb250cmFjdHMjdmlldy1jb250cmFjdC1zdGF0ZSlcbiAqXG4gKiBAcGFyYW0gY29ubmVjdGlvbiBjb25uZWN0aW9uIHRvIHF1ZXJ5IHN0YXRlIGZyb21cbiAqIEBwYXJhbSBhY2NvdW50SWQgYWNjb3VudCB3aG9zZSBzdGF0ZSBpcyB2aWV3ZWRcbiAqIEBwYXJhbSBwcmVmaXggYWxsb3dzIHRvIGZpbHRlciB3aGljaCBrZXlzIHNob3VsZCBiZSByZXR1cm5lZC4gRW1wdHkgcHJlZml4IG1lYW5zIGFsbCBrZXlzLiBTdHJpbmcgcHJlZml4IGlzIHV0Zi04IGVuY29kZWQuXG4gKiBAcGFyYW0gYmxvY2tRdWVyeSBzcGVjaWZpZXMgd2hpY2ggYmxvY2sgdG8gcXVlcnkgc3RhdGUgYXQuIEJ5IGRlZmF1bHQgcmV0dXJucyBsYXN0IFwib3B0aW1pc3RpY1wiIGJsb2NrIChpLmUuIG5vdCBuZWNlc3NhcmlseSBmaW5hbGl6ZWQpLlxuICovXG5hc3luYyBmdW5jdGlvbiB2aWV3U3RhdGUoY29ubmVjdGlvbiwgYWNjb3VudElkLCBwcmVmaXgsIGJsb2NrUXVlcnkgPSB7IGZpbmFsaXR5OiAnb3B0aW1pc3RpYycgfSkge1xuICAgIGNvbnN0IHsgdmFsdWVzIH0gPSBhd2FpdCBjb25uZWN0aW9uLnByb3ZpZGVyLnF1ZXJ5KHtcbiAgICAgICAgcmVxdWVzdF90eXBlOiAndmlld19zdGF0ZScsXG4gICAgICAgIC4uLmJsb2NrUXVlcnksXG4gICAgICAgIGFjY291bnRfaWQ6IGFjY291bnRJZCxcbiAgICAgICAgcHJlZml4X2Jhc2U2NDogQnVmZmVyLmZyb20ocHJlZml4KS50b1N0cmluZygnYmFzZTY0JylcbiAgICB9KTtcbiAgICByZXR1cm4gdmFsdWVzLm1hcCgoeyBrZXksIHZhbHVlIH0pID0+ICh7XG4gICAgICAgIGtleTogQnVmZmVyLmZyb20oa2V5LCAnYmFzZTY0JyksXG4gICAgICAgIHZhbHVlOiBCdWZmZXIuZnJvbSh2YWx1ZSwgJ2Jhc2U2NCcpXG4gICAgfSkpO1xufVxuZXhwb3J0cy52aWV3U3RhdGUgPSB2aWV3U3RhdGU7XG4vKipcbiAqIEludm9rZSBhIGNvbnRyYWN0IHZpZXcgZnVuY3Rpb24gdXNpbmcgdGhlIFJQQyBBUEkuXG4gKiBAc2VlIFtodHRwczovL2RvY3MubmVhci5vcmcvYXBpL3JwYy9jb250cmFjdHMjY2FsbC1hLWNvbnRyYWN0LWZ1bmN0aW9uXShodHRwczovL2RvY3MubmVhci5vcmcvYXBpL3JwYy9jb250cmFjdHMjY2FsbC1hLWNvbnRyYWN0LWZ1bmN0aW9uKVxuICpcbiAqIEBwYXJhbSBvcHRpb25zIEZ1bmN0aW9uIGNhbGwgb3B0aW9ucy5cbiAqIEBwYXJhbSBvcHRpb25zLmNvbnRyYWN0SWQgTkVBUiBhY2NvdW50IHdoZXJlIHRoZSBjb250cmFjdCBpcyBkZXBsb3llZFxuICogQHBhcmFtIG9wdGlvbnMubWV0aG9kTmFtZSBUaGUgdmlldy1vbmx5IG1ldGhvZCAobm8gc3RhdGUgbXV0YXRpb25zKSBuYW1lIG9uIHRoZSBjb250cmFjdCBhcyBpdCBpcyB3cml0dGVuIGluIHRoZSBjb250cmFjdCBjb2RlXG4gKiBAcGFyYW0gb3B0aW9ucy5hcmdzIEFueSBhcmd1bWVudHMgdG8gdGhlIHZpZXcgY29udHJhY3QgbWV0aG9kLCB3cmFwcGVkIGluIEpTT05cbiAqIEBwYXJhbSBvcHRpb25zLnBhcnNlIFBhcnNlIHRoZSByZXN1bHQgb2YgdGhlIGNhbGwuIFJlY2VpdmVzIGEgQnVmZmVyIChieXRlcyBhcnJheSkgYW5kIGNvbnZlcnRzIGl0IHRvIGFueSBvYmplY3QuIEJ5IGRlZmF1bHQgcmVzdWx0IHdpbGwgYmUgdHJlYXRlZCBhcyBqc29uLlxuICogQHBhcmFtIG9wdGlvbnMuc3RyaW5naWZ5IENvbnZlcnQgaW5wdXQgYXJndW1lbnRzIGludG8gYSBieXRlcyBhcnJheS4gQnkgZGVmYXVsdCB0aGUgaW5wdXQgaXMgdHJlYXRlZCBhcyBhIEpTT04uXG4gKiBAcGFyYW0gb3B0aW9ucy5qc0NvbnRyYWN0IElzIGNvbnRyYWN0IGZyb20gSlMgU0RLLCBhdXRvbWF0aWNhbGx5IGVuY29kZXMgYXJncyBmcm9tIEpTIFNESyB0byBiaW5hcnkuXG4gKiBAcGFyYW0gb3B0aW9ucy5ibG9ja1F1ZXJ5IHNwZWNpZmllcyB3aGljaCBibG9jayB0byBxdWVyeSBzdGF0ZSBhdC4gQnkgZGVmYXVsdCByZXR1cm5zIGxhc3QgXCJvcHRpbWlzdGljXCIgYmxvY2sgKGkuZS4gbm90IG5lY2Vzc2FyaWx5IGZpbmFsaXplZCkuXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICovXG5hc3luYyBmdW5jdGlvbiB2aWV3RnVuY3Rpb24oY29ubmVjdGlvbiwgeyBjb250cmFjdElkLCBtZXRob2ROYW1lLCBhcmdzID0ge30sIHBhcnNlID0gcGFyc2VKc29uRnJvbVJhd1Jlc3BvbnNlLCBzdHJpbmdpZnkgPSBieXRlc0pzb25TdHJpbmdpZnksIGpzQ29udHJhY3QgPSBmYWxzZSwgYmxvY2tRdWVyeSA9IHsgZmluYWxpdHk6ICdvcHRpbWlzdGljJyB9IH0pIHtcbiAgICBsZXQgZW5jb2RlZEFyZ3M7XG4gICAgdmFsaWRhdGVBcmdzKGFyZ3MpO1xuICAgIGlmIChqc0NvbnRyYWN0KSB7XG4gICAgICAgIGVuY29kZWRBcmdzID0gZW5jb2RlSlNDb250cmFjdEFyZ3MoY29udHJhY3RJZCwgbWV0aG9kTmFtZSwgT2JqZWN0LmtleXMoYXJncykubGVuZ3RoID4gMCA/IEpTT04uc3RyaW5naWZ5KGFyZ3MpIDogJycpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZW5jb2RlZEFyZ3MgPSBzdHJpbmdpZnkoYXJncyk7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbm5lY3Rpb24ucHJvdmlkZXIucXVlcnkoe1xuICAgICAgICByZXF1ZXN0X3R5cGU6ICdjYWxsX2Z1bmN0aW9uJyxcbiAgICAgICAgLi4uYmxvY2tRdWVyeSxcbiAgICAgICAgYWNjb3VudF9pZDoganNDb250cmFjdCA/IGNvbm5lY3Rpb24uanN2bUFjY291bnRJZCA6IGNvbnRyYWN0SWQsXG4gICAgICAgIG1ldGhvZF9uYW1lOiBqc0NvbnRyYWN0ID8gJ3ZpZXdfanNfY29udHJhY3QnIDogbWV0aG9kTmFtZSxcbiAgICAgICAgYXJnc19iYXNlNjQ6IGVuY29kZWRBcmdzLnRvU3RyaW5nKCdiYXNlNjQnKVxuICAgIH0pO1xuICAgIGlmIChyZXN1bHQubG9ncykge1xuICAgICAgICAoMCwgdXRpbHNfMS5wcmludFR4T3V0Y29tZUxvZ3MpKHsgY29udHJhY3RJZCwgbG9nczogcmVzdWx0LmxvZ3MgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQucmVzdWx0ICYmIHJlc3VsdC5yZXN1bHQubGVuZ3RoID4gMCAmJiBwYXJzZShCdWZmZXIuZnJvbShyZXN1bHQucmVzdWx0KSk7XG59XG5leHBvcnRzLnZpZXdGdW5jdGlvbiA9IHZpZXdGdW5jdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/accounts/lib/commonjs/utils.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/crypto/lib/commonjs/constants.cjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@near-js/crypto/lib/commonjs/constants.cjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeySize = exports.KeyType = void 0;\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n    KeyType[KeyType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(KeyType || (exports.KeyType = KeyType = {}));\nexports.KeySize = {\n    SECRET_KEY: 32,\n    ED25519_PUBLIC_KEY: 32,\n    SECP256k1_PUBLIC_KEY: 64,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9jb21tb25qcy9jb25zdGFudHMuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGNBQWMsZUFBZSxlQUFlO0FBQzdDLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9jb21tb25qcy9jb25zdGFudHMuY2pzPzgyNjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVNpemUgPSBleHBvcnRzLktleVR5cGUgPSB2b2lkIDA7XG4vKiogQWxsIHN1cHBvcnRlZCBrZXkgdHlwZXMgKi9cbnZhciBLZXlUeXBlO1xuKGZ1bmN0aW9uIChLZXlUeXBlKSB7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiRUQyNTUxOVwiXSA9IDBdID0gXCJFRDI1NTE5XCI7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiU0VDUDI1NksxXCJdID0gMV0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoS2V5VHlwZSB8fCAoZXhwb3J0cy5LZXlUeXBlID0gS2V5VHlwZSA9IHt9KSk7XG5leHBvcnRzLktleVNpemUgPSB7XG4gICAgU0VDUkVUX0tFWTogMzIsXG4gICAgRUQyNTUxOV9QVUJMSUNfS0VZOiAzMixcbiAgICBTRUNQMjU2azFfUFVCTElDX0tFWTogNjQsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/crypto/lib/commonjs/constants.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/crypto/lib/commonjs/index.cjs":
/*!*************************************************************!*\
  !*** ./node_modules/@near-js/crypto/lib/commonjs/index.cjs ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.KeyPairSecp256k1 = exports.KeyPairEd25519 = exports.KeyPair = exports.KeyType = void 0;\nvar constants_1 = __webpack_require__(/*! ./constants.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/constants.cjs\");\nObject.defineProperty(exports, \"KeyType\", ({ enumerable: true, get: function () { return constants_1.KeyType; } }));\nvar key_pair_1 = __webpack_require__(/*! ./key_pair.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair.cjs\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nvar key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_ed25519.cjs\");\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return key_pair_ed25519_1.KeyPairEd25519; } }));\nvar key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_secp256k1.cjs\");\nObject.defineProperty(exports, \"KeyPairSecp256k1\", ({ enumerable: true, get: function () { return key_pair_secp256k1_1.KeyPairSecp256k1; } }));\nvar public_key_1 = __webpack_require__(/*! ./public_key.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/public_key.cjs\");\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return public_key_1.PublicKey; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9jb21tb25qcy9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsZUFBZSxHQUFHLGVBQWU7QUFDekcsa0JBQWtCLG1CQUFPLENBQUMsd0ZBQWlCO0FBQzNDLDJDQUEwQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNqSCxpQkFBaUIsbUJBQU8sQ0FBQyxzRkFBZ0I7QUFDekMsMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILHlCQUF5QixtQkFBTyxDQUFDLHNHQUF3QjtBQUN6RCxrREFBaUQsRUFBRSxxQ0FBcUMsNkNBQTZDLEVBQUM7QUFDdEksMkJBQTJCLG1CQUFPLENBQUMsMEdBQTBCO0FBQzdELG9EQUFtRCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUM1SSxtQkFBbUIsbUJBQU8sQ0FBQywwRkFBa0I7QUFDN0MsNkNBQTRDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9jcnlwdG8vbGliL2NvbW1vbmpzL2luZGV4LmNqcz9mZmQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QdWJsaWNLZXkgPSBleHBvcnRzLktleVBhaXJTZWNwMjU2azEgPSBleHBvcnRzLktleVBhaXJFZDI1NTE5ID0gZXhwb3J0cy5LZXlQYWlyID0gZXhwb3J0cy5LZXlUeXBlID0gdm9pZCAwO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVR5cGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLktleVR5cGU7IH0gfSk7XG52YXIga2V5X3BhaXJfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleV9wYWlyXzEuS2V5UGFpcjsgfSB9KTtcbnZhciBrZXlfcGFpcl9lZDI1NTE5XzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9lZDI1NTE5LmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJFZDI1NTE5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9lZDI1NTE5XzEuS2V5UGFpckVkMjU1MTk7IH0gfSk7XG52YXIga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azEuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5UGFpclNlY3AyNTZrMVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4ga2V5X3BhaXJfc2VjcDI1NmsxXzEuS2V5UGFpclNlY3AyNTZrMTsgfSB9KTtcbnZhciBwdWJsaWNfa2V5XzEgPSByZXF1aXJlKFwiLi9wdWJsaWNfa2V5LmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlB1YmxpY0tleVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHVibGljX2tleV8xLlB1YmxpY0tleTsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/crypto/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair.cjs":
/*!****************************************************************!*\
  !*** ./node_modules/@near-js/crypto/lib/commonjs/key_pair.cjs ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPair = void 0;\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_base.cjs\");\nconst key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_ed25519.cjs\");\nconst key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_secp256k1.cjs\");\nclass KeyPair extends key_pair_base_1.KeyPairBase {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return key_pair_ed25519_1.KeyPairEd25519.fromRandom();\n            case 'SECP256K1': return key_pair_secp256k1_1.KeyPairSecp256k1.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    /**\n     * Creates a key pair from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {KeyPair} The key pair created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new key_pair_ed25519_1.KeyPairEd25519(parts[1]);\n                case 'SECP256K1': return new key_pair_secp256k1_1.KeyPairSecp256k1(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9jb21tb25qcy9rZXlfcGFpci5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHdCQUF3QixtQkFBTyxDQUFDLGdHQUFxQjtBQUNyRCwyQkFBMkIsbUJBQU8sQ0FBQyxzR0FBd0I7QUFDM0QsNkJBQTZCLG1CQUFPLENBQUMsMEdBQTBCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxTQUFTO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9jb21tb25qcy9rZXlfcGFpci5janM/MGEzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpciA9IHZvaWQgMDtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2UuY2pzXCIpO1xuY29uc3Qga2V5X3BhaXJfZWQyNTUxOV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfZWQyNTUxOS5janNcIik7XG5jb25zdCBrZXlfcGFpcl9zZWNwMjU2azFfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX3NlY3AyNTZrMS5janNcIik7XG5jbGFzcyBLZXlQYWlyIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY3VydmUgTmFtZSBvZiBlbGxpcHRpY2FsIGN1cnZlLCBjYXNlLWluc2Vuc2l0aXZlXG4gICAgICogQHJldHVybnMgUmFuZG9tIEtleVBhaXIgYmFzZWQgb24gdGhlIGN1cnZlXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oY3VydmUpIHtcbiAgICAgICAgc3dpdGNoIChjdXJ2ZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICAgICAgICBjYXNlICdFRDI1NTE5JzogcmV0dXJuIGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBjYXNlICdTRUNQMjU2SzEnOiByZXR1cm4ga2V5X3BhaXJfc2VjcDI1NmsxXzEuS2V5UGFpclNlY3AyNTZrMS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmUgJHtjdXJ2ZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEga2V5IHBhaXIgZnJvbSBhbiBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHBhcmFtIGVuY29kZWRLZXkgVGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKiBAcmV0dXJucyB7S2V5UGFpcn0gVGhlIGtleSBwYWlyIGNyZWF0ZWQgZnJvbSB0aGUgZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGVuY29kZWRLZXkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBlbmNvZGVkS2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocGFydHNbMF0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0VEMjU1MTknOiByZXR1cm4gbmV3IGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOShwYXJ0c1sxXSk7XG4gICAgICAgICAgICAgICAgY2FzZSAnU0VDUDI1NksxJzogcmV0dXJuIG5ldyBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxKHBhcnRzWzFdKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmU6ICR7cGFydHNbMF19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jb2RlZCBrZXkgZm9ybWF0LCBtdXN0IGJlIDxjdXJ2ZT46PGVuY29kZWQga2V5PicpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyID0gS2V5UGFpcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_base.cjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@near-js/crypto/lib/commonjs/key_pair_base.cjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairBase = void 0;\nclass KeyPairBase {\n}\nexports.KeyPairBase = KeyPairBase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9jb21tb25qcy9rZXlfcGFpcl9iYXNlLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9jb21tb25qcy9rZXlfcGFpcl9iYXNlLmNqcz81NDZhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlQYWlyQmFzZSA9IHZvaWQgMDtcbmNsYXNzIEtleVBhaXJCYXNlIHtcbn1cbmV4cG9ydHMuS2V5UGFpckJhc2UgPSBLZXlQYWlyQmFzZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_base.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_ed25519.cjs":
/*!************************************************************************!*\
  !*** ./node_modules/@near-js/crypto/lib/commonjs/key_pair_ed25519.cjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairEd25519 = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"(ssr)/./node_modules/@noble/curves/ed25519.js\");\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/constants.cjs\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_base.cjs\");\nconst public_key_1 = __webpack_require__(/*! ./public_key.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/public_key.cjs\");\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends key_pair_base_1.KeyPairBase {\n    publicKey;\n    secretKey;\n    extendedSecretKey;\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        this.publicKey = new public_key_1.PublicKey({ keyType: constants_1.KeyType.ED25519, data: publicKey });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairEd25519((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    /**\n     * Signs a message using the key pair's secret key.\n     * @param message The message to be signed.\n     * @returns {Signature} The signature object containing the signature and the public key.\n     */\n    sign(message) {\n        const signature = ed25519_1.ed25519.sign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    /**\n     * Verifies the signature of a message using the key pair's public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    /**\n     * Returns a string representation of the key pair in the format 'ed25519:[extendedSecretKey]'.\n     * @returns {string} The string representation of the key pair.\n     */\n    toString() {\n        return `ed25519:${this.extendedSecretKey}`;\n    }\n    /**\n     * Retrieves the public key associated with the key pair.\n     * @returns {PublicKey} The public key.\n     */\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9jb21tb25qcy9rZXlfcGFpcl9lZDI1NTE5LmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQyxrRkFBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsNEVBQXVCO0FBQ2pELHNDQUFzQyxtQkFBTyxDQUFDLDhEQUFhO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLHdGQUFpQjtBQUM3Qyx3QkFBd0IsbUJBQU8sQ0FBQyxnR0FBcUI7QUFDckQscUJBQXFCLG1CQUFPLENBQUMsMEZBQWtCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCx1REFBdUQ7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixTQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQSwwQkFBMEIsdUJBQXVCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29tbW9uanMva2V5X3BhaXJfZWQyNTUxOS5janM/OTgyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpckVkMjU1MTkgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3V0aWxzXCIpO1xuY29uc3QgZWQyNTUxOV8xID0gcmVxdWlyZShcIkBub2JsZS9jdXJ2ZXMvZWQyNTUxOVwiKTtcbmNvbnN0IHJhbmRvbWJ5dGVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzLmNqc1wiKTtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2UuY2pzXCIpO1xuY29uc3QgcHVibGljX2tleV8xID0gcmVxdWlyZShcIi4vcHVibGljX2tleS5janNcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcHJvdmlkZXMga2V5IHBhaXIgZnVuY3Rpb25hbGl0eSBmb3IgRWQyNTUxOSBjdXJ2ZTpcbiAqIGdlbmVyYXRpbmcga2V5IHBhaXJzLCBlbmNvZGluZyBrZXkgcGFpcnMsIHNpZ25pbmcgYW5kIHZlcmlmeWluZy5cbiAqL1xuY2xhc3MgS2V5UGFpckVkMjU1MTkgZXh0ZW5kcyBrZXlfcGFpcl9iYXNlXzEuS2V5UGFpckJhc2Uge1xuICAgIHB1YmxpY0tleTtcbiAgICBzZWNyZXRLZXk7XG4gICAgZXh0ZW5kZWRTZWNyZXRLZXk7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGFuIGluc3RhbmNlIG9mIGtleSBwYWlyIGdpdmVuIGEgc2VjcmV0IGtleS5cbiAgICAgKiBJdCdzIGdlbmVyYWxseSBhc3N1bWVkIHRoYXQgdGhlc2UgYXJlIGVuY29kZWQgaW4gYmFzZTU4LlxuICAgICAqIEBwYXJhbSBleHRlbmRlZFNlY3JldEtleVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGV4dGVuZGVkU2VjcmV0S2V5KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKShleHRlbmRlZFNlY3JldEtleSk7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9IG5ldyBVaW50OEFycmF5KGRlY29kZWQuc2xpY2UoMCwgY29uc3RhbnRzXzEuS2V5U2l6ZS5TRUNSRVRfS0VZKSk7XG4gICAgICAgIGNvbnN0IHB1YmxpY0tleSA9IGVkMjU1MTlfMS5lZDI1NTE5LmdldFB1YmxpY0tleShuZXcgVWludDhBcnJheShzZWNyZXRLZXkpKTtcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBuZXcgcHVibGljX2tleV8xLlB1YmxpY0tleSh7IGtleVR5cGU6IGNvbnN0YW50c18xLktleVR5cGUuRUQyNTUxOSwgZGF0YTogcHVibGljS2V5IH0pO1xuICAgICAgICB0aGlzLnNlY3JldEtleSA9ICgwLCB1dGlsc18xLmJhc2VFbmNvZGUpKHNlY3JldEtleSk7XG4gICAgICAgIHRoaXMuZXh0ZW5kZWRTZWNyZXRLZXkgPSBleHRlbmRlZFNlY3JldEtleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGUgYSBuZXcgcmFuZG9tIGtleXBhaXIuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBjb25zdCBrZXlSYW5kb20gPSBLZXlQYWlyLmZyb21SYW5kb20oKTtcbiAgICAgKiBrZXlSYW5kb20ucHVibGljS2V5XG4gICAgICogLy8gcmV0dXJucyBbUFVCTElDX0tFWV1cbiAgICAgKlxuICAgICAqIGtleVJhbmRvbS5zZWNyZXRLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtTRUNSRVRfS0VZXVxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUmFuZG9tKCkge1xuICAgICAgICBjb25zdCBzZWNyZXRLZXkgPSAoMCwgcmFuZG9tYnl0ZXNfMS5kZWZhdWx0KShjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpO1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSBlZDI1NTE5XzEuZWQyNTUxOS5nZXRQdWJsaWNLZXkobmV3IFVpbnQ4QXJyYXkoc2VjcmV0S2V5KSk7XG4gICAgICAgIGNvbnN0IGV4dGVuZGVkU2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoWy4uLnNlY3JldEtleSwgLi4ucHVibGljS2V5XSk7XG4gICAgICAgIHJldHVybiBuZXcgS2V5UGFpckVkMjU1MTkoKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoZXh0ZW5kZWRTZWNyZXRLZXkpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2lnbnMgYSBtZXNzYWdlIHVzaW5nIHRoZSBrZXkgcGFpcidzIHNlY3JldCBrZXkuXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gYmUgc2lnbmVkLlxuICAgICAqIEByZXR1cm5zIHtTaWduYXR1cmV9IFRoZSBzaWduYXR1cmUgb2JqZWN0IGNvbnRhaW5pbmcgdGhlIHNpZ25hdHVyZSBhbmQgdGhlIHB1YmxpYyBrZXkuXG4gICAgICovXG4gICAgc2lnbihtZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IGVkMjU1MTlfMS5lZDI1NTE5LnNpZ24obWVzc2FnZSwgKDAsIHV0aWxzXzEuYmFzZURlY29kZSkodGhpcy5zZWNyZXRLZXkpKTtcbiAgICAgICAgcmV0dXJuIHsgc2lnbmF0dXJlLCBwdWJsaWNLZXk6IHRoaXMucHVibGljS2V5IH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFZlcmlmaWVzIHRoZSBzaWduYXR1cmUgb2YgYSBtZXNzYWdlIHVzaW5nIHRoZSBrZXkgcGFpcidzIHB1YmxpYyBrZXkuXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gYmUgdmVyaWZpZWQuXG4gICAgICogQHBhcmFtIHNpZ25hdHVyZSBUaGUgc2lnbmF0dXJlIHRvIGJlIHZlcmlmaWVkLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBgdHJ1ZWAgaWYgdGhlIHNpZ25hdHVyZSBpcyB2YWxpZCwgb3RoZXJ3aXNlIGBmYWxzZWAuXG4gICAgICovXG4gICAgdmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXkudmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGtleSBwYWlyIGluIHRoZSBmb3JtYXQgJ2VkMjU1MTk6W2V4dGVuZGVkU2VjcmV0S2V5XScuXG4gICAgICogQHJldHVybnMge3N0cmluZ30gVGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5IHBhaXIuXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBgZWQyNTUxOToke3RoaXMuZXh0ZW5kZWRTZWNyZXRLZXl9YDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIHRoZSBwdWJsaWMga2V5IGFzc29jaWF0ZWQgd2l0aCB0aGUga2V5IHBhaXIuXG4gICAgICogQHJldHVybnMge1B1YmxpY0tleX0gVGhlIHB1YmxpYyBrZXkuXG4gICAgICovXG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyRWQyNTUxOSA9IEtleVBhaXJFZDI1NTE5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_ed25519.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_secp256k1.cjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@near-js/crypto/lib/commonjs/key_pair_secp256k1.cjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairSecp256k1 = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"(ssr)/./node_modules/randombytes/index.js\"));\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"(ssr)/./node_modules/secp256k1/index.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/constants.cjs\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_base.cjs\");\nconst public_key_1 = __webpack_require__(/*! ./public_key.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/public_key.cjs\");\n/**\n * This class provides key pair functionality for secp256k1 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n * nearcore expects secp256k1 public keys to be 64 bytes at all times,\n * even when string encoded the secp256k1 library returns 65 byte keys\n * (including a 1 byte header that indicates how the pubkey was encoded).\n * We'll force the secp256k1 library to always encode uncompressed\n * keys with the corresponding 0x04 header byte, then manually\n * insert/remove that byte as needed.\n */\nclass KeyPairSecp256k1 extends key_pair_base_1.KeyPairBase {\n    publicKey;\n    secretKey;\n    extendedSecretKey;\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const data = withHeader.subarray(1, withHeader.length); // remove the 0x04 header byte\n        this.publicKey = new public_key_1.PublicKey({\n            keyType: constants_1.KeyType.SECP256K1,\n            data\n        });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        // TODO: find better way to generate PK\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const publicKey = withHeader.subarray(1, withHeader.length);\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairSecp256k1((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    sign(message) {\n        // nearcore expects 65 byte signatures formed by appending the recovery id to the 64 byte signature\n        const { signature, recid } = secp256k1_1.default.ecdsaSign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature: new Uint8Array([...signature, recid]), publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `secp256k1:${this.extendedSecretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairSecp256k1 = KeyPairSecp256k1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9jb21tb25qcy9rZXlfcGFpcl9zZWNwMjU2azEuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLGdCQUFnQixtQkFBTyxDQUFDLGtGQUFnQjtBQUN4QyxzQ0FBc0MsbUJBQU8sQ0FBQyw4REFBYTtBQUMzRCxvQ0FBb0MsbUJBQU8sQ0FBQywwREFBVztBQUN2RCxvQkFBb0IsbUJBQU8sQ0FBQyx3RkFBaUI7QUFDN0Msd0JBQXdCLG1CQUFPLENBQUMsZ0dBQXFCO0FBQ3JELHFCQUFxQixtQkFBTyxDQUFDLDBGQUFrQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkMsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdUJBQXVCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29tbW9uanMva2V5X3BhaXJfc2VjcDI1NmsxLmNqcz8zZDRhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlQYWlyU2VjcDI1NmsxID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IHJhbmRvbWJ5dGVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbmNvbnN0IHNlY3AyNTZrMV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzZWNwMjU2azFcIikpO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHMuY2pzXCIpO1xuY29uc3Qga2V5X3BhaXJfYmFzZV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfYmFzZS5janNcIik7XG5jb25zdCBwdWJsaWNfa2V5XzEgPSByZXF1aXJlKFwiLi9wdWJsaWNfa2V5LmNqc1wiKTtcbi8qKlxuICogVGhpcyBjbGFzcyBwcm92aWRlcyBrZXkgcGFpciBmdW5jdGlvbmFsaXR5IGZvciBzZWNwMjU2azEgY3VydmU6XG4gKiBnZW5lcmF0aW5nIGtleSBwYWlycywgZW5jb2Rpbmcga2V5IHBhaXJzLCBzaWduaW5nIGFuZCB2ZXJpZnlpbmcuXG4gKiBuZWFyY29yZSBleHBlY3RzIHNlY3AyNTZrMSBwdWJsaWMga2V5cyB0byBiZSA2NCBieXRlcyBhdCBhbGwgdGltZXMsXG4gKiBldmVuIHdoZW4gc3RyaW5nIGVuY29kZWQgdGhlIHNlY3AyNTZrMSBsaWJyYXJ5IHJldHVybnMgNjUgYnl0ZSBrZXlzXG4gKiAoaW5jbHVkaW5nIGEgMSBieXRlIGhlYWRlciB0aGF0IGluZGljYXRlcyBob3cgdGhlIHB1YmtleSB3YXMgZW5jb2RlZCkuXG4gKiBXZSdsbCBmb3JjZSB0aGUgc2VjcDI1NmsxIGxpYnJhcnkgdG8gYWx3YXlzIGVuY29kZSB1bmNvbXByZXNzZWRcbiAqIGtleXMgd2l0aCB0aGUgY29ycmVzcG9uZGluZyAweDA0IGhlYWRlciBieXRlLCB0aGVuIG1hbnVhbGx5XG4gKiBpbnNlcnQvcmVtb3ZlIHRoYXQgYnl0ZSBhcyBuZWVkZWQuXG4gKi9cbmNsYXNzIEtleVBhaXJTZWNwMjU2azEgZXh0ZW5kcyBrZXlfcGFpcl9iYXNlXzEuS2V5UGFpckJhc2Uge1xuICAgIHB1YmxpY0tleTtcbiAgICBzZWNyZXRLZXk7XG4gICAgZXh0ZW5kZWRTZWNyZXRLZXk7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGFuIGluc3RhbmNlIG9mIGtleSBwYWlyIGdpdmVuIGEgc2VjcmV0IGtleS5cbiAgICAgKiBJdCdzIGdlbmVyYWxseSBhc3N1bWVkIHRoYXQgdGhlc2UgYXJlIGVuY29kZWQgaW4gYmFzZTU4LlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBleHRlbmRlZFNlY3JldEtleVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGV4dGVuZGVkU2VjcmV0S2V5KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKShleHRlbmRlZFNlY3JldEtleSk7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9IG5ldyBVaW50OEFycmF5KGRlY29kZWQuc2xpY2UoMCwgY29uc3RhbnRzXzEuS2V5U2l6ZS5TRUNSRVRfS0VZKSk7XG4gICAgICAgIGNvbnN0IHdpdGhIZWFkZXIgPSBzZWNwMjU2azFfMS5kZWZhdWx0LnB1YmxpY0tleUNyZWF0ZShuZXcgVWludDhBcnJheShzZWNyZXRLZXkpLCBmYWxzZSk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSB3aXRoSGVhZGVyLnN1YmFycmF5KDEsIHdpdGhIZWFkZXIubGVuZ3RoKTsgLy8gcmVtb3ZlIHRoZSAweDA0IGhlYWRlciBieXRlXG4gICAgICAgIHRoaXMucHVibGljS2V5ID0gbmV3IHB1YmxpY19rZXlfMS5QdWJsaWNLZXkoe1xuICAgICAgICAgICAga2V5VHlwZTogY29uc3RhbnRzXzEuS2V5VHlwZS5TRUNQMjU2SzEsXG4gICAgICAgICAgICBkYXRhXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNlY3JldEtleSA9ICgwLCB1dGlsc18xLmJhc2VFbmNvZGUpKHNlY3JldEtleSk7XG4gICAgICAgIHRoaXMuZXh0ZW5kZWRTZWNyZXRLZXkgPSBleHRlbmRlZFNlY3JldEtleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGUgYSBuZXcgcmFuZG9tIGtleXBhaXIuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBjb25zdCBrZXlSYW5kb20gPSBLZXlQYWlyLmZyb21SYW5kb20oKTtcbiAgICAgKiBrZXlSYW5kb20ucHVibGljS2V5XG4gICAgICogLy8gcmV0dXJucyBbUFVCTElDX0tFWV1cbiAgICAgKlxuICAgICAqIGtleVJhbmRvbS5zZWNyZXRLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtTRUNSRVRfS0VZXVxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUmFuZG9tKCkge1xuICAgICAgICAvLyBUT0RPOiBmaW5kIGJldHRlciB3YXkgdG8gZ2VuZXJhdGUgUEtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gKDAsIHJhbmRvbWJ5dGVzXzEuZGVmYXVsdCkoY29uc3RhbnRzXzEuS2V5U2l6ZS5TRUNSRVRfS0VZKTtcbiAgICAgICAgY29uc3Qgd2l0aEhlYWRlciA9IHNlY3AyNTZrMV8xLmRlZmF1bHQucHVibGljS2V5Q3JlYXRlKG5ldyBVaW50OEFycmF5KHNlY3JldEtleSksIGZhbHNlKTtcbiAgICAgICAgY29uc3QgcHVibGljS2V5ID0gd2l0aEhlYWRlci5zdWJhcnJheSgxLCB3aXRoSGVhZGVyLmxlbmd0aCk7XG4gICAgICAgIGNvbnN0IGV4dGVuZGVkU2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoWy4uLnNlY3JldEtleSwgLi4ucHVibGljS2V5XSk7XG4gICAgICAgIHJldHVybiBuZXcgS2V5UGFpclNlY3AyNTZrMSgoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKShleHRlbmRlZFNlY3JldEtleSkpO1xuICAgIH1cbiAgICBzaWduKG1lc3NhZ2UpIHtcbiAgICAgICAgLy8gbmVhcmNvcmUgZXhwZWN0cyA2NSBieXRlIHNpZ25hdHVyZXMgZm9ybWVkIGJ5IGFwcGVuZGluZyB0aGUgcmVjb3ZlcnkgaWQgdG8gdGhlIDY0IGJ5dGUgc2lnbmF0dXJlXG4gICAgICAgIGNvbnN0IHsgc2lnbmF0dXJlLCByZWNpZCB9ID0gc2VjcDI1NmsxXzEuZGVmYXVsdC5lY2RzYVNpZ24obWVzc2FnZSwgKDAsIHV0aWxzXzEuYmFzZURlY29kZSkodGhpcy5zZWNyZXRLZXkpKTtcbiAgICAgICAgcmV0dXJuIHsgc2lnbmF0dXJlOiBuZXcgVWludDhBcnJheShbLi4uc2lnbmF0dXJlLCByZWNpZF0pLCBwdWJsaWNLZXk6IHRoaXMucHVibGljS2V5IH07XG4gICAgfVxuICAgIHZlcmlmeShtZXNzYWdlLCBzaWduYXR1cmUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHVibGljS2V5LnZlcmlmeShtZXNzYWdlLCBzaWduYXR1cmUpO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBzZWNwMjU2azE6JHt0aGlzLmV4dGVuZGVkU2VjcmV0S2V5fWA7XG4gICAgfVxuICAgIGdldFB1YmxpY0tleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHVibGljS2V5O1xuICAgIH1cbn1cbmV4cG9ydHMuS2V5UGFpclNlY3AyNTZrMSA9IEtleVBhaXJTZWNwMjU2azE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/crypto/lib/commonjs/key_pair_secp256k1.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/crypto/lib/commonjs/public_key.cjs":
/*!******************************************************************!*\
  !*** ./node_modules/@near-js/crypto/lib/commonjs/public_key.cjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"(ssr)/./node_modules/@noble/curves/ed25519.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"(ssr)/./node_modules/secp256k1/index.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants.cjs */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/constants.cjs\");\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: return 'ed25519';\n        case constants_1.KeyType.SECP256K1: return 'secp256k1';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return constants_1.KeyType.ED25519;\n        case 'secp256k1': return constants_1.KeyType.SECP256K1;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nclass ED25519PublicKey {\n    keyType = constants_1.KeyType.ED25519;\n    data;\n}\nclass SECP256K1PublicKey {\n    keyType = constants_1.KeyType.SECP256K1;\n    data;\n}\nfunction resolveEnumKeyName(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: {\n            return 'ed25519Key';\n        }\n        case constants_1.KeyType.SECP256K1: {\n            return 'secp256k1Key';\n        }\n        default: {\n            throw Error(`unknown type ${keyType}`);\n        }\n    }\n}\n/**\n * DUPLICATED FROM @near-js/types - REPLACE WITH IMPORTED REFERENCE AND DELETE\n * This ends up being necessary for Wallet Selector dependencies with\n * outdated peer dependencies and should only be temporary\n */\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends Enum {\n    enum;\n    ed25519Key;\n    secp256k1Key;\n    constructor(publicKey) {\n        const keyName = resolveEnumKeyName(publicKey.keyType);\n        super({ [keyName]: publicKey });\n        this[keyName] = publicKey;\n        this.enum = keyName;\n    }\n    /**\n     * Creates a PublicKey instance from a string or an existing PublicKey instance.\n     * @param value The string or PublicKey instance to create a PublicKey from.\n     * @returns {PublicKey} The PublicKey instance.\n     */\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    /**\n     * Creates a PublicKey instance from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {PublicKey} The PublicKey instance created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        let publicKey;\n        let keyType;\n        if (parts.length === 1) {\n            publicKey = parts[0];\n        }\n        else if (parts.length === 2) {\n            publicKey = parts[1];\n            keyType = str_to_key_type(parts[0]);\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n        const decodedPublicKey = (0, utils_1.baseDecode)(publicKey);\n        if (!keyType) {\n            keyType = decodedPublicKey.length === constants_1.KeySize.SECP256k1_PUBLIC_KEY ? constants_1.KeyType.SECP256K1 : constants_1.KeyType.ED25519;\n        }\n        const keySize = keyType === constants_1.KeyType.ED25519 ? constants_1.KeySize.ED25519_PUBLIC_KEY : constants_1.KeySize.SECP256k1_PUBLIC_KEY;\n        if (decodedPublicKey.length !== keySize) {\n            throw new Error(`Invalid public key size (${decodedPublicKey.length}), must be ${keySize}`);\n        }\n        return new PublicKey({ keyType, data: decodedPublicKey });\n    }\n    /**\n     * Returns a string representation of the public key.\n     * @returns {string} The string representation of the public key.\n     */\n    toString() {\n        const encodedKey = (0, utils_1.baseEncode)(this.data);\n        return `${key_type_to_str(this.keyType)}:${encodedKey}`;\n    }\n    /**\n     * Verifies a message signature using the public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        const keyType = this.keyType;\n        const data = this.data;\n        switch (keyType) {\n            case constants_1.KeyType.ED25519:\n                return ed25519_1.ed25519.verify(signature, message, data);\n            case constants_1.KeyType.SECP256K1:\n                return secp256k1_1.default.ecdsaVerify(signature.subarray(0, 64), message, new Uint8Array([0x04, ...data]));\n            default:\n                throw new Error(`Unknown key type: ${keyType}`);\n        }\n    }\n    get keyPair() {\n        return this.ed25519Key || this.secp256k1Key;\n    }\n    get keyType() {\n        return this.keyPair.keyType;\n    }\n    get data() {\n        return this.keyPair.data;\n    }\n}\nexports.PublicKey = PublicKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/crypto/lib/commonjs/public_key.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores/lib/commonjs/in_memory_key_store.cjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@near-js/keystores/lib/commonjs/in_memory_key_store.cjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemoryKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/index.cjs\");\nconst keystore_1 = __webpack_require__(/*! ./keystore.cjs */ \"(ssr)/./node_modules/@near-js/keystores/lib/commonjs/keystore.cjs\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    /** @hidden */\n    keys;\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@link KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.keys[`${accountId}:${networkId}`];\n        if (!value) {\n            return null;\n        }\n        return crypto_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        delete this.keys[`${accountId}:${networkId}`];\n    }\n    /**\n     * Removes all {@link KeyPair} from in-memory storage\n     */\n    async clear() {\n        this.keys = {};\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            result.add(parts[1]);\n        });\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        Object.keys(this.keys).forEach((key) => {\n            const parts = key.split(':');\n            if (parts[parts.length - 1] === networkId) {\n                result.push(parts.slice(0, parts.length - 1).join(':'));\n            }\n        });\n        return result;\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9jb21tb25qcy9pbl9tZW1vcnlfa2V5X3N0b3JlLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsaUJBQWlCLG1CQUFPLENBQUMsb0ZBQWlCO0FBQzFDLG1CQUFtQixtQkFBTyxDQUFDLHlGQUFnQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDRCQUE0QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixlQUFlO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsVUFBVSxHQUFHLFVBQVU7QUFDNUM7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxtQ0FBbUMsVUFBVSxHQUFHLFVBQVU7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGVBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsVUFBVSxHQUFHLFVBQVU7QUFDbkQ7QUFDQTtBQUNBLG9CQUFvQixlQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvY29tbW9uanMvaW5fbWVtb3J5X2tleV9zdG9yZS5janM/OTA4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW5NZW1vcnlLZXlTdG9yZSA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2NyeXB0b1wiKTtcbmNvbnN0IGtleXN0b3JlXzEgPSByZXF1aXJlKFwiLi9rZXlzdG9yZS5janNcIik7XG4vKipcbiAqIFNpbXBsZSBpbi1tZW1vcnkga2V5c3RvcmUgZm9yIG1haW5seSBmb3IgdGVzdGluZyBwdXJwb3Nlcy5cbiAqXG4gKiBAc2VlIFtodHRwczovL2RvY3MubmVhci5vcmcvZG9jcy9kZXZlbG9wL2Zyb250LWVuZC9uYWotcXVpY2stcmVmZXJlbmNlI2tleS1zdG9yZV0oaHR0cHM6Ly9kb2NzLm5lYXIub3JnL2RvY3MvZGV2ZWxvcC9mcm9udC1lbmQvbmFqLXF1aWNrLXJlZmVyZW5jZSNrZXktc3RvcmUpXG4gKiBAZXhhbXBsZVxuICogYGBganNcbiAqIGltcG9ydCB7IGNvbm5lY3QsIGtleVN0b3JlcywgdXRpbHMgfSBmcm9tICduZWFyLWFwaS1qcyc7XG4gKlxuICogY29uc3QgcHJpdmF0ZUtleSA9ICcuLi4uLi4uJztcbiAqIGNvbnN0IGtleVBhaXIgPSB1dGlscy5LZXlQYWlyLmZyb21TdHJpbmcocHJpdmF0ZUtleSk7XG4gKlxuICogY29uc3Qga2V5U3RvcmUgPSBuZXcga2V5U3RvcmVzLkluTWVtb3J5S2V5U3RvcmUoKTtcbiAqIGtleVN0b3JlLnNldEtleSgndGVzdG5ldCcsICdleGFtcGxlLWFjY291bnQudGVzdG5ldCcsIGtleVBhaXIpO1xuICpcbiAqIGNvbnN0IGNvbmZpZyA9IHtcbiAqICAga2V5U3RvcmUsIC8vIGluc3RhbmNlIG9mIEluTWVtb3J5S2V5U3RvcmVcbiAqICAgbmV0d29ya0lkOiAndGVzdG5ldCcsXG4gKiAgIG5vZGVVcmw6ICdodHRwczovL3JwYy50ZXN0bmV0Lm5lYXIub3JnJyxcbiAqICAgd2FsbGV0VXJsOiAnaHR0cHM6Ly93YWxsZXQudGVzdG5ldC5uZWFyLm9yZycsXG4gKiAgIGhlbHBlclVybDogJ2h0dHBzOi8vaGVscGVyLnRlc3RuZXQubmVhci5vcmcnLFxuICogICBleHBsb3JlclVybDogJ2h0dHBzOi8vZXhwbG9yZXIudGVzdG5ldC5uZWFyLm9yZydcbiAqIH07XG4gKlxuICogLy8gaW5zaWRlIGFuIGFzeW5jIGZ1bmN0aW9uXG4gKiBjb25zdCBuZWFyID0gYXdhaXQgY29ubmVjdChjb25maWcpXG4gKiBgYGBcbiAqL1xuY2xhc3MgSW5NZW1vcnlLZXlTdG9yZSBleHRlbmRzIGtleXN0b3JlXzEuS2V5U3RvcmUge1xuICAgIC8qKiBAaGlkZGVuICovXG4gICAga2V5cztcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5rZXlzID0ge307XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0b3JlcyBhIHtAbGluayBLZXlQYWlyfSBpbiBpbi1tZW1vcnkgc3RvcmFnZSBpdGVtXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICogQHBhcmFtIGtleVBhaXIgVGhlIGtleSBwYWlyIHRvIHN0b3JlIGluIGxvY2FsIHN0b3JhZ2VcbiAgICAgKi9cbiAgICBhc3luYyBzZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQsIGtleVBhaXIpIHtcbiAgICAgICAgdGhpcy5rZXlzW2Ake2FjY291bnRJZH06JHtuZXR3b3JrSWR9YF0gPSBrZXlQYWlyLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSBpbi1tZW1vcnkgc3RvcmFnZVxuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEtleVBhaXI+fVxuICAgICAqL1xuICAgIGFzeW5jIGdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMua2V5c1tgJHthY2NvdW50SWR9OiR7bmV0d29ya0lkfWBdO1xuICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY3J5cHRvXzEuS2V5UGFpci5mcm9tU3RyaW5nKHZhbHVlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIHtAbGluayBLZXlQYWlyfSBmcm9tIGluLW1lbW9yeSBzdG9yYWdlXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICovXG4gICAgYXN5bmMgcmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmtleXNbYCR7YWNjb3VudElkfToke25ldHdvcmtJZH1gXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhbGwge0BsaW5rIEtleVBhaXJ9IGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKi9cbiAgICBhc3luYyBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5rZXlzID0ge307XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgbmV0d29yayhzKSBmcm9tIGluLW1lbW9yeSBzdG9yYWdlXG4gICAgICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nW10+fVxuICAgICAqL1xuICAgIGFzeW5jIGdldE5ldHdvcmtzKCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgIE9iamVjdC5rZXlzKHRoaXMua2V5cykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwYXJ0cyA9IGtleS5zcGxpdCgnOicpO1xuICAgICAgICAgICAgcmVzdWx0LmFkZChwYXJ0c1sxXSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQudmFsdWVzKCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBhY2NvdW50KHMpIGZyb20gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKi9cbiAgICBhc3luYyBnZXRBY2NvdW50cyhuZXR3b3JrSWQpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IEFycmF5KCk7XG4gICAgICAgIE9iamVjdC5rZXlzKHRoaXMua2V5cykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwYXJ0cyA9IGtleS5zcGxpdCgnOicpO1xuICAgICAgICAgICAgaWYgKHBhcnRzW3BhcnRzLmxlbmd0aCAtIDFdID09PSBuZXR3b3JrSWQpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaChwYXJ0cy5zbGljZSgwLCBwYXJ0cy5sZW5ndGggLSAxKS5qb2luKCc6JykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuICdJbk1lbW9yeUtleVN0b3JlJztcbiAgICB9XG59XG5leHBvcnRzLkluTWVtb3J5S2V5U3RvcmUgPSBJbk1lbW9yeUtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores/lib/commonjs/in_memory_key_store.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores/lib/commonjs/index.cjs":
/*!****************************************************************!*\
  !*** ./node_modules/@near-js/keystores/lib/commonjs/index.cjs ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = exports.MergeKeyStore = exports.KeyStore = exports.InMemoryKeyStore = void 0;\nvar in_memory_key_store_1 = __webpack_require__(/*! ./in_memory_key_store.cjs */ \"(ssr)/./node_modules/@near-js/keystores/lib/commonjs/in_memory_key_store.cjs\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", ({ enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } }));\nvar keystore_1 = __webpack_require__(/*! ./keystore.cjs */ \"(ssr)/./node_modules/@near-js/keystores/lib/commonjs/keystore.cjs\");\nObject.defineProperty(exports, \"KeyStore\", ({ enumerable: true, get: function () { return keystore_1.KeyStore; } }));\nvar merge_key_store_1 = __webpack_require__(/*! ./merge_key_store.cjs */ \"(ssr)/./node_modules/@near-js/keystores/lib/commonjs/merge_key_store.cjs\");\nObject.defineProperty(exports, \"MergeKeyStore\", ({ enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } }));\nvar multi_contract_keystore_1 = __webpack_require__(/*! ./multi_contract_keystore.cjs */ \"(ssr)/./node_modules/@near-js/keystores/lib/commonjs/multi_contract_keystore.cjs\");\nObject.defineProperty(exports, \"MultiContractKeyStore\", ({ enumerable: true, get: function () { return multi_contract_keystore_1.MultiContractKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9jb21tb25qcy9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcscUJBQXFCLEdBQUcsZ0JBQWdCLEdBQUcsd0JBQXdCO0FBQ25HLDRCQUE0QixtQkFBTyxDQUFDLCtHQUEyQjtBQUMvRCxvREFBbUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDN0ksaUJBQWlCLG1CQUFPLENBQUMseUZBQWdCO0FBQ3pDLDRDQUEyQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNsSCx3QkFBd0IsbUJBQU8sQ0FBQyx1R0FBdUI7QUFDdkQsaURBQWdELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQ25JLGdDQUFnQyxtQkFBTyxDQUFDLHVIQUErQjtBQUN2RSx5REFBd0QsRUFBRSxxQ0FBcUMsMkRBQTJELEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvY29tbW9uanMvaW5kZXguY2pzP2E4ODUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk11bHRpQ29udHJhY3RLZXlTdG9yZSA9IGV4cG9ydHMuTWVyZ2VLZXlTdG9yZSA9IGV4cG9ydHMuS2V5U3RvcmUgPSBleHBvcnRzLkluTWVtb3J5S2V5U3RvcmUgPSB2b2lkIDA7XG52YXIgaW5fbWVtb3J5X2tleV9zdG9yZV8xID0gcmVxdWlyZShcIi4vaW5fbWVtb3J5X2tleV9zdG9yZS5janNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJbk1lbW9yeUtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbl9tZW1vcnlfa2V5X3N0b3JlXzEuSW5NZW1vcnlLZXlTdG9yZTsgfSB9KTtcbnZhciBrZXlzdG9yZV8xID0gcmVxdWlyZShcIi4va2V5c3RvcmUuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleXN0b3JlXzEuS2V5U3RvcmU7IH0gfSk7XG52YXIgbWVyZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tZXJnZV9rZXlfc3RvcmUuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTWVyZ2VLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbWVyZ2Vfa2V5X3N0b3JlXzEuTWVyZ2VLZXlTdG9yZTsgfSB9KTtcbnZhciBtdWx0aV9jb250cmFjdF9rZXlzdG9yZV8xID0gcmVxdWlyZShcIi4vbXVsdGlfY29udHJhY3Rfa2V5c3RvcmUuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTXVsdGlDb250cmFjdEtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtdWx0aV9jb250cmFjdF9rZXlzdG9yZV8xLk11bHRpQ29udHJhY3RLZXlTdG9yZTsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores/lib/commonjs/keystore.cjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@near-js/keystores/lib/commonjs/keystore.cjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link \"@near-js/wallet-account\".near.Near | Near} via {@link \"@near-js/wallet-account\".near.NearConfig | NearConfig}\n * and are used by the {@link \"@near-js/signers\".in_memory_signer.InMemorySigner | InMemorySigner} to sign transactions.\n *\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9jb21tb25qcy9rZXlzdG9yZS5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0EsNEJBQTRCLGtEQUFrRCxLQUFLO0FBQ25GLHdCQUF3QiwyRUFBMkU7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvY29tbW9uanMva2V5c3RvcmUuY2pzPzFiZTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVN0b3JlID0gdm9pZCAwO1xuLyoqXG4gKiBLZXlTdG9yZXMgYXJlIHBhc3NlZCB0byB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhciB8IE5lYXJ9IHZpYSB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhckNvbmZpZyB8IE5lYXJDb25maWd9XG4gKiBhbmQgYXJlIHVzZWQgYnkgdGhlIHtAbGluayBcIkBuZWFyLWpzL3NpZ25lcnNcIi5pbl9tZW1vcnlfc2lnbmVyLkluTWVtb3J5U2lnbmVyIHwgSW5NZW1vcnlTaWduZXJ9IHRvIHNpZ24gdHJhbnNhY3Rpb25zLlxuICpcbiAqL1xuY2xhc3MgS2V5U3RvcmUge1xufVxuZXhwb3J0cy5LZXlTdG9yZSA9IEtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores/lib/commonjs/keystore.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores/lib/commonjs/merge_key_store.cjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@near-js/keystores/lib/commonjs/merge_key_store.cjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MergeKeyStore = void 0;\nconst keystore_1 = __webpack_require__(/*! ./keystore.cjs */ \"(ssr)/./node_modules/@near-js/keystores/lib/commonjs/keystore.cjs\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    options;\n    keyStores;\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options KeyStore options\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPair} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        await this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            const keyPair = await keyStore.getKey(networkId, accountId);\n            if (keyPair) {\n                return keyPair;\n            }\n        }\n        return null;\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            await keyStore.removeKey(networkId, accountId);\n        }\n    }\n    /**\n     * Removes all items from each key store\n     */\n    async clear() {\n        for (const keyStore of this.keyStores) {\n            await keyStore.clear();\n        }\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const network of await keyStore.getNetworks()) {\n                result.add(network);\n            }\n        }\n        return Array.from(result);\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    async getAccounts(networkId) {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const account of await keyStore.getAccounts(networkId)) {\n                result.add(account);\n            }\n        }\n        return Array.from(result);\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9jb21tb25qcy9tZXJnZV9rZXlfc3RvcmUuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixtQkFBbUIsbUJBQU8sQ0FBQyx5RkFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyx1QkFBdUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixlQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGVBQWU7QUFDOUI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGVBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDBCQUEwQjtBQUMxRDtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL2NvbW1vbmpzL21lcmdlX2tleV9zdG9yZS5janM/OGE3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWVyZ2VLZXlTdG9yZSA9IHZvaWQgMDtcbmNvbnN0IGtleXN0b3JlXzEgPSByZXF1aXJlKFwiLi9rZXlzdG9yZS5janNcIik7XG5jbGFzcyBNZXJnZUtleVN0b3JlIGV4dGVuZHMga2V5c3RvcmVfMS5LZXlTdG9yZSB7XG4gICAgb3B0aW9ucztcbiAgICBrZXlTdG9yZXM7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGtleVN0b3JlcyByZWFkIGNhbGxzIGFyZSBhdHRlbXB0ZWQgZnJvbSBzdGFydCB0byBlbmQgb2YgYXJyYXlcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBLZXlTdG9yZSBvcHRpb25zXG4gICAgICogQHBhcmFtIG9wdGlvbnMud3JpdGVLZXlTdG9yZUluZGV4IHRoZSBrZXlzdG9yZSBpbmRleCB0aGF0IHdpbGwgcmVjZWl2ZSBhbGwgd3JpdGUgY2FsbHNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihrZXlTdG9yZXMsIG9wdGlvbnMgPSB7IHdyaXRlS2V5U3RvcmVJbmRleDogMCB9KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMua2V5U3RvcmVzID0ga2V5U3RvcmVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdG9yZSBhIHtAbGluayBLZXlQYWlyfSB0byB0aGUgZmlyc3QgaW5kZXggb2YgYSBrZXkgc3RvcmUgYXJyYXlcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5IHBhaXIgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIGFzeW5jIHNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICBhd2FpdCB0aGlzLmtleVN0b3Jlc1t0aGlzLm9wdGlvbnMud3JpdGVLZXlTdG9yZUluZGV4XS5zZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQsIGtleVBhaXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIGEge0BsaW5rIEtleVBhaXJ9IGZyb20gdGhlIGFycmF5IG9mIGtleSBzdG9yZXNcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxLZXlQYWlyPn1cbiAgICAgKi9cbiAgICBhc3luYyBnZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXlTdG9yZSBvZiB0aGlzLmtleVN0b3Jlcykge1xuICAgICAgICAgICAgY29uc3Qga2V5UGFpciA9IGF3YWl0IGtleVN0b3JlLmdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCk7XG4gICAgICAgICAgICBpZiAoa2V5UGFpcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBrZXlQYWlyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEge0BsaW5rIEtleVBhaXJ9IGZyb20gdGhlIGFycmF5IG9mIGtleSBzdG9yZXNcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKi9cbiAgICBhc3luYyByZW1vdmVLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXlTdG9yZSBvZiB0aGlzLmtleVN0b3Jlcykge1xuICAgICAgICAgICAgYXdhaXQga2V5U3RvcmUucmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGFsbCBpdGVtcyBmcm9tIGVhY2gga2V5IHN0b3JlXG4gICAgICovXG4gICAgYXN5bmMgY2xlYXIoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5U3RvcmUgb2YgdGhpcy5rZXlTdG9yZXMpIHtcbiAgICAgICAgICAgIGF3YWl0IGtleVN0b3JlLmNsZWFyKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gdGhlIGFycmF5IG9mIGtleSBzdG9yZXNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgYXN5bmMgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZXQoKTtcbiAgICAgICAgZm9yIChjb25zdCBrZXlTdG9yZSBvZiB0aGlzLmtleVN0b3Jlcykge1xuICAgICAgICAgICAgZm9yIChjb25zdCBuZXR3b3JrIG9mIGF3YWl0IGtleVN0b3JlLmdldE5ldHdvcmtzKCkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQuYWRkKG5ldHdvcmspO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHJlc3VsdCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGFjY291bnQocykgZnJvbSB0aGUgYXJyYXkgb2Yga2V5IHN0b3Jlc1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqL1xuICAgIGFzeW5jIGdldEFjY291bnRzKG5ldHdvcmtJZCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgIGZvciAoY29uc3Qga2V5U3RvcmUgb2YgdGhpcy5rZXlTdG9yZXMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgYWNjb3VudCBvZiBhd2FpdCBrZXlTdG9yZS5nZXRBY2NvdW50cyhuZXR3b3JrSWQpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmFkZChhY2NvdW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgIH1cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYE1lcmdlS2V5U3RvcmUoJHt0aGlzLmtleVN0b3Jlcy5qb2luKCcsICcpfSlgO1xuICAgIH1cbn1cbmV4cG9ydHMuTWVyZ2VLZXlTdG9yZSA9IE1lcmdlS2V5U3RvcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores/lib/commonjs/merge_key_store.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores/lib/commonjs/multi_contract_keystore.cjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@near-js/keystores/lib/commonjs/multi_contract_keystore.cjs ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = void 0;\n/**\n * KeyStores are passed to {@link near!Near} via {@link near!NearConfig}\n * and are used by the {@link signer!InMemorySigner} to sign transactions.\n *\n * @see {@link connect}\n */\nclass MultiContractKeyStore {\n}\nexports.MultiContractKeyStore = MultiContractKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9jb21tb25qcy9tdWx0aV9jb250cmFjdF9rZXlzdG9yZS5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCO0FBQ0EsNEJBQTRCLGlCQUFpQixLQUFLO0FBQ2xELHdCQUF3Qiw2QkFBNkI7QUFDckQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL2NvbW1vbmpzL211bHRpX2NvbnRyYWN0X2tleXN0b3JlLmNqcz82NmIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSB2b2lkIDA7XG4vKipcbiAqIEtleVN0b3JlcyBhcmUgcGFzc2VkIHRvIHtAbGluayBuZWFyIU5lYXJ9IHZpYSB7QGxpbmsgbmVhciFOZWFyQ29uZmlnfVxuICogYW5kIGFyZSB1c2VkIGJ5IHRoZSB7QGxpbmsgc2lnbmVyIUluTWVtb3J5U2lnbmVyfSB0byBzaWduIHRyYW5zYWN0aW9ucy5cbiAqXG4gKiBAc2VlIHtAbGluayBjb25uZWN0fVxuICovXG5jbGFzcyBNdWx0aUNvbnRyYWN0S2V5U3RvcmUge1xufVxuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSBNdWx0aUNvbnRyYWN0S2V5U3RvcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/keystores/lib/commonjs/multi_contract_keystore.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/providers/lib/commonjs/exponential-backoff.cjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@near-js/providers/lib/commonjs/exponential-backoff.cjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.exponentialBackoff = void 0;\nasync function exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {\n    // TODO: jitter?\n    let waitTime = startWaitTime;\n    for (let i = 0; i < retryNumber; i++) {\n        const result = await getResult();\n        if (result) {\n            return result;\n        }\n        await sleep(waitTime);\n        waitTime *= waitBackoff;\n    }\n    return null;\n}\nexports.exponentialBackoff = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9jb21tb25qcy9leHBvbmVudGlhbC1iYWNrb2ZmLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvY29tbW9uanMvZXhwb25lbnRpYWwtYmFja29mZi5janM/MzhlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gdm9pZCAwO1xuYXN5bmMgZnVuY3Rpb24gZXhwb25lbnRpYWxCYWNrb2ZmKHN0YXJ0V2FpdFRpbWUsIHJldHJ5TnVtYmVyLCB3YWl0QmFja29mZiwgZ2V0UmVzdWx0KSB7XG4gICAgLy8gVE9ETzogaml0dGVyP1xuICAgIGxldCB3YWl0VGltZSA9IHN0YXJ0V2FpdFRpbWU7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXRyeU51bWJlcjsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGdldFJlc3VsdCgpO1xuICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGF3YWl0IHNsZWVwKHdhaXRUaW1lKTtcbiAgICAgICAgd2FpdFRpbWUgKj0gd2FpdEJhY2tvZmY7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0cy5leHBvbmVudGlhbEJhY2tvZmYgPSBleHBvbmVudGlhbEJhY2tvZmY7XG4vLyBTbGVlcCBnaXZlbiBudW1iZXIgb2YgbWlsbGlzLlxuZnVuY3Rpb24gc2xlZXAobWlsbGlzKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtaWxsaXMpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/providers/lib/commonjs/exponential-backoff.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/providers/lib/commonjs/failover-rpc-provider.cjs":
/*!********************************************************************************!*\
  !*** ./node_modules/@near-js/providers/lib/commonjs/failover-rpc-provider.cjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FailoverRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link FailoverRpcProvider} client class\n * which can be used to interact with multiple [NEAR RPC APIs](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nconst provider_1 = __webpack_require__(/*! ./provider.cjs */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/provider.cjs\");\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass FailoverRpcProvider extends provider_1.Provider {\n    /** @hidden */\n    providers;\n    currentProviderIndex;\n    /**\n     * @param providers list of providers\n     */\n    constructor(providers) {\n        super();\n        if (providers.length === 0) {\n            throw new Error('At least one provider must be specified');\n        }\n        this.providers = providers;\n        this.currentProviderIndex = 0;\n    }\n    switchToNextProvider() {\n        if (this.providers.length === 1)\n            return;\n        if (this.providers.length - 1 <= this.currentProviderIndex) {\n            this.currentProviderIndex = 0;\n        }\n        else {\n            this.currentProviderIndex += 1;\n        }\n        utils_1.Logger.debug(`Switched to provider at the index ${this.currentProviderIndex}`);\n    }\n    get currentProvider() {\n        const provider = this.providers[this.currentProviderIndex];\n        if (!provider)\n            throw new Error(`Provider wasn't found at index ${this.currentProviderIndex}`);\n        return provider;\n    }\n    async withBackoff(getResult) {\n        for (let i = 0; i < this.providers.length; i++) {\n            try {\n                // each provider implements own retry logic\n                const result = await getResult(this.currentProvider);\n                if (result)\n                    return result;\n            }\n            catch (e) {\n                console.error(e);\n                this.switchToNextProvider();\n            }\n        }\n        throw new types_1.TypedError(`Exceeded ${this.providers.length} providers to execute request`, 'RetriesExceeded');\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    async status() {\n        return this.withBackoff((currentProvider) => currentProvider.status());\n    }\n    async sendTransactionUntil(signedTransaction, waitUntil) {\n        return this.withBackoff((currentProvider) => currentProvider.sendTransactionUntil(signedTransaction, waitUntil));\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    async sendTransaction(signedTransaction) {\n        return this.withBackoff((currentProvider) => currentProvider.sendTransaction(signedTransaction));\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransactionAsync(signedTransaction) {\n        return this.withBackoff((currentProvider) => currentProvider.sendTransactionAsync(signedTransaction));\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    async txStatus(txHash, accountId, waitUntil) {\n        return this.withBackoff((currentProvider) => currentProvider.txStatus(txHash, accountId, waitUntil));\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatusReceipts(txHash, accountId, waitUntil) {\n        return this.withBackoff((currentProvider) => currentProvider.txStatusReceipts(txHash, accountId, waitUntil));\n    }\n    async query(paramsOrPath, data) {\n        if (data) {\n            return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath, data));\n        }\n        return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath));\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    async block(blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.block(blockQuery));\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    async blockChanges(blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.blockChanges(blockQuery));\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    async chunk(chunkId) {\n        return this.withBackoff((currentProvider) => currentProvider.chunk(chunkId));\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.withBackoff((currentProvider) => currentProvider.validators(blockId));\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    async experimental_protocolConfig(blockReference) {\n        return this.withBackoff((currentProvider) => currentProvider.experimental_protocolConfig(blockReference));\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    async lightClientProof(request) {\n        return this.withBackoff((currentProvider) => currentProvider.lightClientProof(request));\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    async nextLightClientBlock(request) {\n        return this.withBackoff((currentProvider) => currentProvider.nextLightClientBlock(request));\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accessKeyChanges(accountIdArray, blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.accessKeyChanges(accountIdArray, blockQuery));\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    async singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.singleAccessKeyChanges(accessKeyArray, blockQuery));\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accountChanges(accountIdArray, blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.accountChanges(accountIdArray, blockQuery));\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        return this.withBackoff((currentProvider) => currentProvider.contractStateChanges(accountIdArray, blockQuery, keyPrefix));\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractCodeChanges(accountIdArray, blockQuery) {\n        return this.withBackoff((currentProvider) => currentProvider.contractCodeChanges(accountIdArray, blockQuery));\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async gasPrice(blockId) {\n        return this.withBackoff((currentProvider) => currentProvider.gasPrice(blockId));\n    }\n}\nexports.FailoverRpcProvider = FailoverRpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/providers/lib/commonjs/failover-rpc-provider.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/providers/lib/commonjs/fetch_json.cjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@near-js/providers/lib/commonjs/fetch_json.cjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchJsonRpc = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nconst exponential_backoff_1 = __webpack_require__(/*! exponential-backoff */ \"(ssr)/./node_modules/exponential-backoff/dist/backoff.js\");\nconst isomorphic_unfetch_1 = __importDefault(__webpack_require__(/*! isomorphic-unfetch */ \"(ssr)/./node_modules/isomorphic-unfetch/index.js\"));\nconst BACKOFF_MULTIPLIER = 1.5;\nconst RETRY_NUMBER = 10;\nconst retryConfig = {\n    numOfAttempts: RETRY_NUMBER,\n    timeMultiple: BACKOFF_MULTIPLIER,\n    retry: (e) => {\n        if ([503, 408].includes(e.cause)) {\n            return true;\n        }\n        if (e.toString().includes('FetchError') || e.toString().includes('Failed to fetch')) {\n            return true;\n        }\n        return false;\n    }\n};\nclass ProviderError extends Error {\n    cause;\n    constructor(message, options) {\n        super(message, options);\n    }\n}\n/**\n * Performs an HTTP request to an RPC endpoint\n * @param url URL for the HTTP request\n * @param json Request body\n * @param headers HTTP headers to include with the request\n * @returns Promise<any> }arsed JSON response from the HTTP request.\n */\nasync function fetchJsonRpc(url, json, headers) {\n    const response = await (0, exponential_backoff_1.backOff)(async () => {\n        const res = await (0, isomorphic_unfetch_1.default)(url, {\n            method: 'POST',\n            body: JSON.stringify(json),\n            headers: { ...headers, 'Content-Type': 'application/json' }\n        });\n        const { ok, status } = res;\n        if (!ok) {\n            throw new ProviderError(await res.text(), { cause: status });\n        }\n        if (status === 503) {\n            throw new ProviderError(`${url} unavailable`, { cause: status });\n        }\n        else if (status === 408) {\n            throw new ProviderError('Unused connection', { cause: status });\n        }\n        return res;\n    }, retryConfig);\n    if (!response) {\n        throw new types_1.TypedError(`Exceeded ${RETRY_NUMBER} attempts for ${url}.`, 'RetriesExceeded');\n    }\n    return await response.json();\n}\nexports.fetchJsonRpc = fetchJsonRpc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9jb21tb25qcy9mZXRjaF9qc29uLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixnQkFBZ0IsbUJBQU8sQ0FBQyxrRkFBZ0I7QUFDeEMsOEJBQThCLG1CQUFPLENBQUMscUZBQXFCO0FBQzNELDZDQUE2QyxtQkFBTyxDQUFDLDRFQUFvQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixTQUFTO0FBQ1QsZ0JBQWdCLGFBQWE7QUFDN0I7QUFDQSx3REFBd0QsZUFBZTtBQUN2RTtBQUNBO0FBQ0EsdUNBQXVDLEtBQUssZ0JBQWdCLGVBQWU7QUFDM0U7QUFDQTtBQUNBLDJEQUEyRCxlQUFlO0FBQzFFO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxpREFBaUQsY0FBYyxlQUFlLElBQUk7QUFDbEY7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9wcm92aWRlcnMvbGliL2NvbW1vbmpzL2ZldGNoX2pzb24uY2pzPzFlZWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZldGNoSnNvblJwYyA9IHZvaWQgMDtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdHlwZXNcIik7XG5jb25zdCBleHBvbmVudGlhbF9iYWNrb2ZmXzEgPSByZXF1aXJlKFwiZXhwb25lbnRpYWwtYmFja29mZlwiKTtcbmNvbnN0IGlzb21vcnBoaWNfdW5mZXRjaF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJpc29tb3JwaGljLXVuZmV0Y2hcIikpO1xuY29uc3QgQkFDS09GRl9NVUxUSVBMSUVSID0gMS41O1xuY29uc3QgUkVUUllfTlVNQkVSID0gMTA7XG5jb25zdCByZXRyeUNvbmZpZyA9IHtcbiAgICBudW1PZkF0dGVtcHRzOiBSRVRSWV9OVU1CRVIsXG4gICAgdGltZU11bHRpcGxlOiBCQUNLT0ZGX01VTFRJUExJRVIsXG4gICAgcmV0cnk6IChlKSA9PiB7XG4gICAgICAgIGlmIChbNTAzLCA0MDhdLmluY2x1ZGVzKGUuY2F1c2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZS50b1N0cmluZygpLmluY2x1ZGVzKCdGZXRjaEVycm9yJykgfHwgZS50b1N0cmluZygpLmluY2x1ZGVzKCdGYWlsZWQgdG8gZmV0Y2gnKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn07XG5jbGFzcyBQcm92aWRlckVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNhdXNlO1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgfVxufVxuLyoqXG4gKiBQZXJmb3JtcyBhbiBIVFRQIHJlcXVlc3QgdG8gYW4gUlBDIGVuZHBvaW50XG4gKiBAcGFyYW0gdXJsIFVSTCBmb3IgdGhlIEhUVFAgcmVxdWVzdFxuICogQHBhcmFtIGpzb24gUmVxdWVzdCBib2R5XG4gKiBAcGFyYW0gaGVhZGVycyBIVFRQIGhlYWRlcnMgdG8gaW5jbHVkZSB3aXRoIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyBQcm9taXNlPGFueT4gfWFyc2VkIEpTT04gcmVzcG9uc2UgZnJvbSB0aGUgSFRUUCByZXF1ZXN0LlxuICovXG5hc3luYyBmdW5jdGlvbiBmZXRjaEpzb25ScGModXJsLCBqc29uLCBoZWFkZXJzKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCAoMCwgZXhwb25lbnRpYWxfYmFja29mZl8xLmJhY2tPZmYpKGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgKDAsIGlzb21vcnBoaWNfdW5mZXRjaF8xLmRlZmF1bHQpKHVybCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShqc29uKSxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgLi4uaGVhZGVycywgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB7IG9rLCBzdGF0dXMgfSA9IHJlcztcbiAgICAgICAgaWYgKCFvaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoYXdhaXQgcmVzLnRleHQoKSwgeyBjYXVzZTogc3RhdHVzIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdGF0dXMgPT09IDUwMykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoYCR7dXJsfSB1bmF2YWlsYWJsZWAsIHsgY2F1c2U6IHN0YXR1cyB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzdGF0dXMgPT09IDQwOCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoJ1VudXNlZCBjb25uZWN0aW9uJywgeyBjYXVzZTogc3RhdHVzIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfSwgcmV0cnlDb25maWcpO1xuICAgIGlmICghcmVzcG9uc2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IHR5cGVzXzEuVHlwZWRFcnJvcihgRXhjZWVkZWQgJHtSRVRSWV9OVU1CRVJ9IGF0dGVtcHRzIGZvciAke3VybH0uYCwgJ1JldHJpZXNFeGNlZWRlZCcpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xufVxuZXhwb3J0cy5mZXRjaEpzb25ScGMgPSBmZXRjaEpzb25ScGM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/providers/lib/commonjs/fetch_json.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/providers/lib/commonjs/index.cjs":
/*!****************************************************************!*\
  !*** ./node_modules/@near-js/providers/lib/commonjs/index.cjs ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Provider = exports.FailoverRpcProvider = exports.JsonRpcProvider = exports.exponentialBackoff = void 0;\nvar exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff.cjs */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/exponential-backoff.cjs\");\nObject.defineProperty(exports, \"exponentialBackoff\", ({ enumerable: true, get: function () { return exponential_backoff_1.exponentialBackoff; } }));\nvar json_rpc_provider_1 = __webpack_require__(/*! ./json-rpc-provider.cjs */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/json-rpc-provider.cjs\");\nObject.defineProperty(exports, \"JsonRpcProvider\", ({ enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } }));\nvar failover_rpc_provider_1 = __webpack_require__(/*! ./failover-rpc-provider.cjs */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/failover-rpc-provider.cjs\");\nObject.defineProperty(exports, \"FailoverRpcProvider\", ({ enumerable: true, get: function () { return failover_rpc_provider_1.FailoverRpcProvider; } }));\nvar provider_1 = __webpack_require__(/*! ./provider.cjs */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/provider.cjs\");\nObject.defineProperty(exports, \"Provider\", ({ enumerable: true, get: function () { return provider_1.Provider; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9jb21tb25qcy9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLEdBQUcsMkJBQTJCLEdBQUcsdUJBQXVCLEdBQUcsMEJBQTBCO0FBQ3JHLDRCQUE0QixtQkFBTyxDQUFDLCtHQUEyQjtBQUMvRCxzREFBcUQsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDakosMEJBQTBCLG1CQUFPLENBQUMsMkdBQXlCO0FBQzNELG1EQUFrRCxFQUFFLHFDQUFxQywrQ0FBK0MsRUFBQztBQUN6SSw4QkFBOEIsbUJBQU8sQ0FBQyxtSEFBNkI7QUFDbkUsdURBQXNELEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQ3JKLGlCQUFpQixtQkFBTyxDQUFDLHlGQUFnQjtBQUN6Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvY29tbW9uanMvaW5kZXguY2pzP2I1N2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByb3ZpZGVyID0gZXhwb3J0cy5GYWlsb3ZlclJwY1Byb3ZpZGVyID0gZXhwb3J0cy5Kc29uUnBjUHJvdmlkZXIgPSBleHBvcnRzLmV4cG9uZW50aWFsQmFja29mZiA9IHZvaWQgMDtcbnZhciBleHBvbmVudGlhbF9iYWNrb2ZmXzEgPSByZXF1aXJlKFwiLi9leHBvbmVudGlhbC1iYWNrb2ZmLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImV4cG9uZW50aWFsQmFja29mZlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXhwb25lbnRpYWxfYmFja29mZl8xLmV4cG9uZW50aWFsQmFja29mZjsgfSB9KTtcbnZhciBqc29uX3JwY19wcm92aWRlcl8xID0gcmVxdWlyZShcIi4vanNvbi1ycGMtcHJvdmlkZXIuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSnNvblJwY1Byb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBqc29uX3JwY19wcm92aWRlcl8xLkpzb25ScGNQcm92aWRlcjsgfSB9KTtcbnZhciBmYWlsb3Zlcl9ycGNfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2ZhaWxvdmVyLXJwYy1wcm92aWRlci5janNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGYWlsb3ZlclJwY1Byb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmYWlsb3Zlcl9ycGNfcHJvdmlkZXJfMS5GYWlsb3ZlclJwY1Byb3ZpZGVyOyB9IH0pO1xudmFyIHByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9wcm92aWRlci5janNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcm92aWRlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJvdmlkZXJfMS5Qcm92aWRlcjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/providers/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/providers/lib/commonjs/json-rpc-provider.cjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@near-js/providers/lib/commonjs/json-rpc-provider.cjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JsonRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/index.cjs\");\nconst exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff.cjs */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/exponential-backoff.cjs\");\nconst provider_1 = __webpack_require__(/*! ./provider.cjs */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/provider.cjs\");\nconst fetch_json_1 = __webpack_require__(/*! ./fetch_json.cjs */ \"(ssr)/./node_modules/@near-js/providers/lib/commonjs/fetch_json.cjs\");\n/** @hidden */\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /** @hidden */\n    connection;\n    /** @hidden */\n    options;\n    /**\n     * @param connectionInfo Connection info\n     */\n    constructor(connectionInfo, options) {\n        super();\n        this.connection = connectionInfo || { url: '' };\n        const defaultOptions = {\n            retries: REQUEST_RETRY_NUMBER,\n            wait: REQUEST_RETRY_WAIT,\n            backoff: REQUEST_RETRY_WAIT_BACKOFF\n        };\n        this.options = Object.assign({}, defaultOptions, options);\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     *\n     * @param signedTransaction The signed transaction being sent\n     * @param waitUntil\n     */\n    async sendTransactionUntil(signedTransaction, waitUntil) {\n        const bytes = (0, transactions_1.encodeTransaction)(signedTransaction);\n        return this.sendJsonRpc('send_tx', { signed_tx_base64: Buffer.from(bytes).toString('base64'), wait_until: waitUntil });\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    async sendTransaction(signedTransaction) {\n        return this.sendTransactionUntil(signedTransaction, 'EXECUTED_OPTIMISTIC');\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransactionAsync(signedTransaction) {\n        return this.sendTransactionUntil(signedTransaction, 'NONE');\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     */\n    async txStatus(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        if (typeof txHash === 'string') {\n            return this.txStatusString(txHash, accountId, waitUntil);\n        }\n        else {\n            return this.txStatusUint8Array(txHash, accountId, waitUntil);\n        }\n    }\n    async txStatusUint8Array(txHash, accountId, waitUntil) {\n        return this.sendJsonRpc('tx', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n    }\n    async txStatusString(txHash, accountId, waitUntil) {\n        return this.sendJsonRpc('tx', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatusReceipts(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        if (typeof txHash === 'string') {\n            return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n        }\n        else {\n            return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n        }\n    }\n    /**\n     * Query the RPC by passing an {@link \"@near-js/types\".provider/request.RpcQueryRequest | RpcQueryRequest }\n     * @see [https://docs.near.org/api/rpc/contracts](https://docs.near.org/api/rpc/contracts)\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    async query(...args) {\n        let result;\n        if (args.length === 1) {\n            const { block_id, blockId, ...otherParams } = args[0];\n            result = await this.sendJsonRpc('query', { ...otherParams, block_id: block_id || blockId });\n        }\n        else {\n            const [path, data] = args;\n            result = await this.sendJsonRpc('query', [path, data]);\n        }\n        if (result && result.error) {\n            throw new types_1.TypedError(`Querying failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, (0, utils_1.getErrorTypeFromErrorMessage)(result.error, result.error.name));\n        }\n        return result;\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    async block(blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('block', { block_id: blockId, finality });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    async blockChanges(blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.sendJsonRpc('validators', [blockId]);\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    async experimental_protocolConfig(blockReference) {\n        const { blockId, ...otherParams } = blockReference;\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', { ...otherParams, block_id: blockId });\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    async lightClientProof(request) {\n        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    async nextLightClientBlock(request) {\n        return await this.sendJsonRpc('next_light_client_block', request);\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accessKeyChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'all_access_key_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    async singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'single_access_key_changes',\n            keys: accessKeyArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accountChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'account_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'data_changes',\n            account_ids: accountIdArray,\n            key_prefix_base64: keyPrefix,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractCodeChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'contract_code_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async gasPrice(blockId) {\n        return await this.sendJsonRpc('gas_price', [blockId]);\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    async sendJsonRpc(method, params) {\n        const response = await (0, exponential_backoff_1.exponentialBackoff)(this.options.wait, this.options.retries, this.options.backoff, async () => {\n            try {\n                const request = {\n                    method,\n                    params,\n                    id: (_nextId++),\n                    jsonrpc: '2.0'\n                };\n                const response = await (0, fetch_json_1.fetchJsonRpc)(this.connection.url, request, this.connection.headers);\n                if (response.error) {\n                    if (typeof response.error.data === 'object') {\n                        if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                            throw new types_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                        }\n                        throw (0, utils_1.parseRpcError)(response.error.data);\n                    }\n                    else {\n                        const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                        // NOTE: All this hackery is happening because structured errors not implemented\n                        // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                        if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')\n                            || errorMessage.includes('query has timed out')) {\n                            throw new types_1.TypedError(errorMessage, 'TimeoutError');\n                        }\n                        const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.error.data, '');\n                        if (errorType) {\n                            throw new types_1.TypedError((0, utils_1.formatError)(errorType, params), errorType);\n                        }\n                        throw new types_1.TypedError(errorMessage, response.error.name);\n                    }\n                }\n                else if (typeof response.result?.error === 'string') {\n                    const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.result.error, '');\n                    if (errorType) {\n                        throw new utils_1.ServerError((0, utils_1.formatError)(errorType, params), errorType);\n                    }\n                }\n                // Success when response.error is not exist\n                return response;\n            }\n            catch (error) {\n                if (error.type === 'TimeoutError') {\n                    utils_1.Logger.warn(`Retrying request to ${method} as it has timed out`, params);\n                    return null;\n                }\n                throw error;\n            }\n        });\n        const { result } = response;\n        // From jsonrpc spec:\n        // result\n        //   This member is REQUIRED on success.\n        //   This member MUST NOT exist if there was an error invoking the method.\n        if (typeof result === 'undefined') {\n            throw new types_1.TypedError(`Exceeded ${this.options.retries} attempts for request to ${method}.`, 'RetriesExceeded');\n        }\n        return result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/providers/lib/commonjs/json-rpc-provider.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/providers/lib/commonjs/provider.cjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@near-js/providers/lib/commonjs/provider.cjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Provider = void 0;\n/** @hidden */\nclass Provider {\n}\nexports.Provider = Provider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9jb21tb25qcy9wcm92aWRlci5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9wcm92aWRlcnMvbGliL2NvbW1vbmpzL3Byb3ZpZGVyLmNqcz8xODk1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBORUFSIFJQQyBBUEkgcmVxdWVzdCB0eXBlcyBhbmQgcmVzcG9uc2VzXG4gKiBAbW9kdWxlXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvdmlkZXIgPSB2b2lkIDA7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgUHJvdmlkZXIge1xufVxuZXhwb3J0cy5Qcm92aWRlciA9IFByb3ZpZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/providers/lib/commonjs/provider.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/signers/lib/commonjs/in_memory_signer.cjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@near-js/signers/lib/commonjs/in_memory_signer.cjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemorySigner = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/index.cjs\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"(ssr)/./node_modules/@near-js/keystores/lib/commonjs/index.cjs\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst signer_1 = __webpack_require__(/*! ./signer.cjs */ \"(ssr)/./node_modules/@near-js/signers/lib/commonjs/signer.cjs\");\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends signer_1.Signer {\n    keyStore;\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static async fromKeyPair(networkId, accountId, keyPair) {\n        const keyStore = new keystores_1.InMemoryKeyStore();\n        await keyStore.setKey(networkId, accountId, keyPair);\n        return new InMemorySigner(keyStore);\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    async createKey(accountId, networkId, keyType) {\n        const keyPair = keyType === crypto_1.KeyType.SECP256K1 ? crypto_1.KeyPair.fromRandom('secp256k1') : crypto_1.KeyPair.fromRandom('ed25519');\n        await this.keyStore.setKey(networkId, accountId, keyPair);\n        return keyPair.getPublicKey();\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    async getPublicKey(accountId, networkId) {\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            return null;\n        }\n        return keyPair.getPublicKey();\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    async signMessage(message, accountId, networkId) {\n        const hash = new Uint8Array((0, sha256_1.sha256)(message));\n        if (!accountId) {\n            throw new Error('InMemorySigner requires provided account id');\n        }\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            throw new Error(`Key for ${accountId} not found in ${networkId}`);\n        }\n        return keyPair.sign(hash);\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvY29tbW9uanMvaW5fbWVtb3J5X3NpZ25lci5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGlCQUFpQixtQkFBTyxDQUFDLG9GQUFpQjtBQUMxQyxvQkFBb0IsbUJBQU8sQ0FBQywwRkFBb0I7QUFDaEQsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGlCQUFpQixtQkFBTyxDQUFDLG1GQUFjO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvQkFBb0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsV0FBVyxlQUFlLFVBQVU7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsY0FBYztBQUMvQztBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9zaWduZXJzL2xpYi9jb21tb25qcy9pbl9tZW1vcnlfc2lnbmVyLmNqcz81YTUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Jbk1lbW9yeVNpZ25lciA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2NyeXB0b1wiKTtcbmNvbnN0IGtleXN0b3Jlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2tleXN0b3Jlc1wiKTtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3Qgc2lnbmVyXzEgPSByZXF1aXJlKFwiLi9zaWduZXIuY2pzXCIpO1xuLyoqXG4gKiBTaWducyB1c2luZyBpbiBtZW1vcnkga2V5IHN0b3JlLlxuICovXG5jbGFzcyBJbk1lbW9yeVNpZ25lciBleHRlbmRzIHNpZ25lcl8xLlNpZ25lciB7XG4gICAga2V5U3RvcmU7XG4gICAgY29uc3RydWN0b3Ioa2V5U3RvcmUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5rZXlTdG9yZSA9IGtleVN0b3JlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgc2luZ2xlIGFjY291bnQgU2lnbmVyIGluc3RhbmNlIHdpdGggYWNjb3VudCwgbmV0d29yayBhbmQga2V5UGFpciBwcm92aWRlZC5cbiAgICAgKlxuICAgICAqIEludGVuZGVkIHRvIGJlIHVzZWZ1bCBmb3IgdGVtcG9yYXJ5IGtleXMgKGUuZy4gY2xhaW1pbmcgYSBMaW5rZHJvcCkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdG8gYXNzaWduIHRoZSBrZXkgcGFpciB0b1xuICAgICAqIEBwYXJhbSBrZXlQYWlyIFRoZSBrZXlQYWlyIHRvIHVzZSBmb3Igc2lnbmluZ1xuICAgICAqL1xuICAgIHN0YXRpYyBhc3luYyBmcm9tS2V5UGFpcihuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICBjb25zdCBrZXlTdG9yZSA9IG5ldyBrZXlzdG9yZXNfMS5Jbk1lbW9yeUtleVN0b3JlKCk7XG4gICAgICAgIGF3YWl0IGtleVN0b3JlLnNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcik7XG4gICAgICAgIHJldHVybiBuZXcgSW5NZW1vcnlTaWduZXIoa2V5U3RvcmUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgcHVibGljIGtleSBmb3IgdGhlIGFjY291bnQgZ2l2ZW5cbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdG8gYXNzaWduIGEgcHVibGljIGtleSB0b1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFB1YmxpY0tleT59XG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlS2V5KGFjY291bnRJZCwgbmV0d29ya0lkLCBrZXlUeXBlKSB7XG4gICAgICAgIGNvbnN0IGtleVBhaXIgPSBrZXlUeXBlID09PSBjcnlwdG9fMS5LZXlUeXBlLlNFQ1AyNTZLMSA/IGNyeXB0b18xLktleVBhaXIuZnJvbVJhbmRvbSgnc2VjcDI1NmsxJykgOiBjcnlwdG9fMS5LZXlQYWlyLmZyb21SYW5kb20oJ2VkMjU1MTknKTtcbiAgICAgICAgYXdhaXQgdGhpcy5rZXlTdG9yZS5zZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQsIGtleVBhaXIpO1xuICAgICAgICByZXR1cm4ga2V5UGFpci5nZXRQdWJsaWNLZXkoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgZXhpc3RpbmcgcHVibGljIGtleSBmb3IgYSBnaXZlbiBhY2NvdW50XG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRvIGFzc2lnbiBhIHB1YmxpYyBrZXkgdG9cbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxQdWJsaWNLZXk+fSBSZXR1cm5zIHRoZSBwdWJsaWMga2V5IG9yIG51bGwgaWYgbm90IGZvdW5kXG4gICAgICovXG4gICAgYXN5bmMgZ2V0UHVibGljS2V5KGFjY291bnRJZCwgbmV0d29ya0lkKSB7XG4gICAgICAgIGNvbnN0IGtleVBhaXIgPSBhd2FpdCB0aGlzLmtleVN0b3JlLmdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCk7XG4gICAgICAgIGlmIChrZXlQYWlyID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ga2V5UGFpci5nZXRQdWJsaWNLZXkoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgQSBtZXNzYWdlIHRvIGJlIHNpZ25lZCwgdHlwaWNhbGx5IGEgc2VyaWFsaXplZCB0cmFuc2FjdGlvblxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgdGhlIE5FQVIgYWNjb3VudCBzaWduaW5nIHRoZSBtZXNzYWdlXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHJldHVybnMge1Byb21pc2U8U2lnbmF0dXJlPn1cbiAgICAgKi9cbiAgICBhc3luYyBzaWduTWVzc2FnZShtZXNzYWdlLCBhY2NvdW50SWQsIG5ldHdvcmtJZCkge1xuICAgICAgICBjb25zdCBoYXNoID0gbmV3IFVpbnQ4QXJyYXkoKDAsIHNoYTI1Nl8xLnNoYTI1NikobWVzc2FnZSkpO1xuICAgICAgICBpZiAoIWFjY291bnRJZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbk1lbW9yeVNpZ25lciByZXF1aXJlcyBwcm92aWRlZCBhY2NvdW50IGlkJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qga2V5UGFpciA9IGF3YWl0IHRoaXMua2V5U3RvcmUuZ2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKTtcbiAgICAgICAgaWYgKGtleVBhaXIgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgS2V5IGZvciAke2FjY291bnRJZH0gbm90IGZvdW5kIGluICR7bmV0d29ya0lkfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBrZXlQYWlyLnNpZ24oaGFzaCk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYEluTWVtb3J5U2lnbmVyKCR7dGhpcy5rZXlTdG9yZX0pYDtcbiAgICB9XG59XG5leHBvcnRzLkluTWVtb3J5U2lnbmVyID0gSW5NZW1vcnlTaWduZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/signers/lib/commonjs/in_memory_signer.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/signers/lib/commonjs/index.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/@near-js/signers/lib/commonjs/index.cjs ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = exports.InMemorySigner = void 0;\nvar in_memory_signer_1 = __webpack_require__(/*! ./in_memory_signer.cjs */ \"(ssr)/./node_modules/@near-js/signers/lib/commonjs/in_memory_signer.cjs\");\nObject.defineProperty(exports, \"InMemorySigner\", ({ enumerable: true, get: function () { return in_memory_signer_1.InMemorySigner; } }));\nvar signer_1 = __webpack_require__(/*! ./signer.cjs */ \"(ssr)/./node_modules/@near-js/signers/lib/commonjs/signer.cjs\");\nObject.defineProperty(exports, \"Signer\", ({ enumerable: true, get: function () { return signer_1.Signer; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvY29tbW9uanMvaW5kZXguY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxzQkFBc0I7QUFDdkMseUJBQXlCLG1CQUFPLENBQUMsdUdBQXdCO0FBQ3pELGtEQUFpRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUN0SSxlQUFlLG1CQUFPLENBQUMsbUZBQWM7QUFDckMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9zaWduZXJzL2xpYi9jb21tb25qcy9pbmRleC5janM/NDQyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmVyID0gZXhwb3J0cy5Jbk1lbW9yeVNpZ25lciA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfc2lnbmVyXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfc2lnbmVyLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkluTWVtb3J5U2lnbmVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbl9tZW1vcnlfc2lnbmVyXzEuSW5NZW1vcnlTaWduZXI7IH0gfSk7XG52YXIgc2lnbmVyXzEgPSByZXF1aXJlKFwiLi9zaWduZXIuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2lnbmVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduZXJfMS5TaWduZXI7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/signers/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/signers/lib/commonjs/signer.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/@near-js/signers/lib/commonjs/signer.cjs ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = void 0;\n/**\n * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.\n */\nclass Signer {\n}\nexports.Signer = Signer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvY29tbW9uanMvc2lnbmVyLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL2NvbW1vbmpzL3NpZ25lci5janM/YzE1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmVyID0gdm9pZCAwO1xuLyoqXG4gKiBHZW5lcmFsIHNpZ25pbmcgaW50ZXJmYWNlLCBjYW4gYmUgdXNlZCBmb3IgaW4gbWVtb3J5IHNpZ25pbmcsIFJQQyBzaW5naW5nLCBleHRlcm5hbCB3YWxsZXQsIEhTTSwgZXRjLlxuICovXG5jbGFzcyBTaWduZXIge1xufVxuZXhwb3J0cy5TaWduZXIgPSBTaWduZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/signers/lib/commonjs/signer.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/transactions/lib/commonjs/action_creators.cjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@near-js/transactions/lib/commonjs/action_creators.cjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.actionCreators = exports.stringifyJsonOrBytes = void 0;\nconst actions_1 = __webpack_require__(/*! ./actions.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/actions.cjs\");\n/**\n * Creates a full access key with full access permissions.\n * @returns A new full access key.\n */\nfunction fullAccessKey() {\n    return new actions_1.AccessKey({\n        nonce: 0n,\n        permission: new actions_1.AccessKeyPermission({\n            fullAccess: new actions_1.FullAccessPermission(),\n        }),\n    });\n}\n/**\n * Creates an access key with function call permission for a specific receiver and method names.\n * @param receiverId The NEAR account ID of the function call receiver.\n * @param methodNames An array of method names allowed for function calls.\n * @param allowance An optional allowance (maximum amount) for the function call. Default: Unlimited.\n * @returns A new access key with function call permission.\n */\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new actions_1.AccessKey({\n        nonce: 0n,\n        permission: new actions_1.AccessKeyPermission({\n            functionCall: new actions_1.FunctionCallPermission({\n                receiverId,\n                allowance,\n                methodNames,\n            }),\n        }),\n    });\n}\n/**\n * Creates a new action for creating a new NEAR account.\n * @returns A new action for creating a new account.\n */\nfunction createAccount() {\n    return new actions_1.Action({ createAccount: new actions_1.CreateAccount() });\n}\n/**\n * Creates a new action for deploying a contract with the provided code.\n * @param code The Uint8Array representing the code of the contract.\n * @returns A new action for deploying a contract.\n */\nfunction deployContract(code) {\n    return new actions_1.Action({ deployContract: new actions_1.DeployContract({ code }) });\n}\n/**\n * Converts an input argument to a Buffer, handling cases for both JSON and Uint8Array.\n * @param args The input argument, either JSON object or Uint8Array.\n * @returns A Buffer representation of the input argument.\n */\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    return isUint8Array ? args : Buffer.from(JSON.stringify(args));\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n * @param jsContract  Is contract from JS SDK, skips stringification of arguments.\n */\nfunction functionCall(methodName, args, gas = 0n, deposit = 0n, stringify = stringifyJsonOrBytes, jsContract = false) {\n    if (jsContract) {\n        return new actions_1.Action({\n            functionCall: new actions_1.FunctionCall({ methodName, args: args, gas, deposit }),\n        });\n    }\n    return new actions_1.Action({\n        functionCall: new actions_1.FunctionCall({\n            methodName,\n            args: stringify(args),\n            gas,\n            deposit,\n        }),\n    });\n}\n/**\n * Creates a new action for transferring funds, optionally specifying a deposit amount.\n * @param deposit The amount to be deposited along with the transfer. Default: 0.\n * @returns A new action for transferring funds.\n */\nfunction transfer(deposit = 0n) {\n    return new actions_1.Action({ transfer: new actions_1.Transfer({ deposit }) });\n}\n/**\n * Creates a new action for staking tokens, specifying the stake amount and public key.\n * @param stake The amount to be staked. Default: 0.\n * @param publicKey The public key associated with the staking action.\n * @returns A new action for staking tokens.\n */\nfunction stake(stake = 0n, publicKey) {\n    return new actions_1.Action({ stake: new actions_1.Stake({ stake, publicKey }) });\n}\n/**\n * Creates a new action for adding a public key with a specified access key.\n * @param publicKey The public key to be added.\n * @param accessKey The access key associated with the added public key.\n * @returns A new action for adding a public key.\n */\nfunction addKey(publicKey, accessKey) {\n    return new actions_1.Action({ addKey: new actions_1.AddKey({ publicKey, accessKey }) });\n}\n/**\n * Creates a new action for deleting a public key.\n * @param publicKey The public key to be deleted.\n * @returns A new action for deleting a public key.\n */\nfunction deleteKey(publicKey) {\n    return new actions_1.Action({ deleteKey: new actions_1.DeleteKey({ publicKey }) });\n}\n/**\n * Creates a new action for deleting an account with the specified beneficiary ID.\n * @param beneficiaryId The NEAR account ID of the beneficiary.\n * @returns A new action for deleting an account.\n */\nfunction deleteAccount(beneficiaryId) {\n    return new actions_1.Action({ deleteAccount: new actions_1.DeleteAccount({ beneficiaryId }) });\n}\n/**\n * Creates a new action for a signed delegation, specifying the delegate action and signature.\n * @param delegateAction The delegate action to be performed.\n * @param signature The signature associated with the delegate action.\n * @returns A new action for a signed delegation.\n */\nfunction signedDelegate({ delegateAction, signature, }) {\n    return new actions_1.Action({\n        signedDelegate: new actions_1.SignedDelegate({ delegateAction, signature }),\n    });\n}\nexports.actionCreators = {\n    addKey,\n    createAccount,\n    deleteAccount,\n    deleteKey,\n    deployContract,\n    fullAccessKey,\n    functionCall,\n    functionCallAccessKey,\n    signedDelegate,\n    stake,\n    transfer,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/transactions/lib/commonjs/action_creators.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/transactions/lib/commonjs/actions.cjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@near-js/transactions/lib/commonjs/actions.cjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Action = exports.SignedDelegate = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nclass FunctionCallPermission {\n    allowance;\n    receiverId;\n    methodNames;\n    constructor({ allowance, receiverId, methodNames }) {\n        this.allowance = allowance;\n        this.receiverId = receiverId;\n        this.methodNames = methodNames;\n    }\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends types_1.Enum {\n    enum;\n    functionCall;\n    fullAccess;\n    constructor(props) {\n        super(props);\n        for (const [k, v] of Object.entries(props || {})) {\n            this[k] = v;\n            this.enum = k;\n        }\n    }\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey {\n    nonce;\n    permission;\n    constructor({ nonce, permission }) {\n        this.nonce = nonce;\n        this.permission = permission;\n    }\n}\nexports.AccessKey = AccessKey;\nclass CreateAccount {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract {\n    code;\n    constructor({ code }) {\n        this.code = code;\n    }\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall {\n    methodName;\n    args;\n    gas;\n    deposit;\n    constructor({ methodName, args, gas, deposit }) {\n        this.methodName = methodName;\n        this.args = args;\n        this.gas = gas;\n        this.deposit = deposit;\n    }\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer {\n    deposit;\n    constructor({ deposit }) {\n        this.deposit = deposit;\n    }\n}\nexports.Transfer = Transfer;\nclass Stake {\n    stake;\n    publicKey;\n    constructor({ stake, publicKey }) {\n        this.stake = stake;\n        this.publicKey = publicKey;\n    }\n}\nexports.Stake = Stake;\nclass AddKey {\n    publicKey;\n    accessKey;\n    constructor({ publicKey, accessKey }) {\n        this.publicKey = publicKey;\n        this.accessKey = accessKey;\n    }\n}\nexports.AddKey = AddKey;\nclass DeleteKey {\n    publicKey;\n    constructor({ publicKey }) {\n        this.publicKey = publicKey;\n    }\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount {\n    beneficiaryId;\n    constructor({ beneficiaryId }) {\n        this.beneficiaryId = beneficiaryId;\n    }\n}\nexports.DeleteAccount = DeleteAccount;\nclass SignedDelegate {\n    delegateAction;\n    signature;\n    constructor({ delegateAction, signature }) {\n        this.delegateAction = delegateAction;\n        this.signature = signature;\n    }\n}\nexports.SignedDelegate = SignedDelegate;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends types_1.Enum {\n    enum;\n    createAccount;\n    deployContract;\n    functionCall;\n    transfer;\n    stake;\n    addKey;\n    deleteKey;\n    deleteAccount;\n    signedDelegate;\n    constructor(props) {\n        super(props);\n        for (const [k, v] of Object.entries(props || {})) {\n            this[k] = v;\n            this.enum = k;\n        }\n    }\n}\nexports.Action = Action;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9hY3Rpb25zLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsc0JBQXNCLEdBQUcscUJBQXFCLEdBQUcsaUJBQWlCLEdBQUcsY0FBYyxHQUFHLGFBQWEsR0FBRyxnQkFBZ0IsR0FBRyxvQkFBb0IsR0FBRyxzQkFBc0IsR0FBRyxxQkFBcUIsR0FBRyxpQkFBaUIsR0FBRywyQkFBMkIsR0FBRyw0QkFBNEIsR0FBRyw4QkFBOEI7QUFDalUsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9DQUFvQztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxrQkFBa0IsTUFBTTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixnQ0FBZ0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxrQkFBa0IsV0FBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGtCQUFrQixlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMkJBQTJCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9hY3Rpb25zLmNqcz8wYWRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BY3Rpb24gPSBleHBvcnRzLlNpZ25lZERlbGVnYXRlID0gZXhwb3J0cy5EZWxldGVBY2NvdW50ID0gZXhwb3J0cy5EZWxldGVLZXkgPSBleHBvcnRzLkFkZEtleSA9IGV4cG9ydHMuU3Rha2UgPSBleHBvcnRzLlRyYW5zZmVyID0gZXhwb3J0cy5GdW5jdGlvbkNhbGwgPSBleHBvcnRzLkRlcGxveUNvbnRyYWN0ID0gZXhwb3J0cy5DcmVhdGVBY2NvdW50ID0gZXhwb3J0cy5BY2Nlc3NLZXkgPSBleHBvcnRzLkFjY2Vzc0tleVBlcm1pc3Npb24gPSBleHBvcnRzLkZ1bGxBY2Nlc3NQZXJtaXNzaW9uID0gZXhwb3J0cy5GdW5jdGlvbkNhbGxQZXJtaXNzaW9uID0gdm9pZCAwO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmNsYXNzIEZ1bmN0aW9uQ2FsbFBlcm1pc3Npb24ge1xuICAgIGFsbG93YW5jZTtcbiAgICByZWNlaXZlcklkO1xuICAgIG1ldGhvZE5hbWVzO1xuICAgIGNvbnN0cnVjdG9yKHsgYWxsb3dhbmNlLCByZWNlaXZlcklkLCBtZXRob2ROYW1lcyB9KSB7XG4gICAgICAgIHRoaXMuYWxsb3dhbmNlID0gYWxsb3dhbmNlO1xuICAgICAgICB0aGlzLnJlY2VpdmVySWQgPSByZWNlaXZlcklkO1xuICAgICAgICB0aGlzLm1ldGhvZE5hbWVzID0gbWV0aG9kTmFtZXM7XG4gICAgfVxufVxuZXhwb3J0cy5GdW5jdGlvbkNhbGxQZXJtaXNzaW9uID0gRnVuY3Rpb25DYWxsUGVybWlzc2lvbjtcbmNsYXNzIEZ1bGxBY2Nlc3NQZXJtaXNzaW9uIHtcbn1cbmV4cG9ydHMuRnVsbEFjY2Vzc1Blcm1pc3Npb24gPSBGdWxsQWNjZXNzUGVybWlzc2lvbjtcbmNsYXNzIEFjY2Vzc0tleVBlcm1pc3Npb24gZXh0ZW5kcyB0eXBlc18xLkVudW0ge1xuICAgIGVudW07XG4gICAgZnVuY3Rpb25DYWxsO1xuICAgIGZ1bGxBY2Nlc3M7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhwcm9wcyB8fCB7fSkpIHtcbiAgICAgICAgICAgIHRoaXNba10gPSB2O1xuICAgICAgICAgICAgdGhpcy5lbnVtID0gaztcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQWNjZXNzS2V5UGVybWlzc2lvbiA9IEFjY2Vzc0tleVBlcm1pc3Npb247XG5jbGFzcyBBY2Nlc3NLZXkge1xuICAgIG5vbmNlO1xuICAgIHBlcm1pc3Npb247XG4gICAgY29uc3RydWN0b3IoeyBub25jZSwgcGVybWlzc2lvbiB9KSB7XG4gICAgICAgIHRoaXMubm9uY2UgPSBub25jZTtcbiAgICAgICAgdGhpcy5wZXJtaXNzaW9uID0gcGVybWlzc2lvbjtcbiAgICB9XG59XG5leHBvcnRzLkFjY2Vzc0tleSA9IEFjY2Vzc0tleTtcbmNsYXNzIENyZWF0ZUFjY291bnQge1xufVxuZXhwb3J0cy5DcmVhdGVBY2NvdW50ID0gQ3JlYXRlQWNjb3VudDtcbmNsYXNzIERlcGxveUNvbnRyYWN0IHtcbiAgICBjb2RlO1xuICAgIGNvbnN0cnVjdG9yKHsgY29kZSB9KSB7XG4gICAgICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgfVxufVxuZXhwb3J0cy5EZXBsb3lDb250cmFjdCA9IERlcGxveUNvbnRyYWN0O1xuY2xhc3MgRnVuY3Rpb25DYWxsIHtcbiAgICBtZXRob2ROYW1lO1xuICAgIGFyZ3M7XG4gICAgZ2FzO1xuICAgIGRlcG9zaXQ7XG4gICAgY29uc3RydWN0b3IoeyBtZXRob2ROYW1lLCBhcmdzLCBnYXMsIGRlcG9zaXQgfSkge1xuICAgICAgICB0aGlzLm1ldGhvZE5hbWUgPSBtZXRob2ROYW1lO1xuICAgICAgICB0aGlzLmFyZ3MgPSBhcmdzO1xuICAgICAgICB0aGlzLmdhcyA9IGdhcztcbiAgICAgICAgdGhpcy5kZXBvc2l0ID0gZGVwb3NpdDtcbiAgICB9XG59XG5leHBvcnRzLkZ1bmN0aW9uQ2FsbCA9IEZ1bmN0aW9uQ2FsbDtcbmNsYXNzIFRyYW5zZmVyIHtcbiAgICBkZXBvc2l0O1xuICAgIGNvbnN0cnVjdG9yKHsgZGVwb3NpdCB9KSB7XG4gICAgICAgIHRoaXMuZGVwb3NpdCA9IGRlcG9zaXQ7XG4gICAgfVxufVxuZXhwb3J0cy5UcmFuc2ZlciA9IFRyYW5zZmVyO1xuY2xhc3MgU3Rha2Uge1xuICAgIHN0YWtlO1xuICAgIHB1YmxpY0tleTtcbiAgICBjb25zdHJ1Y3Rvcih7IHN0YWtlLCBwdWJsaWNLZXkgfSkge1xuICAgICAgICB0aGlzLnN0YWtlID0gc3Rha2U7XG4gICAgICAgIHRoaXMucHVibGljS2V5ID0gcHVibGljS2V5O1xuICAgIH1cbn1cbmV4cG9ydHMuU3Rha2UgPSBTdGFrZTtcbmNsYXNzIEFkZEtleSB7XG4gICAgcHVibGljS2V5O1xuICAgIGFjY2Vzc0tleTtcbiAgICBjb25zdHJ1Y3Rvcih7IHB1YmxpY0tleSwgYWNjZXNzS2V5IH0pIHtcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBwdWJsaWNLZXk7XG4gICAgICAgIHRoaXMuYWNjZXNzS2V5ID0gYWNjZXNzS2V5O1xuICAgIH1cbn1cbmV4cG9ydHMuQWRkS2V5ID0gQWRkS2V5O1xuY2xhc3MgRGVsZXRlS2V5IHtcbiAgICBwdWJsaWNLZXk7XG4gICAgY29uc3RydWN0b3IoeyBwdWJsaWNLZXkgfSkge1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IHB1YmxpY0tleTtcbiAgICB9XG59XG5leHBvcnRzLkRlbGV0ZUtleSA9IERlbGV0ZUtleTtcbmNsYXNzIERlbGV0ZUFjY291bnQge1xuICAgIGJlbmVmaWNpYXJ5SWQ7XG4gICAgY29uc3RydWN0b3IoeyBiZW5lZmljaWFyeUlkIH0pIHtcbiAgICAgICAgdGhpcy5iZW5lZmljaWFyeUlkID0gYmVuZWZpY2lhcnlJZDtcbiAgICB9XG59XG5leHBvcnRzLkRlbGV0ZUFjY291bnQgPSBEZWxldGVBY2NvdW50O1xuY2xhc3MgU2lnbmVkRGVsZWdhdGUge1xuICAgIGRlbGVnYXRlQWN0aW9uO1xuICAgIHNpZ25hdHVyZTtcbiAgICBjb25zdHJ1Y3Rvcih7IGRlbGVnYXRlQWN0aW9uLCBzaWduYXR1cmUgfSkge1xuICAgICAgICB0aGlzLmRlbGVnYXRlQWN0aW9uID0gZGVsZWdhdGVBY3Rpb247XG4gICAgICAgIHRoaXMuc2lnbmF0dXJlID0gc2lnbmF0dXJlO1xuICAgIH1cbn1cbmV4cG9ydHMuU2lnbmVkRGVsZWdhdGUgPSBTaWduZWREZWxlZ2F0ZTtcbi8qKlxuICogQ29udGFpbnMgYSBsaXN0IG9mIHRoZSB2YWxpZCB0cmFuc2FjdGlvbiBBY3Rpb25zIGF2YWlsYWJsZSB3aXRoIHRoaXMgQVBJXG4gKiBAc2VlIHtAbGluayBodHRwczovL25vbWljb24uaW8vUnVudGltZVNwZWMvQWN0aW9ucy5odG1sIHwgQWN0aW9ucyBTcGVjfVxuICovXG5jbGFzcyBBY3Rpb24gZXh0ZW5kcyB0eXBlc18xLkVudW0ge1xuICAgIGVudW07XG4gICAgY3JlYXRlQWNjb3VudDtcbiAgICBkZXBsb3lDb250cmFjdDtcbiAgICBmdW5jdGlvbkNhbGw7XG4gICAgdHJhbnNmZXI7XG4gICAgc3Rha2U7XG4gICAgYWRkS2V5O1xuICAgIGRlbGV0ZUtleTtcbiAgICBkZWxldGVBY2NvdW50O1xuICAgIHNpZ25lZERlbGVnYXRlO1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgZm9yIChjb25zdCBbaywgdl0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMgfHwge30pKSB7XG4gICAgICAgICAgICB0aGlzW2tdID0gdjtcbiAgICAgICAgICAgIHRoaXMuZW51bSA9IGs7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkFjdGlvbiA9IEFjdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/transactions/lib/commonjs/actions.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/transactions/lib/commonjs/create_transaction.cjs":
/*!********************************************************************************!*\
  !*** ./node_modules/@near-js/transactions/lib/commonjs/create_transaction.cjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTransaction = void 0;\nconst schema_1 = __webpack_require__(/*! ./schema.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/schema.cjs\");\n/**\n * Creates a new transaction object with the provided parameters.\n * @param signerId The NEAR account ID of the transaction signer.\n * @param publicKey The public key associated with the signer.\n * @param receiverId The NEAR account ID of the transaction receiver.\n * @param nonce The nonce value for the transaction, represented as a BN, string, or number.\n * @param actions An array of transaction actions to be performed.\n * @param blockHash The hash of the block where the transaction will be included.\n * @returns A new transaction object initialized with the provided parameters.\n */\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    const txNonce = typeof nonce === 'bigint' ? nonce : BigInt(nonce);\n    return new schema_1.Transaction({\n        signerId,\n        publicKey,\n        nonce: txNonce,\n        receiverId,\n        actions,\n        blockHash,\n    });\n}\nexports.createTransaction = createTransaction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9jcmVhdGVfdHJhbnNhY3Rpb24uY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQyx3RkFBYztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9jcmVhdGVfdHJhbnNhY3Rpb24uY2pzP2RlZGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVRyYW5zYWN0aW9uID0gdm9pZCAwO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWEuY2pzXCIpO1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHRyYW5zYWN0aW9uIG9iamVjdCB3aXRoIHRoZSBwcm92aWRlZCBwYXJhbWV0ZXJzLlxuICogQHBhcmFtIHNpZ25lcklkIFRoZSBORUFSIGFjY291bnQgSUQgb2YgdGhlIHRyYW5zYWN0aW9uIHNpZ25lci5cbiAqIEBwYXJhbSBwdWJsaWNLZXkgVGhlIHB1YmxpYyBrZXkgYXNzb2NpYXRlZCB3aXRoIHRoZSBzaWduZXIuXG4gKiBAcGFyYW0gcmVjZWl2ZXJJZCBUaGUgTkVBUiBhY2NvdW50IElEIG9mIHRoZSB0cmFuc2FjdGlvbiByZWNlaXZlci5cbiAqIEBwYXJhbSBub25jZSBUaGUgbm9uY2UgdmFsdWUgZm9yIHRoZSB0cmFuc2FjdGlvbiwgcmVwcmVzZW50ZWQgYXMgYSBCTiwgc3RyaW5nLCBvciBudW1iZXIuXG4gKiBAcGFyYW0gYWN0aW9ucyBBbiBhcnJheSBvZiB0cmFuc2FjdGlvbiBhY3Rpb25zIHRvIGJlIHBlcmZvcm1lZC5cbiAqIEBwYXJhbSBibG9ja0hhc2ggVGhlIGhhc2ggb2YgdGhlIGJsb2NrIHdoZXJlIHRoZSB0cmFuc2FjdGlvbiB3aWxsIGJlIGluY2x1ZGVkLlxuICogQHJldHVybnMgQSBuZXcgdHJhbnNhY3Rpb24gb2JqZWN0IGluaXRpYWxpemVkIHdpdGggdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zYWN0aW9uKHNpZ25lcklkLCBwdWJsaWNLZXksIHJlY2VpdmVySWQsIG5vbmNlLCBhY3Rpb25zLCBibG9ja0hhc2gpIHtcbiAgICBjb25zdCB0eE5vbmNlID0gdHlwZW9mIG5vbmNlID09PSAnYmlnaW50JyA/IG5vbmNlIDogQmlnSW50KG5vbmNlKTtcbiAgICByZXR1cm4gbmV3IHNjaGVtYV8xLlRyYW5zYWN0aW9uKHtcbiAgICAgICAgc2lnbmVySWQsXG4gICAgICAgIHB1YmxpY0tleSxcbiAgICAgICAgbm9uY2U6IHR4Tm9uY2UsXG4gICAgICAgIHJlY2VpdmVySWQsXG4gICAgICAgIGFjdGlvbnMsXG4gICAgICAgIGJsb2NrSGFzaCxcbiAgICB9KTtcbn1cbmV4cG9ydHMuY3JlYXRlVHJhbnNhY3Rpb24gPSBjcmVhdGVUcmFuc2FjdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/transactions/lib/commonjs/create_transaction.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/transactions/lib/commonjs/delegate.cjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@near-js/transactions/lib/commonjs/delegate.cjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildDelegateAction = exports.DelegateAction = void 0;\nconst action_creators_1 = __webpack_require__(/*! ./action_creators.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/action_creators.cjs\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, functionCall, stake, transfer, } = action_creators_1.actionCreators;\nclass DelegateAction {\n    senderId;\n    receiverId;\n    actions;\n    nonce;\n    maxBlockHeight;\n    publicKey;\n    constructor({ senderId, receiverId, actions, nonce, maxBlockHeight, publicKey }) {\n        this.senderId = senderId;\n        this.receiverId = receiverId;\n        this.actions = actions;\n        this.nonce = nonce;\n        this.maxBlockHeight = maxBlockHeight;\n        this.publicKey = publicKey;\n    }\n}\nexports.DelegateAction = DelegateAction;\n/**\n * Compose a delegate action for inclusion with a meta transaction signed on the sender's behalf\n * @param actions The set of actions to be included in the meta transaction\n * @param maxBlockHeight The maximum block height for which this action can be executed as part of a transaction\n * @param nonce Current nonce on the access key used to sign the delegate action\n * @param publicKey Public key for the access key used to sign the delegate action\n * @param receiverId Account ID for the intended receiver of the meta transaction\n * @param senderId Account ID for the intended signer of the delegate action\n */\nfunction buildDelegateAction({ actions, maxBlockHeight, nonce, publicKey, receiverId, senderId, }) {\n    return new DelegateAction({\n        senderId,\n        receiverId,\n        actions: actions.map((a) => {\n            // @ts-expect-error type workaround\n            if (!a.type && !a.params) {\n                return a;\n            }\n            // @ts-expect-error type workaround\n            switch (a.type) {\n                case 'AddKey': {\n                    // @ts-expect-error type workaround\n                    const { publicKey, accessKey } = a.params;\n                    return addKey(publicKey, accessKey);\n                }\n                case 'CreateAccount': {\n                    // @ts-expect-error type workaround\n                    return createAccount(a.params.createAccount);\n                }\n                case 'DeleteAccount': {\n                    // @ts-expect-error type workaround\n                    return deleteAccount(a.params.deleteAccount);\n                }\n                case 'DeleteKey': {\n                    // @ts-expect-error type workaround\n                    return deleteKey(a.params.publicKey);\n                }\n                case 'DeployContract': {\n                    // @ts-expect-error type workaround\n                    return deployContract(a.params.code);\n                }\n                case 'FunctionCall': {\n                    // @ts-expect-error type workaround\n                    const { methodName, args, gas, deposit } = a.params;\n                    return functionCall(methodName, args, gas, deposit);\n                }\n                case 'Stake': {\n                    // @ts-expect-error type workaround\n                    return stake(a.params.stake, a.params.publicKey);\n                }\n                case 'Transfer': {\n                    // @ts-expect-error type workaround\n                    const { deposit } = a.params;\n                    return transfer(deposit);\n                }\n            }\n            throw new Error('Unrecognized action');\n        }),\n        nonce,\n        maxBlockHeight,\n        publicKey,\n    });\n}\nexports.buildDelegateAction = buildDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9kZWxlZ2F0ZS5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsc0JBQXNCO0FBQ3BELDBCQUEwQixtQkFBTyxDQUFDLDBHQUF1QjtBQUN6RCxRQUFRLGtHQUFrRztBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpRUFBaUU7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isa0VBQWtFO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1QkFBdUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQ0FBaUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9kZWxlZ2F0ZS5janM/MTgzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYnVpbGREZWxlZ2F0ZUFjdGlvbiA9IGV4cG9ydHMuRGVsZWdhdGVBY3Rpb24gPSB2b2lkIDA7XG5jb25zdCBhY3Rpb25fY3JlYXRvcnNfMSA9IHJlcXVpcmUoXCIuL2FjdGlvbl9jcmVhdG9ycy5janNcIik7XG5jb25zdCB7IGFkZEtleSwgY3JlYXRlQWNjb3VudCwgZGVsZXRlQWNjb3VudCwgZGVsZXRlS2V5LCBkZXBsb3lDb250cmFjdCwgZnVuY3Rpb25DYWxsLCBzdGFrZSwgdHJhbnNmZXIsIH0gPSBhY3Rpb25fY3JlYXRvcnNfMS5hY3Rpb25DcmVhdG9ycztcbmNsYXNzIERlbGVnYXRlQWN0aW9uIHtcbiAgICBzZW5kZXJJZDtcbiAgICByZWNlaXZlcklkO1xuICAgIGFjdGlvbnM7XG4gICAgbm9uY2U7XG4gICAgbWF4QmxvY2tIZWlnaHQ7XG4gICAgcHVibGljS2V5O1xuICAgIGNvbnN0cnVjdG9yKHsgc2VuZGVySWQsIHJlY2VpdmVySWQsIGFjdGlvbnMsIG5vbmNlLCBtYXhCbG9ja0hlaWdodCwgcHVibGljS2V5IH0pIHtcbiAgICAgICAgdGhpcy5zZW5kZXJJZCA9IHNlbmRlcklkO1xuICAgICAgICB0aGlzLnJlY2VpdmVySWQgPSByZWNlaXZlcklkO1xuICAgICAgICB0aGlzLmFjdGlvbnMgPSBhY3Rpb25zO1xuICAgICAgICB0aGlzLm5vbmNlID0gbm9uY2U7XG4gICAgICAgIHRoaXMubWF4QmxvY2tIZWlnaHQgPSBtYXhCbG9ja0hlaWdodDtcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBwdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5EZWxlZ2F0ZUFjdGlvbiA9IERlbGVnYXRlQWN0aW9uO1xuLyoqXG4gKiBDb21wb3NlIGEgZGVsZWdhdGUgYWN0aW9uIGZvciBpbmNsdXNpb24gd2l0aCBhIG1ldGEgdHJhbnNhY3Rpb24gc2lnbmVkIG9uIHRoZSBzZW5kZXIncyBiZWhhbGZcbiAqIEBwYXJhbSBhY3Rpb25zIFRoZSBzZXQgb2YgYWN0aW9ucyB0byBiZSBpbmNsdWRlZCBpbiB0aGUgbWV0YSB0cmFuc2FjdGlvblxuICogQHBhcmFtIG1heEJsb2NrSGVpZ2h0IFRoZSBtYXhpbXVtIGJsb2NrIGhlaWdodCBmb3Igd2hpY2ggdGhpcyBhY3Rpb24gY2FuIGJlIGV4ZWN1dGVkIGFzIHBhcnQgb2YgYSB0cmFuc2FjdGlvblxuICogQHBhcmFtIG5vbmNlIEN1cnJlbnQgbm9uY2Ugb24gdGhlIGFjY2VzcyBrZXkgdXNlZCB0byBzaWduIHRoZSBkZWxlZ2F0ZSBhY3Rpb25cbiAqIEBwYXJhbSBwdWJsaWNLZXkgUHVibGljIGtleSBmb3IgdGhlIGFjY2VzcyBrZXkgdXNlZCB0byBzaWduIHRoZSBkZWxlZ2F0ZSBhY3Rpb25cbiAqIEBwYXJhbSByZWNlaXZlcklkIEFjY291bnQgSUQgZm9yIHRoZSBpbnRlbmRlZCByZWNlaXZlciBvZiB0aGUgbWV0YSB0cmFuc2FjdGlvblxuICogQHBhcmFtIHNlbmRlcklkIEFjY291bnQgSUQgZm9yIHRoZSBpbnRlbmRlZCBzaWduZXIgb2YgdGhlIGRlbGVnYXRlIGFjdGlvblxuICovXG5mdW5jdGlvbiBidWlsZERlbGVnYXRlQWN0aW9uKHsgYWN0aW9ucywgbWF4QmxvY2tIZWlnaHQsIG5vbmNlLCBwdWJsaWNLZXksIHJlY2VpdmVySWQsIHNlbmRlcklkLCB9KSB7XG4gICAgcmV0dXJuIG5ldyBEZWxlZ2F0ZUFjdGlvbih7XG4gICAgICAgIHNlbmRlcklkLFxuICAgICAgICByZWNlaXZlcklkLFxuICAgICAgICBhY3Rpb25zOiBhY3Rpb25zLm1hcCgoYSkgPT4ge1xuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgIGlmICghYS50eXBlICYmICFhLnBhcmFtcykge1xuICAgICAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgIHN3aXRjaCAoYS50eXBlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnQWRkS2V5Jzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHB1YmxpY0tleSwgYWNjZXNzS2V5IH0gPSBhLnBhcmFtcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFkZEtleShwdWJsaWNLZXksIGFjY2Vzc0tleSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ0NyZWF0ZUFjY291bnQnOiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVBY2NvdW50KGEucGFyYW1zLmNyZWF0ZUFjY291bnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdEZWxldGVBY2NvdW50Jzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGVsZXRlQWNjb3VudChhLnBhcmFtcy5kZWxldGVBY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSAnRGVsZXRlS2V5Jzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGVsZXRlS2V5KGEucGFyYW1zLnB1YmxpY0tleSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ0RlcGxveUNvbnRyYWN0Jzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGVwbG95Q29udHJhY3QoYS5wYXJhbXMuY29kZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ0Z1bmN0aW9uQ2FsbCc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBtZXRob2ROYW1lLCBhcmdzLCBnYXMsIGRlcG9zaXQgfSA9IGEucGFyYW1zO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb25DYWxsKG1ldGhvZE5hbWUsIGFyZ3MsIGdhcywgZGVwb3NpdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ1N0YWtlJzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3Rha2UoYS5wYXJhbXMuc3Rha2UsIGEucGFyYW1zLnB1YmxpY0tleSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ1RyYW5zZmVyJzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGRlcG9zaXQgfSA9IGEucGFyYW1zO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmZXIoZGVwb3NpdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbnJlY29nbml6ZWQgYWN0aW9uJyk7XG4gICAgICAgIH0pLFxuICAgICAgICBub25jZSxcbiAgICAgICAgbWF4QmxvY2tIZWlnaHQsXG4gICAgICAgIHB1YmxpY0tleSxcbiAgICB9KTtcbn1cbmV4cG9ydHMuYnVpbGREZWxlZ2F0ZUFjdGlvbiA9IGJ1aWxkRGVsZWdhdGVBY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/transactions/lib/commonjs/delegate.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/transactions/lib/commonjs/index.cjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@near-js/transactions/lib/commonjs/index.cjs ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./action_creators.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/action_creators.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./actions.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/actions.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./create_transaction.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/create_transaction.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./delegate.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/delegate.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./schema.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/schema.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./sign.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/sign.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./signature.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/signature.cjs\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLDBHQUF1QjtBQUM1QyxhQUFhLG1CQUFPLENBQUMsMEZBQWU7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLGdIQUEwQjtBQUMvQyxhQUFhLG1CQUFPLENBQUMsNEZBQWdCO0FBQ3JDLGFBQWEsbUJBQU8sQ0FBQyx3RkFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsb0ZBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLDhGQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9pbmRleC5janM/Y2YwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FjdGlvbl9jcmVhdG9ycy5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FjdGlvbnMuY2pzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jcmVhdGVfdHJhbnNhY3Rpb24uY2pzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZWxlZ2F0ZS5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NjaGVtYS5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NpZ24uY2pzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zaWduYXR1cmUuY2pzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/transactions/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/transactions/lib/commonjs/prefix.cjs":
/*!********************************************************************!*\
  !*** ./node_modules/@near-js/transactions/lib/commonjs/prefix.cjs ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DelegateActionPrefix = void 0;\nconst ACTIONABLE_MESSAGE_BASE = Math.pow(2, 30);\n// const NON_ACTIONABLE_MESSAGE_BASE = Math.pow(2, 31);\n/** The set of NEPs for which an [NEP-461](https://github.com/near/NEPs/pull/461) prefix is required on the message prior to hashing **/\nconst NEP = {\n    MetaTransactions: 366,\n};\n/** Base class for NEP message prefixes **/\nclass NEPPrefix {\n    prefix;\n    constructor({ prefix }) {\n        this.prefix = prefix;\n    }\n}\n/** Class for constructing prefixes on actionable (on-chain) messages **/\nclass ActionableMessagePrefix extends NEPPrefix {\n    /** Given the NEP number, set the prefix using 2^30 as the offset **/\n    constructor(prefix) {\n        super({ prefix: ACTIONABLE_MESSAGE_BASE + prefix });\n    }\n}\n/**\n * Class for constructing prefixes on non-actionable (off-chain) messages\n * @todo uncomment when off-chain messages are supported\n * **/\n// abstract class NonActionableMessagePrefix extends NEPPrefix {\n//     /** Given the NEP number, set the prefix using 2^31 as the offset **/\n//     protected constructor(prefix: number) {\n//         super({ prefix: NON_ACTIONABLE_MESSAGE_BASE + prefix });\n//     }\n// }\n/** Prefix for delegate actions whose signatures must always be distinguishable from valid transaction signatures **/\nclass DelegateActionPrefix extends ActionableMessagePrefix {\n    constructor() { super(NEP.MetaTransactions); }\n}\nexports.DelegateActionPrefix = DelegateActionPrefix;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9wcmVmaXguY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsUUFBUTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwQ0FBMEM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDhDQUE4QztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBLDRCQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9wcmVmaXguY2pzPzc0ZTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlbGVnYXRlQWN0aW9uUHJlZml4ID0gdm9pZCAwO1xuY29uc3QgQUNUSU9OQUJMRV9NRVNTQUdFX0JBU0UgPSBNYXRoLnBvdygyLCAzMCk7XG4vLyBjb25zdCBOT05fQUNUSU9OQUJMRV9NRVNTQUdFX0JBU0UgPSBNYXRoLnBvdygyLCAzMSk7XG4vKiogVGhlIHNldCBvZiBORVBzIGZvciB3aGljaCBhbiBbTkVQLTQ2MV0oaHR0cHM6Ly9naXRodWIuY29tL25lYXIvTkVQcy9wdWxsLzQ2MSkgcHJlZml4IGlzIHJlcXVpcmVkIG9uIHRoZSBtZXNzYWdlIHByaW9yIHRvIGhhc2hpbmcgKiovXG5jb25zdCBORVAgPSB7XG4gICAgTWV0YVRyYW5zYWN0aW9uczogMzY2LFxufTtcbi8qKiBCYXNlIGNsYXNzIGZvciBORVAgbWVzc2FnZSBwcmVmaXhlcyAqKi9cbmNsYXNzIE5FUFByZWZpeCB7XG4gICAgcHJlZml4O1xuICAgIGNvbnN0cnVjdG9yKHsgcHJlZml4IH0pIHtcbiAgICAgICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XG4gICAgfVxufVxuLyoqIENsYXNzIGZvciBjb25zdHJ1Y3RpbmcgcHJlZml4ZXMgb24gYWN0aW9uYWJsZSAob24tY2hhaW4pIG1lc3NhZ2VzICoqL1xuY2xhc3MgQWN0aW9uYWJsZU1lc3NhZ2VQcmVmaXggZXh0ZW5kcyBORVBQcmVmaXgge1xuICAgIC8qKiBHaXZlbiB0aGUgTkVQIG51bWJlciwgc2V0IHRoZSBwcmVmaXggdXNpbmcgMl4zMCBhcyB0aGUgb2Zmc2V0ICoqL1xuICAgIGNvbnN0cnVjdG9yKHByZWZpeCkge1xuICAgICAgICBzdXBlcih7IHByZWZpeDogQUNUSU9OQUJMRV9NRVNTQUdFX0JBU0UgKyBwcmVmaXggfSk7XG4gICAgfVxufVxuLyoqXG4gKiBDbGFzcyBmb3IgY29uc3RydWN0aW5nIHByZWZpeGVzIG9uIG5vbi1hY3Rpb25hYmxlIChvZmYtY2hhaW4pIG1lc3NhZ2VzXG4gKiBAdG9kbyB1bmNvbW1lbnQgd2hlbiBvZmYtY2hhaW4gbWVzc2FnZXMgYXJlIHN1cHBvcnRlZFxuICogKiovXG4vLyBhYnN0cmFjdCBjbGFzcyBOb25BY3Rpb25hYmxlTWVzc2FnZVByZWZpeCBleHRlbmRzIE5FUFByZWZpeCB7XG4vLyAgICAgLyoqIEdpdmVuIHRoZSBORVAgbnVtYmVyLCBzZXQgdGhlIHByZWZpeCB1c2luZyAyXjMxIGFzIHRoZSBvZmZzZXQgKiovXG4vLyAgICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKHByZWZpeDogbnVtYmVyKSB7XG4vLyAgICAgICAgIHN1cGVyKHsgcHJlZml4OiBOT05fQUNUSU9OQUJMRV9NRVNTQUdFX0JBU0UgKyBwcmVmaXggfSk7XG4vLyAgICAgfVxuLy8gfVxuLyoqIFByZWZpeCBmb3IgZGVsZWdhdGUgYWN0aW9ucyB3aG9zZSBzaWduYXR1cmVzIG11c3QgYWx3YXlzIGJlIGRpc3Rpbmd1aXNoYWJsZSBmcm9tIHZhbGlkIHRyYW5zYWN0aW9uIHNpZ25hdHVyZXMgKiovXG5jbGFzcyBEZWxlZ2F0ZUFjdGlvblByZWZpeCBleHRlbmRzIEFjdGlvbmFibGVNZXNzYWdlUHJlZml4IHtcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoTkVQLk1ldGFUcmFuc2FjdGlvbnMpOyB9XG59XG5leHBvcnRzLkRlbGVnYXRlQWN0aW9uUHJlZml4ID0gRGVsZWdhdGVBY3Rpb25QcmVmaXg7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/transactions/lib/commonjs/prefix.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/transactions/lib/commonjs/schema.cjs":
/*!********************************************************************!*\
  !*** ./node_modules/@near-js/transactions/lib/commonjs/schema.cjs ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SCHEMA = exports.SignedTransaction = exports.Transaction = exports.decodeSignedTransaction = exports.decodeTransaction = exports.encodeTransaction = exports.encodeSignedDelegate = exports.encodeDelegateAction = void 0;\nconst borsh_1 = __webpack_require__(/*! borsh */ \"(ssr)/./node_modules/borsh/lib/cjs/index.js\");\nconst prefix_1 = __webpack_require__(/*! ./prefix.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/prefix.cjs\");\n/**\n * Borsh-encode a delegate action for inclusion as an action within a meta transaction\n * NB per NEP-461 this requires a Borsh-serialized prefix specific to delegate actions, ensuring\n *  signed delegate actions may never be identical to signed transactions with the same fields\n * @param delegateAction Delegate action to be signed by the meta transaction sender\n */\nfunction encodeDelegateAction(delegateAction) {\n    return new Uint8Array([\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateActionPrefix, new prefix_1.DelegateActionPrefix()),\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateAction, delegateAction),\n    ]);\n}\nexports.encodeDelegateAction = encodeDelegateAction;\n/**\n * Borsh-encode a signed delegate for validation and execution by a relayer\n * @param signedDelegate Signed delegate to be executed in a meta transaction\n */\nfunction encodeSignedDelegate(signedDelegate) {\n    return (0, borsh_1.serialize)(exports.SCHEMA.SignedDelegate, signedDelegate);\n}\nexports.encodeSignedDelegate = encodeSignedDelegate;\n/**\n * Borsh-encode a transaction or signed transaction into a serialized form.\n * @param transaction The transaction or signed transaction object to be encoded.\n * @returns A serialized representation of the input transaction.\n */\nfunction encodeTransaction(transaction) {\n    const schema = transaction instanceof SignedTransaction ? exports.SCHEMA.SignedTransaction : exports.SCHEMA.Transaction;\n    return (0, borsh_1.serialize)(schema, transaction);\n}\nexports.encodeTransaction = encodeTransaction;\n/**\n * Borsh-decode a Transaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeTransaction(bytes) {\n    return new Transaction((0, borsh_1.deserialize)(exports.SCHEMA.Transaction, bytes));\n}\nexports.decodeTransaction = decodeTransaction;\n/**\n * Borsh-decode a SignedTransaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeSignedTransaction(bytes) {\n    return new SignedTransaction((0, borsh_1.deserialize)(exports.SCHEMA.SignedTransaction, bytes));\n}\nexports.decodeSignedTransaction = decodeSignedTransaction;\nclass Transaction {\n    signerId;\n    publicKey;\n    nonce;\n    receiverId;\n    actions;\n    blockHash;\n    constructor({ signerId, publicKey, nonce, receiverId, actions, blockHash }) {\n        this.signerId = signerId;\n        this.publicKey = publicKey;\n        this.nonce = nonce;\n        this.receiverId = receiverId;\n        this.actions = actions;\n        this.blockHash = blockHash;\n    }\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeTransaction(bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction {\n    transaction;\n    signature;\n    constructor({ transaction, signature }) {\n        this.transaction = transaction;\n        this.signature = signature;\n    }\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeSignedTransaction(bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\nexports.SCHEMA = new class BorshSchema {\n    Ed25519Signature = {\n        struct: {\n            data: { array: { type: 'u8', len: 64 } },\n        }\n    };\n    Secp256k1Signature = {\n        struct: {\n            data: { array: { type: 'u8', len: 65 } },\n        }\n    };\n    Signature = {\n        enum: [\n            { struct: { ed25519Signature: this.Ed25519Signature } },\n            { struct: { secp256k1Signature: this.Secp256k1Signature } },\n        ]\n    };\n    Ed25519Data = {\n        struct: {\n            data: { array: { type: 'u8', len: 32 } },\n        }\n    };\n    Secp256k1Data = {\n        struct: {\n            data: { array: { type: 'u8', len: 64 } },\n        }\n    };\n    PublicKey = {\n        enum: [\n            { struct: { ed25519Key: this.Ed25519Data } },\n            { struct: { secp256k1Key: this.Secp256k1Data } },\n        ]\n    };\n    FunctionCallPermission = {\n        struct: {\n            allowance: { option: 'u128' },\n            receiverId: 'string',\n            methodNames: { array: { type: 'string' } },\n        }\n    };\n    FullAccessPermission = {\n        struct: {}\n    };\n    AccessKeyPermission = {\n        enum: [\n            { struct: { functionCall: this.FunctionCallPermission } },\n            { struct: { fullAccess: this.FullAccessPermission } },\n        ]\n    };\n    AccessKey = {\n        struct: {\n            nonce: 'u64',\n            permission: this.AccessKeyPermission,\n        }\n    };\n    CreateAccount = {\n        struct: {}\n    };\n    DeployContract = {\n        struct: {\n            code: { array: { type: 'u8' } },\n        }\n    };\n    FunctionCall = {\n        struct: {\n            methodName: 'string',\n            args: { array: { type: 'u8' } },\n            gas: 'u64',\n            deposit: 'u128',\n        }\n    };\n    Transfer = {\n        struct: {\n            deposit: 'u128',\n        }\n    };\n    Stake = {\n        struct: {\n            stake: 'u128',\n            publicKey: this.PublicKey,\n        }\n    };\n    AddKey = {\n        struct: {\n            publicKey: this.PublicKey,\n            accessKey: this.AccessKey,\n        }\n    };\n    DeleteKey = {\n        struct: {\n            publicKey: this.PublicKey,\n        }\n    };\n    DeleteAccount = {\n        struct: {\n            beneficiaryId: 'string',\n        }\n    };\n    DelegateActionPrefix = {\n        struct: {\n            prefix: 'u32',\n        }\n    };\n    ClassicActions = {\n        enum: [\n            { struct: { createAccount: this.CreateAccount } },\n            { struct: { deployContract: this.DeployContract } },\n            { struct: { functionCall: this.FunctionCall } },\n            { struct: { transfer: this.Transfer } },\n            { struct: { stake: this.Stake } },\n            { struct: { addKey: this.AddKey } },\n            { struct: { deleteKey: this.DeleteKey } },\n            { struct: { deleteAccount: this.DeleteAccount } },\n        ]\n    };\n    DelegateAction = {\n        struct: {\n            senderId: 'string',\n            receiverId: 'string',\n            actions: { array: { type: this.ClassicActions } },\n            nonce: 'u64',\n            maxBlockHeight: 'u64',\n            publicKey: this.PublicKey,\n        }\n    };\n    SignedDelegate = {\n        struct: {\n            delegateAction: this.DelegateAction,\n            signature: this.Signature,\n        }\n    };\n    Action = {\n        enum: [\n            { struct: { createAccount: this.CreateAccount } },\n            { struct: { deployContract: this.DeployContract } },\n            { struct: { functionCall: this.FunctionCall } },\n            { struct: { transfer: this.Transfer } },\n            { struct: { stake: this.Stake } },\n            { struct: { addKey: this.AddKey } },\n            { struct: { deleteKey: this.DeleteKey } },\n            { struct: { deleteAccount: this.DeleteAccount } },\n            { struct: { signedDelegate: this.SignedDelegate } },\n        ]\n    };\n    Transaction = {\n        struct: {\n            signerId: 'string',\n            publicKey: this.PublicKey,\n            nonce: 'u64',\n            receiverId: 'string',\n            blockHash: { array: { type: 'u8', len: 32 } },\n            actions: { array: { type: this.Action } },\n        }\n    };\n    SignedTransaction = {\n        struct: {\n            transaction: this.Transaction,\n            signature: this.Signature,\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/transactions/lib/commonjs/schema.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/transactions/lib/commonjs/sign.cjs":
/*!******************************************************************!*\
  !*** ./node_modules/@near-js/transactions/lib/commonjs/sign.cjs ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.signDelegateAction = exports.signTransaction = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst actions_1 = __webpack_require__(/*! ./actions.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/actions.cjs\");\nconst create_transaction_1 = __webpack_require__(/*! ./create_transaction.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/create_transaction.cjs\");\nconst schema_1 = __webpack_require__(/*! ./schema.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/schema.cjs\");\nconst signature_1 = __webpack_require__(/*! ./signature.cjs */ \"(ssr)/./node_modules/@near-js/transactions/lib/commonjs/signature.cjs\");\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/index.cjs\");\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etc…)\n */\nasync function signTransactionObject(transaction, signer, accountId, networkId) {\n    const message = (0, schema_1.encodeTransaction)(transaction);\n    const hash = new Uint8Array((0, sha256_1.sha256)(message));\n    const signature = await signer.signMessage(message, accountId, networkId);\n    const keyType = transaction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n    const signedTx = new schema_1.SignedTransaction({\n        transaction,\n        signature: new signature_1.Signature({ keyType, data: signature.signature })\n    });\n    return [hash, signedTx];\n}\nasync function signTransaction(...args) {\n    if (args[0].constructor === schema_1.Transaction) {\n        const [transaction, signer, accountId, networkId] = args;\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n    else {\n        const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n        const publicKey = await signer.getPublicKey(accountId, networkId);\n        const transaction = (0, create_transaction_1.createTransaction)(accountId, publicKey, receiverId, nonce, actions, blockHash);\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n}\nexports.signTransaction = signTransaction;\n/**\n * Sign a delegate action\n * @options SignDelegate options\n * @param options.delegateAction Delegate action to be signed by the meta transaction sender\n * @param options.signer Signer instance for the meta transaction sender\n */\nasync function signDelegateAction({ delegateAction, signer }) {\n    const message = (0, schema_1.encodeDelegateAction)(delegateAction);\n    const signature = await signer.sign(message);\n    const keyType = delegateAction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n    const signedDelegateAction = new actions_1.SignedDelegate({\n        delegateAction,\n        signature: new signature_1.Signature({\n            keyType,\n            data: signature,\n        }),\n    });\n    return {\n        hash: new Uint8Array((0, sha256_1.sha256)(message)),\n        signedDelegateAction,\n    };\n}\nexports.signDelegateAction = signDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9zaWduLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsR0FBRyx1QkFBdUI7QUFDcEQsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGtCQUFrQixtQkFBTyxDQUFDLDBGQUFlO0FBQ3pDLDZCQUE2QixtQkFBTyxDQUFDLGdIQUEwQjtBQUMvRCxpQkFBaUIsbUJBQU8sQ0FBQyx3RkFBYztBQUN2QyxvQkFBb0IsbUJBQU8sQ0FBQyw4RkFBaUI7QUFDN0MsaUJBQWlCLG1CQUFPLENBQUMsb0ZBQWlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixRQUFRO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLG9DQUFvQztBQUNuRixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msd0JBQXdCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvY29tbW9uanMvc2lnbi5janM/YzUzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2lnbkRlbGVnYXRlQWN0aW9uID0gZXhwb3J0cy5zaWduVHJhbnNhY3Rpb24gPSB2b2lkIDA7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiKTtcbmNvbnN0IGFjdGlvbnNfMSA9IHJlcXVpcmUoXCIuL2FjdGlvbnMuY2pzXCIpO1xuY29uc3QgY3JlYXRlX3RyYW5zYWN0aW9uXzEgPSByZXF1aXJlKFwiLi9jcmVhdGVfdHJhbnNhY3Rpb24uY2pzXCIpO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWEuY2pzXCIpO1xuY29uc3Qgc2lnbmF0dXJlXzEgPSByZXF1aXJlKFwiLi9zaWduYXR1cmUuY2pzXCIpO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQG5lYXItanMvY3J5cHRvXCIpO1xuLyoqXG4gKiBTaWducyBhIGdpdmVuIHRyYW5zYWN0aW9uIGZyb20gYW4gYWNjb3VudCB3aXRoIGdpdmVuIGtleXMsIGFwcGxpZWQgdG8gdGhlIGdpdmVuIG5ldHdvcmtcbiAqIEBwYXJhbSB0cmFuc2FjdGlvbiBUaGUgVHJhbnNhY3Rpb24gb2JqZWN0IHRvIHNpZ25cbiAqIEBwYXJhbSBzaWduZXIgVGhlIHtTaWduZXJ9IG9iamVjdCB0aGF0IGFzc2lzdHMgd2l0aCBzaWduaW5nIGtleXNcbiAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIGh1bWFuLXJlYWRhYmxlIE5FQVIgYWNjb3VudCBuYW1lXG4gKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAqL1xuYXN5bmMgZnVuY3Rpb24gc2lnblRyYW5zYWN0aW9uT2JqZWN0KHRyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkKSB7XG4gICAgY29uc3QgbWVzc2FnZSA9ICgwLCBzY2hlbWFfMS5lbmNvZGVUcmFuc2FjdGlvbikodHJhbnNhY3Rpb24pO1xuICAgIGNvbnN0IGhhc2ggPSBuZXcgVWludDhBcnJheSgoMCwgc2hhMjU2XzEuc2hhMjU2KShtZXNzYWdlKSk7XG4gICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgc2lnbmVyLnNpZ25NZXNzYWdlKG1lc3NhZ2UsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICBjb25zdCBrZXlUeXBlID0gdHJhbnNhY3Rpb24ucHVibGljS2V5LmVkMjU1MTlLZXkgPyBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTkgOiBjcnlwdG9fMS5LZXlUeXBlLlNFQ1AyNTZLMTtcbiAgICBjb25zdCBzaWduZWRUeCA9IG5ldyBzY2hlbWFfMS5TaWduZWRUcmFuc2FjdGlvbih7XG4gICAgICAgIHRyYW5zYWN0aW9uLFxuICAgICAgICBzaWduYXR1cmU6IG5ldyBzaWduYXR1cmVfMS5TaWduYXR1cmUoeyBrZXlUeXBlLCBkYXRhOiBzaWduYXR1cmUuc2lnbmF0dXJlIH0pXG4gICAgfSk7XG4gICAgcmV0dXJuIFtoYXNoLCBzaWduZWRUeF07XG59XG5hc3luYyBmdW5jdGlvbiBzaWduVHJhbnNhY3Rpb24oLi4uYXJncykge1xuICAgIGlmIChhcmdzWzBdLmNvbnN0cnVjdG9yID09PSBzY2hlbWFfMS5UcmFuc2FjdGlvbikge1xuICAgICAgICBjb25zdCBbdHJhbnNhY3Rpb24sIHNpZ25lciwgYWNjb3VudElkLCBuZXR3b3JrSWRdID0gYXJncztcbiAgICAgICAgcmV0dXJuIHNpZ25UcmFuc2FjdGlvbk9iamVjdCh0cmFuc2FjdGlvbiwgc2lnbmVyLCBhY2NvdW50SWQsIG5ldHdvcmtJZCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBbcmVjZWl2ZXJJZCwgbm9uY2UsIGFjdGlvbnMsIGJsb2NrSGFzaCwgc2lnbmVyLCBhY2NvdW50SWQsIG5ldHdvcmtJZF0gPSBhcmdzO1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSBhd2FpdCBzaWduZXIuZ2V0UHVibGljS2V5KGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSAoMCwgY3JlYXRlX3RyYW5zYWN0aW9uXzEuY3JlYXRlVHJhbnNhY3Rpb24pKGFjY291bnRJZCwgcHVibGljS2V5LCByZWNlaXZlcklkLCBub25jZSwgYWN0aW9ucywgYmxvY2tIYXNoKTtcbiAgICAgICAgcmV0dXJuIHNpZ25UcmFuc2FjdGlvbk9iamVjdCh0cmFuc2FjdGlvbiwgc2lnbmVyLCBhY2NvdW50SWQsIG5ldHdvcmtJZCk7XG4gICAgfVxufVxuZXhwb3J0cy5zaWduVHJhbnNhY3Rpb24gPSBzaWduVHJhbnNhY3Rpb247XG4vKipcbiAqIFNpZ24gYSBkZWxlZ2F0ZSBhY3Rpb25cbiAqIEBvcHRpb25zIFNpZ25EZWxlZ2F0ZSBvcHRpb25zXG4gKiBAcGFyYW0gb3B0aW9ucy5kZWxlZ2F0ZUFjdGlvbiBEZWxlZ2F0ZSBhY3Rpb24gdG8gYmUgc2lnbmVkIGJ5IHRoZSBtZXRhIHRyYW5zYWN0aW9uIHNlbmRlclxuICogQHBhcmFtIG9wdGlvbnMuc2lnbmVyIFNpZ25lciBpbnN0YW5jZSBmb3IgdGhlIG1ldGEgdHJhbnNhY3Rpb24gc2VuZGVyXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHNpZ25EZWxlZ2F0ZUFjdGlvbih7IGRlbGVnYXRlQWN0aW9uLCBzaWduZXIgfSkge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgc2NoZW1hXzEuZW5jb2RlRGVsZWdhdGVBY3Rpb24pKGRlbGVnYXRlQWN0aW9uKTtcbiAgICBjb25zdCBzaWduYXR1cmUgPSBhd2FpdCBzaWduZXIuc2lnbihtZXNzYWdlKTtcbiAgICBjb25zdCBrZXlUeXBlID0gZGVsZWdhdGVBY3Rpb24ucHVibGljS2V5LmVkMjU1MTlLZXkgPyBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTkgOiBjcnlwdG9fMS5LZXlUeXBlLlNFQ1AyNTZLMTtcbiAgICBjb25zdCBzaWduZWREZWxlZ2F0ZUFjdGlvbiA9IG5ldyBhY3Rpb25zXzEuU2lnbmVkRGVsZWdhdGUoe1xuICAgICAgICBkZWxlZ2F0ZUFjdGlvbixcbiAgICAgICAgc2lnbmF0dXJlOiBuZXcgc2lnbmF0dXJlXzEuU2lnbmF0dXJlKHtcbiAgICAgICAgICAgIGtleVR5cGUsXG4gICAgICAgICAgICBkYXRhOiBzaWduYXR1cmUsXG4gICAgICAgIH0pLFxuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGhhc2g6IG5ldyBVaW50OEFycmF5KCgwLCBzaGEyNTZfMS5zaGEyNTYpKG1lc3NhZ2UpKSxcbiAgICAgICAgc2lnbmVkRGVsZWdhdGVBY3Rpb24sXG4gICAgfTtcbn1cbmV4cG9ydHMuc2lnbkRlbGVnYXRlQWN0aW9uID0gc2lnbkRlbGVnYXRlQWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/transactions/lib/commonjs/sign.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/transactions/lib/commonjs/signature.cjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@near-js/transactions/lib/commonjs/signature.cjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signature = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/crypto/lib/commonjs/index.cjs\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nclass ED25519Signature {\n    keyType = crypto_1.KeyType.ED25519;\n    data;\n}\nclass SECP256K1Signature {\n    keyType = crypto_1.KeyType.SECP256K1;\n    data;\n}\nfunction resolveEnumKeyName(keyType) {\n    switch (keyType) {\n        case crypto_1.KeyType.ED25519: {\n            return 'ed25519Signature';\n        }\n        case crypto_1.KeyType.SECP256K1: {\n            return 'secp256k1Signature';\n        }\n        default: {\n            throw Error(`unknown type ${keyType}`);\n        }\n    }\n}\nclass Signature extends types_1.Enum {\n    enum;\n    ed25519Signature;\n    secp256k1Signature;\n    constructor(signature) {\n        const keyName = resolveEnumKeyName(signature.keyType);\n        super({ [keyName]: signature });\n        this[keyName] = signature;\n        this.enum = keyName;\n    }\n    get signature() {\n        return this.ed25519Signature || this.secp256k1Signature;\n    }\n    get signatureType() {\n        return this.signature.keyType;\n    }\n    get data() {\n        return this.signature.data;\n    }\n}\nexports.Signature = Signature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9jb21tb25qcy9zaWduYXR1cmUuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQkFBaUIsbUJBQU8sQ0FBQyxvRkFBaUI7QUFDMUMsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsUUFBUTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isc0JBQXNCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL2NvbW1vbmpzL3NpZ25hdHVyZS5janM/NmU4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmF0dXJlID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQG5lYXItanMvY3J5cHRvXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmNsYXNzIEVEMjU1MTlTaWduYXR1cmUge1xuICAgIGtleVR5cGUgPSBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTk7XG4gICAgZGF0YTtcbn1cbmNsYXNzIFNFQ1AyNTZLMVNpZ25hdHVyZSB7XG4gICAga2V5VHlwZSA9IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxO1xuICAgIGRhdGE7XG59XG5mdW5jdGlvbiByZXNvbHZlRW51bUtleU5hbWUoa2V5VHlwZSkge1xuICAgIHN3aXRjaCAoa2V5VHlwZSkge1xuICAgICAgICBjYXNlIGNyeXB0b18xLktleVR5cGUuRUQyNTUxOToge1xuICAgICAgICAgICAgcmV0dXJuICdlZDI1NTE5U2lnbmF0dXJlJztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxOiB7XG4gICAgICAgICAgICByZXR1cm4gJ3NlY3AyNTZrMVNpZ25hdHVyZSc7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYHVua25vd24gdHlwZSAke2tleVR5cGV9YCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5jbGFzcyBTaWduYXR1cmUgZXh0ZW5kcyB0eXBlc18xLkVudW0ge1xuICAgIGVudW07XG4gICAgZWQyNTUxOVNpZ25hdHVyZTtcbiAgICBzZWNwMjU2azFTaWduYXR1cmU7XG4gICAgY29uc3RydWN0b3Ioc2lnbmF0dXJlKSB7XG4gICAgICAgIGNvbnN0IGtleU5hbWUgPSByZXNvbHZlRW51bUtleU5hbWUoc2lnbmF0dXJlLmtleVR5cGUpO1xuICAgICAgICBzdXBlcih7IFtrZXlOYW1lXTogc2lnbmF0dXJlIH0pO1xuICAgICAgICB0aGlzW2tleU5hbWVdID0gc2lnbmF0dXJlO1xuICAgICAgICB0aGlzLmVudW0gPSBrZXlOYW1lO1xuICAgIH1cbiAgICBnZXQgc2lnbmF0dXJlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lZDI1NTE5U2lnbmF0dXJlIHx8IHRoaXMuc2VjcDI1NmsxU2lnbmF0dXJlO1xuICAgIH1cbiAgICBnZXQgc2lnbmF0dXJlVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2lnbmF0dXJlLmtleVR5cGU7XG4gICAgfVxuICAgIGdldCBkYXRhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaWduYXR1cmUuZGF0YTtcbiAgICB9XG59XG5leHBvcnRzLlNpZ25hdHVyZSA9IFNpZ25hdHVyZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/transactions/lib/commonjs/signature.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/types/lib/commonjs/assignable.cjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@near-js/types/lib/commonjs/assignable.cjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Assignable = void 0;\n/* DEPRECATED - backward compatibility only */\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2NvbW1vbmpzL2Fzc2lnbmFibGUuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9jb21tb25qcy9hc3NpZ25hYmxlLmNqcz9hYWU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Bc3NpZ25hYmxlID0gdm9pZCAwO1xuLyogREVQUkVDQVRFRCAtIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkgb25seSAqL1xuY2xhc3MgQXNzaWduYWJsZSB7XG4gICAgY29uc3RydWN0b3IocHJvcGVydGllcykge1xuICAgICAgICBPYmplY3Qua2V5cyhwcm9wZXJ0aWVzKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgdGhpc1trZXldID0gcHJvcGVydGllc1trZXldO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLkFzc2lnbmFibGUgPSBBc3NpZ25hYmxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/types/lib/commonjs/assignable.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/types/lib/commonjs/enum.cjs":
/*!***********************************************************!*\
  !*** ./node_modules/@near-js/types/lib/commonjs/enum.cjs ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Enum = void 0;\n// TODO determine why subclassing is still necessary even though `enum`\n//  cannot be set in the base class or it will not be borsh-serializable\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Enum = Enum;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2NvbW1vbmpzL2VudW0uY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9jb21tb25qcy9lbnVtLmNqcz81MzJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FbnVtID0gdm9pZCAwO1xuLy8gVE9ETyBkZXRlcm1pbmUgd2h5IHN1YmNsYXNzaW5nIGlzIHN0aWxsIG5lY2Vzc2FyeSBldmVuIHRob3VnaCBgZW51bWBcbi8vICBjYW5ub3QgYmUgc2V0IGluIHRoZSBiYXNlIGNsYXNzIG9yIGl0IHdpbGwgbm90IGJlIGJvcnNoLXNlcmlhbGl6YWJsZVxuY2xhc3MgRW51bSB7XG4gICAgY29uc3RydWN0b3IocHJvcGVydGllcykge1xuICAgICAgICBpZiAoT2JqZWN0LmtleXMocHJvcGVydGllcykubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VudW0gY2FuIG9ubHkgdGFrZSBzaW5nbGUgdmFsdWUnKTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyhwcm9wZXJ0aWVzKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgdGhpc1trZXldID0gcHJvcGVydGllc1trZXldO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLkVudW0gPSBFbnVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/types/lib/commonjs/enum.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/types/lib/commonjs/errors.cjs":
/*!*************************************************************!*\
  !*** ./node_modules/@near-js/types/lib/commonjs/errors.cjs ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    type;\n    context;\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    transactionHash;\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2NvbW1vbmpzL2Vycm9ycy5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcsMkJBQTJCO0FBQ25HO0FBQ0E7QUFDQSxzRkFBc0YsMENBQTBDO0FBQ2hJO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLDBCQUEwQixTQUFTLE9BQU8sUUFBUSx1QkFBdUIseUJBQXlCO0FBQ2xHO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2NvbW1vbmpzL2Vycm9ycy5janM/NzZmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JDb250ZXh0ID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IGV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFBvc2l0aW9uYWxBcmdzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDb250cmFjdCBtZXRob2QgY2FsbHMgZXhwZWN0IG5hbWVkIGFyZ3VtZW50cyB3cmFwcGVkIGluIG9iamVjdCwgZS5nLiB7IGFyZ05hbWUxOiBhcmdWYWx1ZTEsIGFyZ05hbWUyOiBhcmdWYWx1ZTIgfScpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IFBvc2l0aW9uYWxBcmdzRXJyb3I7XG5jbGFzcyBBcmd1bWVudFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdOYW1lLCBhcmdUeXBlLCBhcmdWYWx1ZSkge1xuICAgICAgICBzdXBlcihgRXhwZWN0ZWQgJHthcmdUeXBlfSBmb3IgJyR7YXJnTmFtZX0nIGFyZ3VtZW50LCBidXQgZ290ICcke0pTT04uc3RyaW5naWZ5KGFyZ1ZhbHVlKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IEFyZ3VtZW50VHlwZUVycm9yO1xuY2xhc3MgVHlwZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICB0eXBlO1xuICAgIGNvbnRleHQ7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgdHlwZSwgY29udGV4dCkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZSB8fCAnVW50eXBlZEVycm9yJztcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcbiAgICB9XG59XG5leHBvcnRzLlR5cGVkRXJyb3IgPSBUeXBlZEVycm9yO1xuY2xhc3MgRXJyb3JDb250ZXh0IHtcbiAgICB0cmFuc2FjdGlvbkhhc2g7XG4gICAgY29uc3RydWN0b3IodHJhbnNhY3Rpb25IYXNoKSB7XG4gICAgICAgIHRoaXMudHJhbnNhY3Rpb25IYXNoID0gdHJhbnNhY3Rpb25IYXNoO1xuICAgIH1cbn1cbmV4cG9ydHMuRXJyb3JDb250ZXh0ID0gRXJyb3JDb250ZXh0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/types/lib/commonjs/errors.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs":
/*!************************************************************!*\
  !*** ./node_modules/@near-js/types/lib/commonjs/index.cjs ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./assignable.cjs */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/assignable.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./enum.cjs */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/enum.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./errors.cjs */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/errors.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./provider/index.cjs */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/provider/index.cjs\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2NvbW1vbmpzL2luZGV4LmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMseUZBQWtCO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQyw2RUFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsaUZBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLGlHQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2NvbW1vbmpzL2luZGV4LmNqcz9jNjhlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXNzaWduYWJsZS5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2VudW0uY2pzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lcnJvcnMuY2pzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlci9pbmRleC5janNcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/types/lib/commonjs/provider/index.cjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@near-js/types/lib/commonjs/provider/index.cjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = void 0;\nvar light_client_1 = __webpack_require__(/*! ./light_client.cjs */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/provider/light_client.cjs\");\nObject.defineProperty(exports, \"IdType\", ({ enumerable: true, get: function () { return light_client_1.IdType; } }));\nvar response_1 = __webpack_require__(/*! ./response.cjs */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/provider/response.cjs\");\nObject.defineProperty(exports, \"ExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.ExecutionStatusBasic; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.FinalExecutionStatusBasic; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2NvbW1vbmpzL3Byb3ZpZGVyL2luZGV4LmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEIsR0FBRyxjQUFjO0FBQ2pGLHFCQUFxQixtQkFBTyxDQUFDLHNHQUFvQjtBQUNqRCwwQ0FBeUMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDbEgsaUJBQWlCLG1CQUFPLENBQUMsOEZBQWdCO0FBQ3pDLHdEQUF1RCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUMxSSw2REFBNEQsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9jb21tb25qcy9wcm92aWRlci9pbmRleC5janM/ZWU0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRXhlY3V0aW9uU3RhdHVzQmFzaWMgPSBleHBvcnRzLklkVHlwZSA9IHZvaWQgMDtcbnZhciBsaWdodF9jbGllbnRfMSA9IHJlcXVpcmUoXCIuL2xpZ2h0X2NsaWVudC5janNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJZFR5cGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGxpZ2h0X2NsaWVudF8xLklkVHlwZTsgfSB9KTtcbnZhciByZXNwb25zZV8xID0gcmVxdWlyZShcIi4vcmVzcG9uc2UuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXhlY3V0aW9uU3RhdHVzQmFzaWNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlXzEuRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZV8xLkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/types/lib/commonjs/provider/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/types/lib/commonjs/provider/light_client.cjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@near-js/types/lib/commonjs/provider/light_client.cjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdType = void 0;\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType || (exports.IdType = IdType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2NvbW1vbmpzL3Byb3ZpZGVyL2xpZ2h0X2NsaWVudC5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGFBQWEsY0FBYyxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy90eXBlcy9saWIvY29tbW9uanMvcHJvdmlkZXIvbGlnaHRfY2xpZW50LmNqcz9jNGNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBORUFSIFJQQyBBUEkgcmVxdWVzdCB0eXBlcyBhbmQgcmVzcG9uc2VzXG4gKiBAbW9kdWxlXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSWRUeXBlID0gdm9pZCAwO1xudmFyIElkVHlwZTtcbihmdW5jdGlvbiAoSWRUeXBlKSB7XG4gICAgSWRUeXBlW1wiVHJhbnNhY3Rpb25cIl0gPSBcInRyYW5zYWN0aW9uXCI7XG4gICAgSWRUeXBlW1wiUmVjZWlwdFwiXSA9IFwicmVjZWlwdFwiO1xufSkoSWRUeXBlIHx8IChleHBvcnRzLklkVHlwZSA9IElkVHlwZSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/types/lib/commonjs/provider/light_client.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/types/lib/commonjs/provider/response.cjs":
/*!************************************************************************!*\
  !*** ./node_modules/@near-js/types/lib/commonjs/provider/response.cjs ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic || (exports.ExecutionStatusBasic = ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = FinalExecutionStatusBasic = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2NvbW1vbmpzL3Byb3ZpZGVyL3Jlc3BvbnNlLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMkJBQTJCLDRCQUE0Qiw0QkFBNEI7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDLGlDQUFpQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9jb21tb25qcy9wcm92aWRlci9yZXNwb25zZS5janM/ZWY0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRXhlY3V0aW9uU3RhdHVzQmFzaWMgPSB2b2lkIDA7XG52YXIgRXhlY3V0aW9uU3RhdHVzQmFzaWM7XG4oZnVuY3Rpb24gKEV4ZWN1dGlvblN0YXR1c0Jhc2ljKSB7XG4gICAgRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJVbmtub3duXCJdID0gXCJVbmtub3duXCI7XG4gICAgRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJQZW5kaW5nXCJdID0gXCJQZW5kaW5nXCI7XG4gICAgRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJGYWlsdXJlXCJdID0gXCJGYWlsdXJlXCI7XG59KShFeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0ge30pKTtcbnZhciBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljO1xuKGZ1bmN0aW9uIChGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljKSB7XG4gICAgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpY1tcIk5vdFN0YXJ0ZWRcIl0gPSBcIk5vdFN0YXJ0ZWRcIjtcbiAgICBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljW1wiU3RhcnRlZFwiXSA9IFwiU3RhcnRlZFwiO1xuICAgIEZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJGYWlsdXJlXCJdID0gXCJGYWlsdXJlXCI7XG59KShGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljIHx8IChleHBvcnRzLkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWMgPSBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/types/lib/commonjs/provider/response.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/constants.cjs":
/*!****************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/constants.cjs ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = 30000000000000n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2NvbnN0YW50cy5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2NvbnN0YW50cy5janM/MjQyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9GVU5DVElPTl9DQUxMX0dBUyA9IHZvaWQgMDtcbi8vIERlZmF1bHQgYW1vdW50IG9mIGdhcyB0byBiZSBzZW50IHdpdGggdGhlIGZ1bmN0aW9uIGNhbGxzLiBVc2VkIHRvIHBheSBmb3IgdGhlIGZlZXNcbi8vIGluY3VycmVkIHdoaWxlIHJ1bm5pbmcgdGhlIGNvbnRyYWN0IGV4ZWN1dGlvbi4gVGhlIHVudXNlZCBhbW91bnQgd2lsbCBiZSByZWZ1bmRlZCBiYWNrIHRvXG4vLyB0aGUgb3JpZ2luYXRvci5cbi8vIER1ZSB0byBwcm90b2NvbCBjaGFuZ2VzIHRoYXQgY2hhcmdlIHVwZnJvbnQgZm9yIHRoZSBtYXhpbXVtIHBvc3NpYmxlIGdhcyBwcmljZSBpbmZsYXRpb24gZHVlIHRvXG4vLyBmdWxsIGJsb2NrcywgdGhlIHByaWNlIG9mIG1heF9wcmVwYWlkX2dhcyBpcyBkZWNyZWFzZWQgdG8gYDMwMCAqIDEwKioxMmAuXG4vLyBGb3IgZGlzY3Vzc2lvbiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25lYXJwcm90b2NvbC9ORVBzL2lzc3Vlcy82N1xuZXhwb3J0cy5ERUZBVUxUX0ZVTkNUSU9OX0NBTExfR0FTID0gMzAwMDAwMDAwMDAwMDBuO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/constants.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/errors.cjs":
/*!********************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/errors/errors.cjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorMessages = void 0;\nconst error_messages_json_1 = __importDefault(__webpack_require__(/*! ./error_messages.json */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/error_messages.json\"));\nexports.ErrorMessages = error_messages_json_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2Vycm9ycy9lcnJvcnMuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLDhDQUE4QyxtQkFBTyxDQUFDLDBHQUF1QjtBQUM3RSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb21tb25qcy9lcnJvcnMvZXJyb3JzLmNqcz9iY2Q1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FcnJvck1lc3NhZ2VzID0gdm9pZCAwO1xuY29uc3QgZXJyb3JfbWVzc2FnZXNfanNvbl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2Vycm9yX21lc3NhZ2VzLmpzb25cIikpO1xuZXhwb3J0cy5FcnJvck1lc3NhZ2VzID0gZXJyb3JfbWVzc2FnZXNfanNvbl8xLmRlZmF1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/errors.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/index.cjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/errors/index.cjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseRpcError = exports.parseResultError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.ServerError = exports.ErrorMessages = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/errors.cjs\");\nObject.defineProperty(exports, \"ErrorMessages\", ({ enumerable: true, get: function () { return errors_1.ErrorMessages; } }));\nvar rpc_errors_1 = __webpack_require__(/*! ./rpc_errors.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/rpc_errors.cjs\");\nObject.defineProperty(exports, \"ServerError\", ({ enumerable: true, get: function () { return rpc_errors_1.ServerError; } }));\nObject.defineProperty(exports, \"formatError\", ({ enumerable: true, get: function () { return rpc_errors_1.formatError; } }));\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", ({ enumerable: true, get: function () { return rpc_errors_1.getErrorTypeFromErrorMessage; } }));\nObject.defineProperty(exports, \"parseResultError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseResultError; } }));\nObject.defineProperty(exports, \"parseRpcError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseRpcError; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2Vycm9ycy9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsd0JBQXdCLEdBQUcsb0NBQW9DLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcscUJBQXFCO0FBQzNKLGVBQWUsbUJBQU8sQ0FBQyx3RkFBYztBQUNyQyxpREFBZ0QsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDMUgsbUJBQW1CLG1CQUFPLENBQUMsZ0dBQWtCO0FBQzdDLCtDQUE4QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMxSCwrQ0FBOEMsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDMUgsZ0VBQStELEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQzVKLG9EQUFtRCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUNwSSxpREFBZ0QsRUFBRSxxQ0FBcUMsc0NBQXNDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb21tb25qcy9lcnJvcnMvaW5kZXguY2pzP2I0ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnBhcnNlUnBjRXJyb3IgPSBleHBvcnRzLnBhcnNlUmVzdWx0RXJyb3IgPSBleHBvcnRzLmdldEVycm9yVHlwZUZyb21FcnJvck1lc3NhZ2UgPSBleHBvcnRzLmZvcm1hdEVycm9yID0gZXhwb3J0cy5TZXJ2ZXJFcnJvciA9IGV4cG9ydHMuRXJyb3JNZXNzYWdlcyA9IHZvaWQgMDtcbnZhciBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuL2Vycm9ycy5janNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJFcnJvck1lc3NhZ2VzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5FcnJvck1lc3NhZ2VzOyB9IH0pO1xudmFyIHJwY19lcnJvcnNfMSA9IHJlcXVpcmUoXCIuL3JwY19lcnJvcnMuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5TZXJ2ZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZm9ybWF0RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmVzdWx0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5wYXJzZVJlc3VsdEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VScGNFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcnBjX2Vycm9yc18xLnBhcnNlUnBjRXJyb3I7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/rpc_errors.cjs":
/*!************************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/errors/rpc_errors.cjs ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"(ssr)/./node_modules/@near-js/types/lib/commonjs/index.cjs\");\nconst mustache_1 = __importDefault(__webpack_require__(/*! mustache */ \"(ssr)/./node_modules/mustache/mustache.js\"));\nconst format_1 = __webpack_require__(/*! ../format.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/format.cjs\");\nconst errors_1 = __webpack_require__(/*! ./errors.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/errors.cjs\");\nconst rpc_error_schema_json_1 = __importDefault(__webpack_require__(/*! ./rpc_error_schema.json */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/rpc_error_schema.json\"));\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => (0, format_1.formatNearAmount)(render(n))\n};\nclass ServerError extends types_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n    transaction_outcome;\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof errors_1.ErrorMessages[errorClassName] === 'string') {\n        return mustache_1.default.render(errors_1.ErrorMessages[errorClassName], {\n            ...errorData,\n            ...mustacheHelpers\n        });\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage, errorType) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /wasm execution failed with error: MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return errorType;\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/rpc_errors.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/format.cjs":
/*!*************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/format.cjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baseDecode = exports.baseEncode = exports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bs58_1 = __importDefault(__webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = 10n ** BigInt(exports.NEAR_NOMINATION_EXP);\n// Pre-calculate offsets used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = 10n;\nfor (let i = 0, offset = 5n; i < exports.NEAR_NOMINATION_EXP; i++, offset = offset * BN10) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    let balanceBN = BigInt(balance);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN += ROUNDING_OFFSETS[roundingExp];\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || \"0\";\n    const fractionStr = balance\n        .substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, \"0\")\n        .substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split(\".\");\n    const wholePart = split[0];\n    const fracPart = split[1] || \"\";\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, \"0\"));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, \"\").trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, \"\");\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, \"\");\n    if (value === \"\") {\n        return \"0\";\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, \"$1,$2\");\n    }\n    return value;\n}\n/**\n * Encodes a Uint8Array or string into base58\n * @param value Uint8Array or string representing a borsh encoded object\n * @returns string base58 encoding of the value\n */\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        const bytes = [];\n        for (let c = 0; c < value.length; c++) {\n            bytes.push(value.charCodeAt(c));\n        }\n        value = new Uint8Array(bytes);\n    }\n    return bs58_1.default.encode(value);\n}\nexports.baseEncode = baseEncode;\n/**\n * Decodes a base58 string into a Uint8Array\n * @param value base58 encoded string\n * @returns Uint8Array representing the decoded value\n */\nfunction baseDecode(value) {\n    return new Uint8Array(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/format.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs":
/*!************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/index.cjs ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./constants.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/constants.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./errors/index.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/index.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./format.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/format.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./logging.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/logging.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./provider.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/provider.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./validators.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/validators.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./logger/index.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/index.cjs\"), exports);\n__exportStar(__webpack_require__(/*! ./utils.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/utils.cjs\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2luZGV4LmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsdUZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyw2RkFBb0I7QUFDekMsYUFBYSxtQkFBTyxDQUFDLGlGQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyxtRkFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMscUZBQWdCO0FBQ3JDLGFBQWEsbUJBQU8sQ0FBQyx5RkFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLDZGQUFvQjtBQUN6QyxhQUFhLG1CQUFPLENBQUMsK0VBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb21tb25qcy9pbmRleC5janM/NmYzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnN0YW50cy5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9ycy9pbmRleC5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Zvcm1hdC5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2xvZ2dpbmcuY2pzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlci5janNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3ZhbGlkYXRvcnMuY2pzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2dnZXIvaW5kZXguY2pzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlscy5janNcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/console.logger.cjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/logger/console.logger.cjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    logLevels;\n    constructor(logLevels) {\n        this.logLevels = logLevels;\n    }\n    isLevelEnabled = (level) => {\n        return this.logLevels.includes(level);\n    };\n    print(level, message, ...optionalParams) {\n        switch (level) {\n            case 'error':\n            case 'fatal':\n                return console.error(message, ...optionalParams);\n            case 'warn':\n                return console.warn(message, ...optionalParams);\n            case 'log':\n                return console.log(message, ...optionalParams);\n            case 'debug':\n            case 'verbose':\n                return console.debug(message, ...optionalParams);\n        }\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose'))\n            return;\n        this.print('verbose', message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug'))\n            return;\n        this.print('debug', message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log'))\n            return;\n        this.print('log', message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn'))\n            return;\n        this.print('warn', message, ...optionalParams);\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error'))\n            return;\n        this.print('error', message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        if (!this.isLevelEnabled('fatal'))\n            return;\n        this.print('fatal', message, ...optionalParams);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2xvZ2dlci9jb25zb2xlLmxvZ2dlci5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb21tb25qcy9sb2dnZXIvY29uc29sZS5sb2dnZXIuY2pzP2MzZjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnNvbGVMb2dnZXIgPSB2b2lkIDA7XG5jbGFzcyBDb25zb2xlTG9nZ2VyIHtcbiAgICBsb2dMZXZlbHM7XG4gICAgY29uc3RydWN0b3IobG9nTGV2ZWxzKSB7XG4gICAgICAgIHRoaXMubG9nTGV2ZWxzID0gbG9nTGV2ZWxzO1xuICAgIH1cbiAgICBpc0xldmVsRW5hYmxlZCA9IChsZXZlbCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2dMZXZlbHMuaW5jbHVkZXMobGV2ZWwpO1xuICAgIH07XG4gICAgcHJpbnQobGV2ZWwsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHN3aXRjaCAobGV2ZWwpIHtcbiAgICAgICAgICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgICAgICAgIGNhc2UgJ2ZhdGFsJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgICAgICAgICBjYXNlICd3YXJuJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgICAgIGNhc2UgJ2xvZyc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgICAgIGNhc2UgJ2RlYnVnJzpcbiAgICAgICAgICAgIGNhc2UgJ3ZlcmJvc2UnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmRlYnVnKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2ZXJib3NlKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgndmVyYm9zZScpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByaW50KCd2ZXJib3NlJywgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICBkZWJ1ZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2RlYnVnJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ2RlYnVnJywgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICBsb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCdsb2cnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnbG9nJywgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICB3YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnd2FybicpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByaW50KCd3YXJuJywgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICBlcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2Vycm9yJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ2Vycm9yJywgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICBmYXRhbChtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2ZhdGFsJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ2ZhdGFsJywgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29uc29sZUxvZ2dlciA9IENvbnNvbGVMb2dnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/console.logger.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/index.cjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/logger/index.cjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = exports.ConsoleLogger = void 0;\nvar console_logger_1 = __webpack_require__(/*! ./console.logger.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/console.logger.cjs\");\nObject.defineProperty(exports, \"ConsoleLogger\", ({ enumerable: true, get: function () { return console_logger_1.ConsoleLogger; } }));\nvar logger_1 = __webpack_require__(/*! ./logger.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/logger.cjs\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2xvZ2dlci9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYyxHQUFHLHFCQUFxQjtBQUN0Qyx1QkFBdUIsbUJBQU8sQ0FBQyx3R0FBc0I7QUFDckQsaURBQWdELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ2xJLGVBQWUsbUJBQU8sQ0FBQyx3RkFBYztBQUNyQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb21tb25qcy9sb2dnZXIvaW5kZXguY2pzP2M4N2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ2dlciA9IGV4cG9ydHMuQ29uc29sZUxvZ2dlciA9IHZvaWQgMDtcbnZhciBjb25zb2xlX2xvZ2dlcl8xID0gcmVxdWlyZShcIi4vY29uc29sZS5sb2dnZXIuY2pzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29uc29sZUxvZ2dlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc29sZV9sb2dnZXJfMS5Db25zb2xlTG9nZ2VyOyB9IH0pO1xudmFyIGxvZ2dlcl8xID0gcmVxdWlyZShcIi4vbG9nZ2VyLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ2dlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyXzEuTG9nZ2VyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/logger.cjs":
/*!********************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/logger/logger.cjs ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nconst console_logger_1 = __webpack_require__(/*! ./console.logger.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/console.logger.cjs\");\nconst DEFAULT_LOG_LEVELS = [\n    'verbose',\n    'debug',\n    'log',\n    'warn',\n    'error',\n    'fatal',\n];\nconst DEFAULT_LOGGER = new console_logger_1.ConsoleLogger(DEFAULT_LOG_LEVELS);\n/**\n * Used to log the library messages\n */\nclass Logger {\n    static instanceRef = DEFAULT_LOGGER;\n    static overrideLogger = (logger) => {\n        this.instanceRef = logger;\n    };\n    static error(message, ...optionalParams) {\n        this.instanceRef?.error(message, ...optionalParams);\n    }\n    /**\n     * Write a 'log' level log.\n     */\n    static log(message, ...optionalParams) {\n        this.instanceRef?.log(message, ...optionalParams);\n    }\n    /**\n     * Write a 'warn' level log.\n     */\n    static warn(message, ...optionalParams) {\n        this.instanceRef?.warn(message, ...optionalParams);\n    }\n    /**\n     * Write a 'debug' level log.\n     */\n    static debug(message, ...optionalParams) {\n        this.instanceRef?.debug?.(message, ...optionalParams);\n    }\n    /**\n     * Write a 'verbose' level log.\n     */\n    static verbose(message, ...optionalParams) {\n        this.instanceRef?.verbose?.(message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        this.instanceRef?.fatal?.(message, ...optionalParams);\n    }\n}\nexports.Logger = Logger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2xvZ2dlci9sb2dnZXIuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCx5QkFBeUIsbUJBQU8sQ0FBQyx3R0FBc0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2xvZ2dlci9sb2dnZXIuY2pzPzMwMzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ2dlciA9IHZvaWQgMDtcbmNvbnN0IGNvbnNvbGVfbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9jb25zb2xlLmxvZ2dlci5janNcIik7XG5jb25zdCBERUZBVUxUX0xPR19MRVZFTFMgPSBbXG4gICAgJ3ZlcmJvc2UnLFxuICAgICdkZWJ1ZycsXG4gICAgJ2xvZycsXG4gICAgJ3dhcm4nLFxuICAgICdlcnJvcicsXG4gICAgJ2ZhdGFsJyxcbl07XG5jb25zdCBERUZBVUxUX0xPR0dFUiA9IG5ldyBjb25zb2xlX2xvZ2dlcl8xLkNvbnNvbGVMb2dnZXIoREVGQVVMVF9MT0dfTEVWRUxTKTtcbi8qKlxuICogVXNlZCB0byBsb2cgdGhlIGxpYnJhcnkgbWVzc2FnZXNcbiAqL1xuY2xhc3MgTG9nZ2VyIHtcbiAgICBzdGF0aWMgaW5zdGFuY2VSZWYgPSBERUZBVUxUX0xPR0dFUjtcbiAgICBzdGF0aWMgb3ZlcnJpZGVMb2dnZXIgPSAobG9nZ2VyKSA9PiB7XG4gICAgICAgIHRoaXMuaW5zdGFuY2VSZWYgPSBsb2dnZXI7XG4gICAgfTtcbiAgICBzdGF0aWMgZXJyb3IobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdGhpcy5pbnN0YW5jZVJlZj8uZXJyb3IobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICdsb2cnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgbG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHRoaXMuaW5zdGFuY2VSZWY/LmxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ3dhcm4nIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgd2FybihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB0aGlzLmluc3RhbmNlUmVmPy53YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSAnZGVidWcnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdGhpcy5pbnN0YW5jZVJlZj8uZGVidWc/LihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ3ZlcmJvc2UnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgdmVyYm9zZShtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB0aGlzLmluc3RhbmNlUmVmPy52ZXJib3NlPy4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICBzdGF0aWMgZmF0YWwobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdGhpcy5pbnN0YW5jZVJlZj8uZmF0YWw/LihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Mb2dnZXIgPSBMb2dnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/logger.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/logging.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/logging.cjs ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.printTxOutcomeLogs = exports.printTxOutcomeLogsAndFailures = void 0;\nconst errors_1 = __webpack_require__(/*! ./errors/index.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/index.cjs\");\nconst logger_1 = __webpack_require__(/*! ./logger/index.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/logger/index.cjs\");\n/**\n * Parse and print details from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.outcome the query execution response\n */\nfunction printTxOutcomeLogsAndFailures({ contractId, outcome, }) {\n    const flatLogs = [outcome.transaction_outcome, ...outcome.receipts_outcome]\n        .reduce((acc, it) => {\n        const isFailure = typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object';\n        if (it.outcome.logs.length || isFailure) {\n            return acc.concat({\n                receiptIds: it.outcome.receipt_ids,\n                logs: it.outcome.logs,\n                failure: typeof it.outcome.status === 'object' && it.outcome.status.Failure !== undefined\n                    ? (0, errors_1.parseRpcError)(it.outcome.status.Failure)\n                    : null\n            });\n        }\n        else {\n            return acc;\n        }\n    }, []);\n    for (const result of flatLogs) {\n        logger_1.Logger.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n        printTxOutcomeLogs({\n            contractId,\n            logs: result.logs,\n            prefix: '\\t',\n        });\n        if (result.failure) {\n            logger_1.Logger.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n        }\n    }\n}\nexports.printTxOutcomeLogsAndFailures = printTxOutcomeLogsAndFailures;\n/**\n * Format and print log output from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.logs log output from a query execution response\n * @param params.prefix string to append to the beginning of each log\n */\nfunction printTxOutcomeLogs({ contractId, logs, prefix = '', }) {\n    for (const log of logs) {\n        logger_1.Logger.log(`${prefix}Log [${contractId}]: ${log}`);\n    }\n}\nexports.printTxOutcomeLogs = printTxOutcomeLogs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL2xvZ2dpbmcuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHFDQUFxQztBQUNsRSxpQkFBaUIsbUJBQU8sQ0FBQyw2RkFBb0I7QUFDN0MsaUJBQWlCLG1CQUFPLENBQUMsNkZBQW9CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxzQkFBc0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxzQ0FBc0Msd0NBQXdDLElBQUksNkJBQTZCO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsK0NBQStDLFdBQVcsS0FBSyxlQUFlO0FBQzlFO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixnQ0FBZ0M7QUFDOUQ7QUFDQSwrQkFBK0IsT0FBTyxPQUFPLFdBQVcsS0FBSyxJQUFJO0FBQ2pFO0FBQ0E7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb21tb25qcy9sb2dnaW5nLmNqcz9hZTUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wcmludFR4T3V0Y29tZUxvZ3MgPSBleHBvcnRzLnByaW50VHhPdXRjb21lTG9nc0FuZEZhaWx1cmVzID0gdm9pZCAwO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnMvaW5kZXguY2pzXCIpO1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9sb2dnZXIvaW5kZXguY2pzXCIpO1xuLyoqXG4gKiBQYXJzZSBhbmQgcHJpbnQgZGV0YWlscyBmcm9tIGEgcXVlcnkgZXhlY3V0aW9uIHJlc3BvbnNlXG4gKiBAcGFyYW0gcGFyYW1zXG4gKiBAcGFyYW0gcGFyYW1zLmNvbnRyYWN0SWQgSUQgb2YgdGhlIGFjY291bnQvY29udHJhY3Qgd2hpY2ggbWFkZSB0aGUgcXVlcnlcbiAqIEBwYXJhbSBwYXJhbXMub3V0Y29tZSB0aGUgcXVlcnkgZXhlY3V0aW9uIHJlc3BvbnNlXG4gKi9cbmZ1bmN0aW9uIHByaW50VHhPdXRjb21lTG9nc0FuZEZhaWx1cmVzKHsgY29udHJhY3RJZCwgb3V0Y29tZSwgfSkge1xuICAgIGNvbnN0IGZsYXRMb2dzID0gW291dGNvbWUudHJhbnNhY3Rpb25fb3V0Y29tZSwgLi4ub3V0Y29tZS5yZWNlaXB0c19vdXRjb21lXVxuICAgICAgICAucmVkdWNlKChhY2MsIGl0KSA9PiB7XG4gICAgICAgIGNvbnN0IGlzRmFpbHVyZSA9IHR5cGVvZiBpdC5vdXRjb21lLnN0YXR1cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIGl0Lm91dGNvbWUuc3RhdHVzLkZhaWx1cmUgPT09ICdvYmplY3QnO1xuICAgICAgICBpZiAoaXQub3V0Y29tZS5sb2dzLmxlbmd0aCB8fCBpc0ZhaWx1cmUpIHtcbiAgICAgICAgICAgIHJldHVybiBhY2MuY29uY2F0KHtcbiAgICAgICAgICAgICAgICByZWNlaXB0SWRzOiBpdC5vdXRjb21lLnJlY2VpcHRfaWRzLFxuICAgICAgICAgICAgICAgIGxvZ3M6IGl0Lm91dGNvbWUubG9ncyxcbiAgICAgICAgICAgICAgICBmYWlsdXJlOiB0eXBlb2YgaXQub3V0Y29tZS5zdGF0dXMgPT09ICdvYmplY3QnICYmIGl0Lm91dGNvbWUuc3RhdHVzLkZhaWx1cmUgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICA/ICgwLCBlcnJvcnNfMS5wYXJzZVJwY0Vycm9yKShpdC5vdXRjb21lLnN0YXR1cy5GYWlsdXJlKVxuICAgICAgICAgICAgICAgICAgICA6IG51bGxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgfVxuICAgIH0sIFtdKTtcbiAgICBmb3IgKGNvbnN0IHJlc3VsdCBvZiBmbGF0TG9ncykge1xuICAgICAgICBsb2dnZXJfMS5Mb2dnZXIubG9nKGBSZWNlaXB0JHtyZXN1bHQucmVjZWlwdElkcy5sZW5ndGggPiAxID8gJ3MnIDogJyd9OiAke3Jlc3VsdC5yZWNlaXB0SWRzLmpvaW4oJywgJyl9YCk7XG4gICAgICAgIHByaW50VHhPdXRjb21lTG9ncyh7XG4gICAgICAgICAgICBjb250cmFjdElkLFxuICAgICAgICAgICAgbG9nczogcmVzdWx0LmxvZ3MsXG4gICAgICAgICAgICBwcmVmaXg6ICdcXHQnLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHJlc3VsdC5mYWlsdXJlKSB7XG4gICAgICAgICAgICBsb2dnZXJfMS5Mb2dnZXIud2FybihgXFx0RmFpbHVyZSBbJHtjb250cmFjdElkfV06ICR7cmVzdWx0LmZhaWx1cmV9YCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLnByaW50VHhPdXRjb21lTG9nc0FuZEZhaWx1cmVzID0gcHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXM7XG4vKipcbiAqIEZvcm1hdCBhbmQgcHJpbnQgbG9nIG91dHB1dCBmcm9tIGEgcXVlcnkgZXhlY3V0aW9uIHJlc3BvbnNlXG4gKiBAcGFyYW0gcGFyYW1zXG4gKiBAcGFyYW0gcGFyYW1zLmNvbnRyYWN0SWQgSUQgb2YgdGhlIGFjY291bnQvY29udHJhY3Qgd2hpY2ggbWFkZSB0aGUgcXVlcnlcbiAqIEBwYXJhbSBwYXJhbXMubG9ncyBsb2cgb3V0cHV0IGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXMucHJlZml4IHN0cmluZyB0byBhcHBlbmQgdG8gdGhlIGJlZ2lubmluZyBvZiBlYWNoIGxvZ1xuICovXG5mdW5jdGlvbiBwcmludFR4T3V0Y29tZUxvZ3MoeyBjb250cmFjdElkLCBsb2dzLCBwcmVmaXggPSAnJywgfSkge1xuICAgIGZvciAoY29uc3QgbG9nIG9mIGxvZ3MpIHtcbiAgICAgICAgbG9nZ2VyXzEuTG9nZ2VyLmxvZyhgJHtwcmVmaXh9TG9nIFske2NvbnRyYWN0SWR9XTogJHtsb2d9YCk7XG4gICAgfVxufVxuZXhwb3J0cy5wcmludFR4T3V0Y29tZUxvZ3MgPSBwcmludFR4T3V0Y29tZUxvZ3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/logging.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/provider.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/provider.cjs ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTransactionLastResult = void 0;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL3Byb3ZpZGVyLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb21tb25qcy9wcm92aWRlci5janM/NTlmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0ID0gdm9pZCAwO1xuLyoqIEBoaWRkZW4gKi9cbmZ1bmN0aW9uIGdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdCh0eFJlc3VsdCkge1xuICAgIGlmICh0eXBlb2YgdHhSZXN1bHQuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdHhSZXN1bHQuc3RhdHVzLlN1Y2Nlc3NWYWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBCdWZmZXIuZnJvbSh0eFJlc3VsdC5zdGF0dXMuU3VjY2Vzc1ZhbHVlLCAnYmFzZTY0JykudG9TdHJpbmcoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0cy5nZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQgPSBnZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/provider.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/utils.cjs":
/*!************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/utils.cjs ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sortBigIntAsc = void 0;\nfunction sortBigIntAsc(a, b) {\n    return (a < b ? -1 : a > b ? 1 : 0);\n}\nexports.sortBigIntAsc = sortBigIntAsc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL3V0aWxzLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvY29tbW9uanMvdXRpbHMuY2pzPzM3N2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNvcnRCaWdJbnRBc2MgPSB2b2lkIDA7XG5mdW5jdGlvbiBzb3J0QmlnSW50QXNjKGEsIGIpIHtcbiAgICByZXR1cm4gKGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwKTtcbn1cbmV4cG9ydHMuc29ydEJpZ0ludEFzYyA9IHNvcnRCaWdJbnRBc2M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/utils.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/validators.cjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/validators.cjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"(ssr)/./node_modules/depd/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils.cjs */ \"(ssr)/./node_modules/@near-js/utils/lib/commonjs/utils.cjs\");\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @param validators: current or next epoch validators.\n * @param maxNumberOfSeats: maximum number of seats in the network.\n * @param minimumStakeRatio: minimum stake ratio\n * @param protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = (0, depd_1.default)('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // hardcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const num = BigInt(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (stakesSum < num) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = 1n, right = stakesSum + 1n;\n    while (left !== right - 1n) {\n        const mid = (left + right) / 2n;\n        let found = false;\n        let currentSum = 0n;\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum + (stakes[i] / mid);\n            if (currentSum >= num) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum * BigInt(minimumStakeRatio[0]) / BigInt(minimumStakeRatio[1]);\n    }\n    else {\n        return stakes[0] + 1n;\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @param currentValidators: list of current validators.\n * @param nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2NvbW1vbmpzL3ZhbGlkYXRvcnMuY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcscUJBQXFCO0FBQ25ELCtCQUErQixtQkFBTyxDQUFDLGdEQUFNO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLCtFQUFhO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBKQUEwSjtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFtRDtBQUM1RTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvY29tbW9uanMvdmFsaWRhdG9ycy5janM/ZmIyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IGV4cG9ydHMuZmluZFNlYXRQcmljZSA9IHZvaWQgMDtcbmNvbnN0IGRlcGRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVwZFwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHMuY2pzXCIpO1xuLyoqIEZpbmRzIHNlYXQgcHJpY2UgZ2l2ZW4gdmFsaWRhdG9ycyBzdGFrZXMgYW5kIG51bWJlciBvZiBzZWF0cy5cbiAqICBDYWxjdWxhdGlvbiBmb2xsb3cgdGhlIHNwZWM6IGh0dHBzOi8vbm9taWNvbi5pby9FY29ub21pY3MvUkVBRE1FLmh0bWwjdmFsaWRhdG9yLXNlbGVjdGlvblxuICogQHBhcmFtIHZhbGlkYXRvcnM6IGN1cnJlbnQgb3IgbmV4dCBlcG9jaCB2YWxpZGF0b3JzLlxuICogQHBhcmFtIG1heE51bWJlck9mU2VhdHM6IG1heGltdW0gbnVtYmVyIG9mIHNlYXRzIGluIHRoZSBuZXR3b3JrLlxuICogQHBhcmFtIG1pbmltdW1TdGFrZVJhdGlvOiBtaW5pbXVtIHN0YWtlIHJhdGlvXG4gKiBAcGFyYW0gcHJvdG9jb2xWZXJzaW9uOiB2ZXJzaW9uIG9mIHRoZSBwcm90b2NvbCBmcm9tIGdlbmVzaXMgY29uZmlnXG4gKi9cbmZ1bmN0aW9uIGZpbmRTZWF0UHJpY2UodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cywgbWluaW11bVN0YWtlUmF0aW8sIHByb3RvY29sVmVyc2lvbikge1xuICAgIGlmIChwcm90b2NvbFZlcnNpb24gJiYgcHJvdG9jb2xWZXJzaW9uIDwgNDkpIHtcbiAgICAgICAgcmV0dXJuIGZpbmRTZWF0UHJpY2VGb3JQcm90b2NvbEJlZm9yZTQ5KHZhbGlkYXRvcnMsIG1heE51bWJlck9mU2VhdHMpO1xuICAgIH1cbiAgICBpZiAoIW1pbmltdW1TdGFrZVJhdGlvKSB7XG4gICAgICAgIGNvbnN0IGRlcHJlY2F0ZSA9ICgwLCBkZXBkXzEuZGVmYXVsdCkoJ2ZpbmRTZWF0UHJpY2UodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cyknKTtcbiAgICAgICAgZGVwcmVjYXRlKCdgdXNlIGBmaW5kU2VhdFByaWNlKHZhbGlkYXRvcnMsIG1heE51bWJlck9mU2VhdHMsIG1pbmltdW1TdGFrZVJhdGlvKWAgaW5zdGVhZCcpO1xuICAgICAgICBtaW5pbXVtU3Rha2VSYXRpbyA9IFsxLCA2MjUwXTsgLy8gaGFyZGNvZGVkIG1pbmltdW1TdGFrZVJhdGlvbiBmcm9tIDEyLzcvMjFcbiAgICB9XG4gICAgcmV0dXJuIGZpbmRTZWF0UHJpY2VGb3JQcm90b2NvbEFmdGVyNDkodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cywgbWluaW11bVN0YWtlUmF0aW8pO1xufVxuZXhwb3J0cy5maW5kU2VhdFByaWNlID0gZmluZFNlYXRQcmljZTtcbmZ1bmN0aW9uIGZpbmRTZWF0UHJpY2VGb3JQcm90b2NvbEJlZm9yZTQ5KHZhbGlkYXRvcnMsIG51bVNlYXRzKSB7XG4gICAgY29uc3Qgc3Rha2VzID0gdmFsaWRhdG9ycy5tYXAodiA9PiBCaWdJbnQodi5zdGFrZSkpLnNvcnQodXRpbHNfMS5zb3J0QmlnSW50QXNjKTtcbiAgICBjb25zdCBudW0gPSBCaWdJbnQobnVtU2VhdHMpO1xuICAgIGNvbnN0IHN0YWtlc1N1bSA9IHN0YWtlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICBpZiAoc3Rha2VzU3VtIDwgbnVtKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignU3Rha2VzIGFyZSBiZWxvdyBzZWF0cycpO1xuICAgIH1cbiAgICAvLyBhc3NlcnQgc3Rha2VzU3VtID49IG51bVNlYXRzXG4gICAgbGV0IGxlZnQgPSAxbiwgcmlnaHQgPSBzdGFrZXNTdW0gKyAxbjtcbiAgICB3aGlsZSAobGVmdCAhPT0gcmlnaHQgLSAxbikge1xuICAgICAgICBjb25zdCBtaWQgPSAobGVmdCArIHJpZ2h0KSAvIDJuO1xuICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGN1cnJlbnRTdW0gPSAwbjtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdGFrZXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGN1cnJlbnRTdW0gPSBjdXJyZW50U3VtICsgKHN0YWtlc1tpXSAvIG1pZCk7XG4gICAgICAgICAgICBpZiAoY3VycmVudFN1bSA+PSBudW0pIHtcbiAgICAgICAgICAgICAgICBsZWZ0ID0gbWlkO1xuICAgICAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIWZvdW5kKSB7XG4gICAgICAgICAgICByaWdodCA9IG1pZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbGVmdDtcbn1cbi8vIG5lYXJjb3JlIHJlZmVyZW5jZTogaHR0cHM6Ly9naXRodWIuY29tL25lYXIvbmVhcmNvcmUvYmxvYi81YThhZTI2M2VjMDc5MzBjZDM0ZDBkY2Y1YmNlZTI1MGM2N2MwMmFhL2NoYWluL2Vwb2NoX21hbmFnZXIvc3JjL3ZhbGlkYXRvcl9zZWxlY3Rpb24ucnMjTDMwODtMMzE1XG5mdW5jdGlvbiBmaW5kU2VhdFByaWNlRm9yUHJvdG9jb2xBZnRlcjQ5KHZhbGlkYXRvcnMsIG1heE51bWJlck9mU2VhdHMsIG1pbmltdW1TdGFrZVJhdGlvKSB7XG4gICAgaWYgKG1pbmltdW1TdGFrZVJhdGlvLmxlbmd0aCAhPSAyKSB7XG4gICAgICAgIHRocm93IEVycm9yKCdtaW5pbXVtU3Rha2VSYXRpbyBzaG91bGQgaGF2ZSAyIGVsZW1lbnRzJyk7XG4gICAgfVxuICAgIGNvbnN0IHN0YWtlcyA9IHZhbGlkYXRvcnMubWFwKHYgPT4gQmlnSW50KHYuc3Rha2UpKS5zb3J0KHV0aWxzXzEuc29ydEJpZ0ludEFzYyk7XG4gICAgY29uc3Qgc3Rha2VzU3VtID0gc3Rha2VzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIGlmICh2YWxpZGF0b3JzLmxlbmd0aCA8IG1heE51bWJlck9mU2VhdHMpIHtcbiAgICAgICAgcmV0dXJuIHN0YWtlc1N1bSAqIEJpZ0ludChtaW5pbXVtU3Rha2VSYXRpb1swXSkgLyBCaWdJbnQobWluaW11bVN0YWtlUmF0aW9bMV0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHN0YWtlc1swXSArIDFuO1xuICAgIH1cbn1cbi8qKiBEaWZmIHZhbGlkYXRvcnMgYmV0d2VlbiBjdXJyZW50IGFuZCBuZXh0IGVwb2NoLlxuICogUmV0dXJucyBhZGRpdGlvbnMsIHN1YnRyYWN0aW9ucyBhbmQgY2hhbmdlcyB0byB2YWxpZGF0b3Igc2V0LlxuICogQHBhcmFtIGN1cnJlbnRWYWxpZGF0b3JzOiBsaXN0IG9mIGN1cnJlbnQgdmFsaWRhdG9ycy5cbiAqIEBwYXJhbSBuZXh0VmFsaWRhdG9yczogbGlzdCBvZiBuZXh0IHZhbGlkYXRvcnMuXG4gKi9cbmZ1bmN0aW9uIGRpZmZFcG9jaFZhbGlkYXRvcnMoY3VycmVudFZhbGlkYXRvcnMsIG5leHRWYWxpZGF0b3JzKSB7XG4gICAgY29uc3QgdmFsaWRhdG9yc01hcCA9IG5ldyBNYXAoKTtcbiAgICBjdXJyZW50VmFsaWRhdG9ycy5mb3JFYWNoKHYgPT4gdmFsaWRhdG9yc01hcC5zZXQodi5hY2NvdW50X2lkLCB2KSk7XG4gICAgY29uc3QgbmV4dFZhbGlkYXRvcnNTZXQgPSBuZXcgU2V0KG5leHRWYWxpZGF0b3JzLm1hcCh2ID0+IHYuYWNjb3VudF9pZCkpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5ld1ZhbGlkYXRvcnM6IG5leHRWYWxpZGF0b3JzLmZpbHRlcih2ID0+ICF2YWxpZGF0b3JzTWFwLmhhcyh2LmFjY291bnRfaWQpKSxcbiAgICAgICAgcmVtb3ZlZFZhbGlkYXRvcnM6IGN1cnJlbnRWYWxpZGF0b3JzLmZpbHRlcih2ID0+ICFuZXh0VmFsaWRhdG9yc1NldC5oYXModi5hY2NvdW50X2lkKSksXG4gICAgICAgIGNoYW5nZWRWYWxpZGF0b3JzOiBuZXh0VmFsaWRhdG9ycy5maWx0ZXIodiA9PiAodmFsaWRhdG9yc01hcC5oYXModi5hY2NvdW50X2lkKSAmJiB2YWxpZGF0b3JzTWFwLmdldCh2LmFjY291bnRfaWQpLnN0YWtlICE9IHYuc3Rha2UpKVxuICAgICAgICAgICAgLm1hcCh2ID0+ICh7IGN1cnJlbnQ6IHZhbGlkYXRvcnNNYXAuZ2V0KHYuYWNjb3VudF9pZCksIG5leHQ6IHYgfSkpXG4gICAgfTtcbn1cbmV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IGRpZmZFcG9jaFZhbGlkYXRvcnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@near-js/utils/lib/commonjs/validators.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/error_messages.json":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/error_messages.json ***!
  \************************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","AccessKeyDoesNotExist":"Can\'t complete the action because access key {{public_key}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed","ShardCongested":"Shard {{shard_id}} rejected the transaction due to congestion level {{congestion_level}}, try again later","ShardStuck":"Shard {{shard_id}} rejected the transaction because it missed {{missed_chunks}} chunks and needs to recover before accepting new transactions, try again later"}');

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json ***!
  \**************************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"schema":{"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed","DeleteAccountWithLargeState","DelegateActionInvalidSignature","DelegateActionSenderDoesNotMatchTxReceiver","DelegateActionExpired","DelegateActionAccessKeyError","DelegateActionInvalidNonce","DelegateActionNonceTooLarge"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas","DelegateActionMustBeOnlyOne","UnsupportedProtocolFeature"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"AltBn128InvalidInput":{"name":"AltBn128InvalidInput","subtypes":[],"props":{"msg":""}},"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","forwarded_buffered_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_buffered_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DelegateActionExpired":{"name":"DelegateActionExpired","subtypes":[],"props":{}},"DelegateActionInvalidNonce":{"name":"DelegateActionInvalidNonce","subtypes":[],"props":{"ak_nonce":"","delegate_nonce":""}},"DelegateActionInvalidSignature":{"name":"DelegateActionInvalidSignature","subtypes":[],"props":{}},"DelegateActionMustBeOnlyOne":{"name":"DelegateActionMustBeOnlyOne","subtypes":[],"props":{}},"DelegateActionNonceTooLarge":{"name":"DelegateActionNonceTooLarge","subtypes":[],"props":{"delegate_nonce":"","upper_bound":""}},"DelegateActionSenderDoesNotMatchTxReceiver":{"name":"DelegateActionSenderDoesNotMatchTxReceiver","subtypes":[],"props":{"receiver_id":"","sender_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteAccountWithLargeState":{"name":"DeleteAccountWithLargeState","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"ECRecoverError":{"name":"ECRecoverError","subtypes":[],"props":{"msg":""}},"Ed25519VerifyInvalidInput":{"name":"Ed25519VerifyInvalidInput","subtypes":[],"props":{"msg":""}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated","ECRecoverError","AltBn128InvalidInput","Ed25519VerifyInvalidInput"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"IndirectCallToNull":{"name":"IndirectCallToNull","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","NonceTooLarge","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation","TransactionSizeExceeded","StorageError","ShardCongested","ShardStuck"],"props":{}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodNotFound","MethodInvalidSignature"],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NonceTooLarge":{"name":"NonceTooLarge","subtypes":[],"props":{"tx_nonce":"","upper_bound":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory","TooManyFunctions","TooManyLocals"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReceiptSizeExceeded":{"name":"ReceiptSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation","ReceiptSizeExceeded"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"ShardCongested":{"name":"ShardCongested","subtypes":[],"props":{"congestion_level":"","shard_id":""}},"ShardStuck":{"name":"ShardStuck","subtypes":[],"props":{"missed_chunks":"","shard_id":""}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TooManyFunctions":{"name":"TooManyFunctions","subtypes":[],"props":{}},"TooManyLocals":{"name":"TooManyLocals","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TransactionSizeExceeded":{"name":"TransactionSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"UnsupportedProtocolFeature":{"name":"UnsupportedProtocolFeature","subtypes":[],"props":{"protocol_feature":"","version":""}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","IndirectCallToNull","StackOverflow","GenericTrap"],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}');

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/error_messages.json":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/error_messages.json ***!
  \*********************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","AccessKeyDoesNotExist":"Can\'t complete the action because access key {{public_key}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed","ShardCongested":"Shard {{shard_id}} rejected the transaction due to congestion level {{congestion_level}}, try again later","ShardStuck":"Shard {{shard_id}} rejected the transaction because it missed {{missed_chunks}} chunks and needs to recover before accepting new transactions, try again later"}');

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-node/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json ***!
  \***********************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"schema":{"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed","DeleteAccountWithLargeState","DelegateActionInvalidSignature","DelegateActionSenderDoesNotMatchTxReceiver","DelegateActionExpired","DelegateActionAccessKeyError","DelegateActionInvalidNonce","DelegateActionNonceTooLarge"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas","DelegateActionMustBeOnlyOne","UnsupportedProtocolFeature"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"AltBn128InvalidInput":{"name":"AltBn128InvalidInput","subtypes":[],"props":{"msg":""}},"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","forwarded_buffered_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_buffered_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DelegateActionExpired":{"name":"DelegateActionExpired","subtypes":[],"props":{}},"DelegateActionInvalidNonce":{"name":"DelegateActionInvalidNonce","subtypes":[],"props":{"ak_nonce":"","delegate_nonce":""}},"DelegateActionInvalidSignature":{"name":"DelegateActionInvalidSignature","subtypes":[],"props":{}},"DelegateActionMustBeOnlyOne":{"name":"DelegateActionMustBeOnlyOne","subtypes":[],"props":{}},"DelegateActionNonceTooLarge":{"name":"DelegateActionNonceTooLarge","subtypes":[],"props":{"delegate_nonce":"","upper_bound":""}},"DelegateActionSenderDoesNotMatchTxReceiver":{"name":"DelegateActionSenderDoesNotMatchTxReceiver","subtypes":[],"props":{"receiver_id":"","sender_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteAccountWithLargeState":{"name":"DeleteAccountWithLargeState","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"ECRecoverError":{"name":"ECRecoverError","subtypes":[],"props":{"msg":""}},"Ed25519VerifyInvalidInput":{"name":"Ed25519VerifyInvalidInput","subtypes":[],"props":{"msg":""}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated","ECRecoverError","AltBn128InvalidInput","Ed25519VerifyInvalidInput"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"IndirectCallToNull":{"name":"IndirectCallToNull","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","NonceTooLarge","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation","TransactionSizeExceeded","StorageError","ShardCongested","ShardStuck"],"props":{}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodNotFound","MethodInvalidSignature"],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NonceTooLarge":{"name":"NonceTooLarge","subtypes":[],"props":{"tx_nonce":"","upper_bound":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory","TooManyFunctions","TooManyLocals"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReceiptSizeExceeded":{"name":"ReceiptSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation","ReceiptSizeExceeded"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"ShardCongested":{"name":"ShardCongested","subtypes":[],"props":{"congestion_level":"","shard_id":""}},"ShardStuck":{"name":"ShardStuck","subtypes":[],"props":{"missed_chunks":"","shard_id":""}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TooManyFunctions":{"name":"TooManyFunctions","subtypes":[],"props":{}},"TooManyLocals":{"name":"TooManyLocals","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TransactionSizeExceeded":{"name":"TransactionSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"UnsupportedProtocolFeature":{"name":"UnsupportedProtocolFeature","subtypes":[],"props":{"protocol_feature":"","version":""}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","IndirectCallToNull","StackOverflow","GenericTrap"],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}');

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/error_messages.json":
/*!*****************************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/errors/error_messages.json ***!
  \*****************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","AccessKeyDoesNotExist":"Can\'t complete the action because access key {{public_key}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed","ShardCongested":"Shard {{shard_id}} rejected the transaction due to congestion level {{congestion_level}}, try again later","ShardStuck":"Shard {{shard_id}} rejected the transaction because it missed {{missed_chunks}} chunks and needs to recover before accepting new transactions, try again later"}');

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/utils/lib/commonjs/errors/rpc_error_schema.json":
/*!*******************************************************************************!*\
  !*** ./node_modules/@near-js/utils/lib/commonjs/errors/rpc_error_schema.json ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"schema":{"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed","DeleteAccountWithLargeState","DelegateActionInvalidSignature","DelegateActionSenderDoesNotMatchTxReceiver","DelegateActionExpired","DelegateActionAccessKeyError","DelegateActionInvalidNonce","DelegateActionNonceTooLarge"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas","DelegateActionMustBeOnlyOne","UnsupportedProtocolFeature"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"AltBn128InvalidInput":{"name":"AltBn128InvalidInput","subtypes":[],"props":{"msg":""}},"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","forwarded_buffered_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_buffered_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DelegateActionExpired":{"name":"DelegateActionExpired","subtypes":[],"props":{}},"DelegateActionInvalidNonce":{"name":"DelegateActionInvalidNonce","subtypes":[],"props":{"ak_nonce":"","delegate_nonce":""}},"DelegateActionInvalidSignature":{"name":"DelegateActionInvalidSignature","subtypes":[],"props":{}},"DelegateActionMustBeOnlyOne":{"name":"DelegateActionMustBeOnlyOne","subtypes":[],"props":{}},"DelegateActionNonceTooLarge":{"name":"DelegateActionNonceTooLarge","subtypes":[],"props":{"delegate_nonce":"","upper_bound":""}},"DelegateActionSenderDoesNotMatchTxReceiver":{"name":"DelegateActionSenderDoesNotMatchTxReceiver","subtypes":[],"props":{"receiver_id":"","sender_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteAccountWithLargeState":{"name":"DeleteAccountWithLargeState","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"ECRecoverError":{"name":"ECRecoverError","subtypes":[],"props":{"msg":""}},"Ed25519VerifyInvalidInput":{"name":"Ed25519VerifyInvalidInput","subtypes":[],"props":{"msg":""}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated","ECRecoverError","AltBn128InvalidInput","Ed25519VerifyInvalidInput"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"IndirectCallToNull":{"name":"IndirectCallToNull","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","NonceTooLarge","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation","TransactionSizeExceeded","StorageError","ShardCongested","ShardStuck"],"props":{}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodNotFound","MethodInvalidSignature"],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NonceTooLarge":{"name":"NonceTooLarge","subtypes":[],"props":{"tx_nonce":"","upper_bound":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory","TooManyFunctions","TooManyLocals"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReceiptSizeExceeded":{"name":"ReceiptSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation","ReceiptSizeExceeded"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"ShardCongested":{"name":"ShardCongested","subtypes":[],"props":{"congestion_level":"","shard_id":""}},"ShardStuck":{"name":"ShardStuck","subtypes":[],"props":{"missed_chunks":"","shard_id":""}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TooManyFunctions":{"name":"TooManyFunctions","subtypes":[],"props":{}},"TooManyLocals":{"name":"TooManyLocals","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TransactionSizeExceeded":{"name":"TransactionSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"UnsupportedProtocolFeature":{"name":"UnsupportedProtocolFeature","subtypes":[],"props":{"protocol_feature":"","version":""}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","IndirectCallToNull","StackOverflow","GenericTrap"],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}');

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/error_messages.json":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/error_messages.json ***!
  \*********************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","AccessKeyDoesNotExist":"Can\'t complete the action because access key {{public_key}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed","ShardCongested":"Shard {{shard_id}} rejected the transaction due to congestion level {{congestion_level}}, try again later","ShardStuck":"Shard {{shard_id}} rejected the transaction because it missed {{missed_chunks}} chunks and needs to recover before accepting new transactions, try again later"}');

/***/ }),

/***/ "(ssr)/./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json ***!
  \***********************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"schema":{"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed","DeleteAccountWithLargeState","DelegateActionInvalidSignature","DelegateActionSenderDoesNotMatchTxReceiver","DelegateActionExpired","DelegateActionAccessKeyError","DelegateActionInvalidNonce","DelegateActionNonceTooLarge"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas","DelegateActionMustBeOnlyOne","UnsupportedProtocolFeature"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"AltBn128InvalidInput":{"name":"AltBn128InvalidInput","subtypes":[],"props":{"msg":""}},"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","forwarded_buffered_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_buffered_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DelegateActionExpired":{"name":"DelegateActionExpired","subtypes":[],"props":{}},"DelegateActionInvalidNonce":{"name":"DelegateActionInvalidNonce","subtypes":[],"props":{"ak_nonce":"","delegate_nonce":""}},"DelegateActionInvalidSignature":{"name":"DelegateActionInvalidSignature","subtypes":[],"props":{}},"DelegateActionMustBeOnlyOne":{"name":"DelegateActionMustBeOnlyOne","subtypes":[],"props":{}},"DelegateActionNonceTooLarge":{"name":"DelegateActionNonceTooLarge","subtypes":[],"props":{"delegate_nonce":"","upper_bound":""}},"DelegateActionSenderDoesNotMatchTxReceiver":{"name":"DelegateActionSenderDoesNotMatchTxReceiver","subtypes":[],"props":{"receiver_id":"","sender_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteAccountWithLargeState":{"name":"DeleteAccountWithLargeState","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"ECRecoverError":{"name":"ECRecoverError","subtypes":[],"props":{"msg":""}},"Ed25519VerifyInvalidInput":{"name":"Ed25519VerifyInvalidInput","subtypes":[],"props":{"msg":""}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated","ECRecoverError","AltBn128InvalidInput","Ed25519VerifyInvalidInput"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"IndirectCallToNull":{"name":"IndirectCallToNull","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","NonceTooLarge","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation","TransactionSizeExceeded","StorageError","ShardCongested","ShardStuck"],"props":{}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodNotFound","MethodInvalidSignature"],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NonceTooLarge":{"name":"NonceTooLarge","subtypes":[],"props":{"tx_nonce":"","upper_bound":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory","TooManyFunctions","TooManyLocals"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReceiptSizeExceeded":{"name":"ReceiptSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation","ReceiptSizeExceeded"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"ShardCongested":{"name":"ShardCongested","subtypes":[],"props":{"congestion_level":"","shard_id":""}},"ShardStuck":{"name":"ShardStuck","subtypes":[],"props":{"missed_chunks":"","shard_id":""}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TooManyFunctions":{"name":"TooManyFunctions","subtypes":[],"props":{}},"TooManyLocals":{"name":"TooManyLocals","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TransactionSizeExceeded":{"name":"TransactionSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"UnsupportedProtocolFeature":{"name":"UnsupportedProtocolFeature","subtypes":[],"props":{"protocol_feature":"","version":""}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","IndirectCallToNull","StackOverflow","GenericTrap"],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}');

/***/ })

};
;